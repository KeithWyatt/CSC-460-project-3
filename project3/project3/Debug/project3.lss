
project3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
<<<<<<< HEAD
  0 .data         00000004  00800200  00001222  000012b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001222  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001578  00800204  00800204  000012ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000012ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  00001330  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002752  00000000  00000000  00001538  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000123e  00000000  00000000  00003c8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000157f  00000000  00000000  00004ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005a8  00000000  00000000  00006448  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c2c  00000000  00000000  000069f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001517  00000000  00000000  0000761c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008b33  2**0
=======
  0 .data         00000004  00800200  00001320  000013b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001320  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000015f2  00800204  00800204  000013b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000013b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  00001428  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b9c  00000000  00000000  00001668  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001326  00000000  00000000  00004204  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015bb  00000000  00000000  0000552a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000060c  00000000  00000000  00006ae8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d7a  00000000  00000000  000070f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001409  00000000  00000000  00007e6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000250  00000000  00000000  00009277  2**0
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	7a c0       	rjmp	.+244    	; 0xf6 <__ctors_end>
       2:	00 00       	nop
<<<<<<< HEAD
       4:	99 c0       	rjmp	.+306    	; 0x138 <__bad_interrupt>
       6:	00 00       	nop
       8:	97 c0       	rjmp	.+302    	; 0x138 <__bad_interrupt>
       a:	00 00       	nop
       c:	95 c0       	rjmp	.+298    	; 0x138 <__bad_interrupt>
       e:	00 00       	nop
      10:	93 c0       	rjmp	.+294    	; 0x138 <__bad_interrupt>
      12:	00 00       	nop
      14:	91 c0       	rjmp	.+290    	; 0x138 <__bad_interrupt>
      16:	00 00       	nop
      18:	8f c0       	rjmp	.+286    	; 0x138 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	8d c0       	rjmp	.+282    	; 0x138 <__bad_interrupt>
      1e:	00 00       	nop
      20:	8b c0       	rjmp	.+278    	; 0x138 <__bad_interrupt>
      22:	00 00       	nop
      24:	89 c0       	rjmp	.+274    	; 0x138 <__bad_interrupt>
      26:	00 00       	nop
      28:	87 c0       	rjmp	.+270    	; 0x138 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	85 c0       	rjmp	.+266    	; 0x138 <__bad_interrupt>
      2e:	00 00       	nop
      30:	83 c0       	rjmp	.+262    	; 0x138 <__bad_interrupt>
      32:	00 00       	nop
      34:	81 c0       	rjmp	.+258    	; 0x138 <__bad_interrupt>
      36:	00 00       	nop
      38:	7f c0       	rjmp	.+254    	; 0x138 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	7d c0       	rjmp	.+250    	; 0x138 <__bad_interrupt>
      3e:	00 00       	nop
      40:	7b c0       	rjmp	.+246    	; 0x138 <__bad_interrupt>
      42:	00 00       	nop
      44:	79 c0       	rjmp	.+242    	; 0x138 <__bad_interrupt>
      46:	00 00       	nop
      48:	77 c0       	rjmp	.+238    	; 0x138 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	75 c0       	rjmp	.+234    	; 0x138 <__bad_interrupt>
      4e:	00 00       	nop
      50:	73 c0       	rjmp	.+230    	; 0x138 <__bad_interrupt>
      52:	00 00       	nop
      54:	71 c0       	rjmp	.+226    	; 0x138 <__bad_interrupt>
      56:	00 00       	nop
      58:	6f c0       	rjmp	.+222    	; 0x138 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	6d c0       	rjmp	.+218    	; 0x138 <__bad_interrupt>
      5e:	00 00       	nop
      60:	6b c0       	rjmp	.+214    	; 0x138 <__bad_interrupt>
      62:	00 00       	nop
      64:	69 c0       	rjmp	.+210    	; 0x138 <__bad_interrupt>
      66:	00 00       	nop
      68:	67 c0       	rjmp	.+206    	; 0x138 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	65 c0       	rjmp	.+202    	; 0x138 <__bad_interrupt>
      6e:	00 00       	nop
      70:	63 c0       	rjmp	.+198    	; 0x138 <__bad_interrupt>
      72:	00 00       	nop
      74:	61 c0       	rjmp	.+194    	; 0x138 <__bad_interrupt>
      76:	00 00       	nop
      78:	5f c0       	rjmp	.+190    	; 0x138 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	5d c0       	rjmp	.+186    	; 0x138 <__bad_interrupt>
      7e:	00 00       	nop
      80:	0c 94 9f 08 	jmp	0x113e	; 0x113e <__vector_32>
      84:	59 c0       	rjmp	.+178    	; 0x138 <__bad_interrupt>
      86:	00 00       	nop
      88:	57 c0       	rjmp	.+174    	; 0x138 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	55 c0       	rjmp	.+170    	; 0x138 <__bad_interrupt>
      8e:	00 00       	nop
      90:	53 c0       	rjmp	.+166    	; 0x138 <__bad_interrupt>
      92:	00 00       	nop
      94:	51 c0       	rjmp	.+162    	; 0x138 <__bad_interrupt>
      96:	00 00       	nop
      98:	4f c0       	rjmp	.+158    	; 0x138 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	4d c0       	rjmp	.+154    	; 0x138 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	4b c0       	rjmp	.+150    	; 0x138 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	49 c0       	rjmp	.+146    	; 0x138 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	47 c0       	rjmp	.+142    	; 0x138 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	45 c0       	rjmp	.+138    	; 0x138 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	43 c0       	rjmp	.+134    	; 0x138 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	41 c0       	rjmp	.+130    	; 0x138 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	3f c0       	rjmp	.+126    	; 0x138 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	3d c0       	rjmp	.+122    	; 0x138 <__bad_interrupt>
      be:	00 00       	nop
      c0:	3b c0       	rjmp	.+118    	; 0x138 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	39 c0       	rjmp	.+114    	; 0x138 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	37 c0       	rjmp	.+110    	; 0x138 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	35 c0       	rjmp	.+106    	; 0x138 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	33 c0       	rjmp	.+102    	; 0x138 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	31 c0       	rjmp	.+98     	; 0x138 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	2f c0       	rjmp	.+94     	; 0x138 <__bad_interrupt>
      da:	00 00       	nop
      dc:	2d c0       	rjmp	.+90     	; 0x138 <__bad_interrupt>
      de:	00 00       	nop
      e0:	2b c0       	rjmp	.+86     	; 0x138 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	dc 06       	cpc	r13, r28
      e6:	b4 06       	cpc	r11, r20
      e8:	dc 06       	cpc	r13, r28
      ea:	ea 06       	cpc	r14, r26
      ec:	e0 06       	cpc	r14, r16
      ee:	f8 06       	cpc	r15, r24
      f0:	fe 06       	cpc	r15, r30
      f2:	0b 07       	cpc	r16, r27
      f4:	18 07       	cpc	r17, r24
=======
       4:	98 c0       	rjmp	.+304    	; 0x136 <__bad_interrupt>
       6:	00 00       	nop
       8:	96 c0       	rjmp	.+300    	; 0x136 <__bad_interrupt>
       a:	00 00       	nop
       c:	94 c0       	rjmp	.+296    	; 0x136 <__bad_interrupt>
       e:	00 00       	nop
      10:	92 c0       	rjmp	.+292    	; 0x136 <__bad_interrupt>
      12:	00 00       	nop
      14:	90 c0       	rjmp	.+288    	; 0x136 <__bad_interrupt>
      16:	00 00       	nop
      18:	8e c0       	rjmp	.+284    	; 0x136 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	8c c0       	rjmp	.+280    	; 0x136 <__bad_interrupt>
      1e:	00 00       	nop
      20:	8a c0       	rjmp	.+276    	; 0x136 <__bad_interrupt>
      22:	00 00       	nop
      24:	88 c0       	rjmp	.+272    	; 0x136 <__bad_interrupt>
      26:	00 00       	nop
      28:	86 c0       	rjmp	.+268    	; 0x136 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	84 c0       	rjmp	.+264    	; 0x136 <__bad_interrupt>
      2e:	00 00       	nop
      30:	82 c0       	rjmp	.+260    	; 0x136 <__bad_interrupt>
      32:	00 00       	nop
      34:	80 c0       	rjmp	.+256    	; 0x136 <__bad_interrupt>
      36:	00 00       	nop
      38:	7e c0       	rjmp	.+252    	; 0x136 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	7c c0       	rjmp	.+248    	; 0x136 <__bad_interrupt>
      3e:	00 00       	nop
      40:	7a c0       	rjmp	.+244    	; 0x136 <__bad_interrupt>
      42:	00 00       	nop
      44:	78 c0       	rjmp	.+240    	; 0x136 <__bad_interrupt>
      46:	00 00       	nop
      48:	76 c0       	rjmp	.+236    	; 0x136 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	74 c0       	rjmp	.+232    	; 0x136 <__bad_interrupt>
      4e:	00 00       	nop
      50:	72 c0       	rjmp	.+228    	; 0x136 <__bad_interrupt>
      52:	00 00       	nop
      54:	70 c0       	rjmp	.+224    	; 0x136 <__bad_interrupt>
      56:	00 00       	nop
      58:	6e c0       	rjmp	.+220    	; 0x136 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	6c c0       	rjmp	.+216    	; 0x136 <__bad_interrupt>
      5e:	00 00       	nop
      60:	6a c0       	rjmp	.+212    	; 0x136 <__bad_interrupt>
      62:	00 00       	nop
      64:	68 c0       	rjmp	.+208    	; 0x136 <__bad_interrupt>
      66:	00 00       	nop
      68:	66 c0       	rjmp	.+204    	; 0x136 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	64 c0       	rjmp	.+200    	; 0x136 <__bad_interrupt>
      6e:	00 00       	nop
      70:	62 c0       	rjmp	.+196    	; 0x136 <__bad_interrupt>
      72:	00 00       	nop
      74:	60 c0       	rjmp	.+192    	; 0x136 <__bad_interrupt>
      76:	00 00       	nop
      78:	5e c0       	rjmp	.+188    	; 0x136 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	5c c0       	rjmp	.+184    	; 0x136 <__bad_interrupt>
      7e:	00 00       	nop
      80:	0d c7       	rjmp	.+3610   	; 0xe9c <__vector_32>
      82:	00 00       	nop
      84:	58 c0       	rjmp	.+176    	; 0x136 <__bad_interrupt>
      86:	00 00       	nop
      88:	56 c0       	rjmp	.+172    	; 0x136 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	54 c0       	rjmp	.+168    	; 0x136 <__bad_interrupt>
      8e:	00 00       	nop
      90:	52 c0       	rjmp	.+164    	; 0x136 <__bad_interrupt>
      92:	00 00       	nop
      94:	50 c0       	rjmp	.+160    	; 0x136 <__bad_interrupt>
      96:	00 00       	nop
      98:	4e c0       	rjmp	.+156    	; 0x136 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	4c c0       	rjmp	.+152    	; 0x136 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	4a c0       	rjmp	.+148    	; 0x136 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	48 c0       	rjmp	.+144    	; 0x136 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	46 c0       	rjmp	.+140    	; 0x136 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	44 c0       	rjmp	.+136    	; 0x136 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	42 c0       	rjmp	.+132    	; 0x136 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	40 c0       	rjmp	.+128    	; 0x136 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	3e c0       	rjmp	.+124    	; 0x136 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	3c c0       	rjmp	.+120    	; 0x136 <__bad_interrupt>
      be:	00 00       	nop
      c0:	3a c0       	rjmp	.+116    	; 0x136 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	38 c0       	rjmp	.+112    	; 0x136 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	36 c0       	rjmp	.+108    	; 0x136 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	34 c0       	rjmp	.+104    	; 0x136 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	32 c0       	rjmp	.+100    	; 0x136 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	30 c0       	rjmp	.+96     	; 0x136 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	2e c0       	rjmp	.+92     	; 0x136 <__bad_interrupt>
      da:	00 00       	nop
      dc:	2c c0       	rjmp	.+88     	; 0x136 <__bad_interrupt>
      de:	00 00       	nop
      e0:	2a c0       	rjmp	.+84     	; 0x136 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	74 05       	cpc	r23, r4
      e6:	4c 05       	cpc	r20, r12
      e8:	74 05       	cpc	r23, r4
      ea:	82 05       	cpc	r24, r2
      ec:	78 05       	cpc	r23, r8
      ee:	90 05       	cpc	r25, r0
      f0:	96 05       	cpc	r25, r6
      f2:	a3 05       	cpc	r26, r3
      f4:	b0 05       	cpc	r27, r0
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57

000000f6 <__ctors_end>:
      f6:	11 24       	eor	r1, r1
      f8:	1f be       	out	0x3f, r1	; 63
      fa:	cf ef       	ldi	r28, 0xFF	; 255
      fc:	d1 e2       	ldi	r29, 0x21	; 33
      fe:	de bf       	out	0x3e, r29	; 62
     100:	cd bf       	out	0x3d, r28	; 61
     102:	00 e0       	ldi	r16, 0x00	; 0
     104:	0c bf       	out	0x3c, r16	; 60

00000106 <__do_copy_data>:
     106:	12 e0       	ldi	r17, 0x02	; 2
     108:	a0 e0       	ldi	r26, 0x00	; 0
     10a:	b2 e0       	ldi	r27, 0x02	; 2
<<<<<<< HEAD
     10c:	e2 e2       	ldi	r30, 0x22	; 34
     10e:	f2 e1       	ldi	r31, 0x12	; 18
=======
     10c:	e0 e2       	ldi	r30, 0x20	; 32
     10e:	f3 e1       	ldi	r31, 0x13	; 19
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
     110:	00 e0       	ldi	r16, 0x00	; 0
     112:	0b bf       	out	0x3b, r16	; 59
     114:	02 c0       	rjmp	.+4      	; 0x11a <__do_copy_data+0x14>
     116:	07 90       	elpm	r0, Z+
     118:	0d 92       	st	X+, r0
     11a:	a4 30       	cpi	r26, 0x04	; 4
     11c:	b1 07       	cpc	r27, r17
     11e:	d9 f7       	brne	.-10     	; 0x116 <__do_copy_data+0x10>

00000120 <__do_clear_bss>:
     120:	27 e1       	ldi	r18, 0x17	; 23
     122:	a4 e0       	ldi	r26, 0x04	; 4
     124:	b2 e0       	ldi	r27, 0x02	; 2
     126:	01 c0       	rjmp	.+2      	; 0x12a <.do_clear_bss_start>

00000128 <.do_clear_bss_loop>:
     128:	1d 92       	st	X+, r1

0000012a <.do_clear_bss_start>:
<<<<<<< HEAD
     12a:	ac 37       	cpi	r26, 0x7C	; 124
     12c:	b2 07       	cpc	r27, r18
     12e:	e1 f7       	brne	.-8      	; 0x128 <.do_clear_bss_loop>
     130:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <main>
     134:	0c 94 0f 09 	jmp	0x121e	; 0x121e <_exit>

00000138 <__bad_interrupt>:
     138:	63 cf       	rjmp	.-314    	; 0x0 <__vectors>

0000013a <CSwitch>:
=======
     12a:	a6 3f       	cpi	r26, 0xF6	; 246
     12c:	b2 07       	cpc	r27, r18
     12e:	e1 f7       	brne	.-8      	; 0x128 <.do_clear_bss_loop>
     130:	f2 d6       	rcall	.+3556   	; 0xf16 <main>
     132:	0c 94 8e 09 	jmp	0x131c	; 0x131c <_exit>

00000136 <__bad_interrupt>:
     136:	64 cf       	rjmp	.-312    	; 0x0 <__vectors>

00000138 <CSwitch>:
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
Exit_Kernel:
        /*
          * This is the "top" half of CSwitch(), generally called by the kernel.
          * Assume I = 0, i.e., all interrupts are disabled.
          */
        SAVECTX
<<<<<<< HEAD
     13a:	0f 92       	push	r0
     13c:	1f 92       	push	r1
     13e:	2f 92       	push	r2
     140:	3f 92       	push	r3
     142:	4f 92       	push	r4
     144:	5f 92       	push	r5
     146:	6f 92       	push	r6
     148:	7f 92       	push	r7
     14a:	8f 92       	push	r8
     14c:	9f 92       	push	r9
     14e:	af 92       	push	r10
     150:	bf 92       	push	r11
     152:	cf 92       	push	r12
     154:	df 92       	push	r13
     156:	ef 92       	push	r14
     158:	ff 92       	push	r15
     15a:	0f 93       	push	r16
     15c:	1f 93       	push	r17
     15e:	2f 93       	push	r18
     160:	3f 93       	push	r19
     162:	4f 93       	push	r20
     164:	5f 93       	push	r21
     166:	6f 93       	push	r22
     168:	7f 93       	push	r23
     16a:	8f 93       	push	r24
     16c:	9f 93       	push	r25
     16e:	af 93       	push	r26
     170:	bf 93       	push	r27
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	ef 93       	push	r30
     178:	ff 93       	push	r31
     17a:	fc b7       	in	r31, 0x3c	; 60
     17c:	ff 93       	push	r31
     17e:	0f b7       	in	r16, 0x3f	; 63
     180:	0f 93       	push	r16
=======
     138:	0f 92       	push	r0
     13a:	1f 92       	push	r1
     13c:	2f 92       	push	r2
     13e:	3f 92       	push	r3
     140:	4f 92       	push	r4
     142:	5f 92       	push	r5
     144:	6f 92       	push	r6
     146:	7f 92       	push	r7
     148:	8f 92       	push	r8
     14a:	9f 92       	push	r9
     14c:	af 92       	push	r10
     14e:	bf 92       	push	r11
     150:	cf 92       	push	r12
     152:	df 92       	push	r13
     154:	ef 92       	push	r14
     156:	ff 92       	push	r15
     158:	0f 93       	push	r16
     15a:	1f 93       	push	r17
     15c:	2f 93       	push	r18
     15e:	3f 93       	push	r19
     160:	4f 93       	push	r20
     162:	5f 93       	push	r21
     164:	6f 93       	push	r22
     166:	7f 93       	push	r23
     168:	8f 93       	push	r24
     16a:	9f 93       	push	r25
     16c:	af 93       	push	r26
     16e:	bf 93       	push	r27
     170:	cf 93       	push	r28
     172:	df 93       	push	r29
     174:	ef 93       	push	r30
     176:	ff 93       	push	r31
     178:	fc b7       	in	r31, 0x3c	; 60
     17a:	ff 93       	push	r31
     17c:	0f b7       	in	r16, 0x3f	; 63
     17e:	0f 93       	push	r16
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
        /*
          * Now, we have saved the kernel's context.
          * Save the current H/W stack pointer into KernelSp.
          */
        in   r30, SPL
<<<<<<< HEAD
     182:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
     184:	fe b7       	in	r31, 0x3e	; 62
        sts  KernelSp, r30
     186:	e0 93 7a 17 	sts	0x177A, r30	; 0x80177a <KernelSp>
        sts  KernelSp+1, r31
     18a:	f0 93 7b 17 	sts	0x177B, r31	; 0x80177b <KernelSp+0x1>
=======
     180:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
     182:	fe b7       	in	r31, 0x3e	; 62
        sts  KernelSp, r30
     184:	e0 93 7b 17 	sts	0x177B, r30	; 0x80177b <KernelSp>
        sts  KernelSp+1, r31
     188:	f0 93 7c 17 	sts	0x177C, r31	; 0x80177c <KernelSp+0x1>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
        /*
          * We are now ready to restore Cp's context, i.e.,
          * switching the H/W stack pointer to CurrentSp.
          */
        lds  r30, CurrentSp
<<<<<<< HEAD
     18e:	e0 91 78 17 	lds	r30, 0x1778	; 0x801778 <CurrentSp>
        lds  r31, CurrentSp+1
     192:	f0 91 79 17 	lds	r31, 0x1779	; 0x801779 <CurrentSp+0x1>
        out  SPL, r30
     196:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
     198:	fe bf       	out	0x3e, r31	; 62
=======
     18c:	e0 91 79 17 	lds	r30, 0x1779	; 0x801779 <CurrentSp>
        lds  r31, CurrentSp+1
     190:	f0 91 7a 17 	lds	r31, 0x177A	; 0x80177a <CurrentSp+0x1>
        out  SPL, r30
     194:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
     196:	fe bf       	out	0x3e, r31	; 62
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
        /*
          * We are now executing in Cp's stack.
          * Note: at the bottom of the Cp's context is its return address.
          */
        RESTORECTX
<<<<<<< HEAD
     19a:	0f 91       	pop	r16
     19c:	0f bf       	out	0x3f, r16	; 63
     19e:	ff 91       	pop	r31
     1a0:	fc bf       	out	0x3c, r31	; 60
     1a2:	ff 91       	pop	r31
     1a4:	ef 91       	pop	r30
     1a6:	df 91       	pop	r29
     1a8:	cf 91       	pop	r28
     1aa:	bf 91       	pop	r27
     1ac:	af 91       	pop	r26
     1ae:	9f 91       	pop	r25
     1b0:	8f 91       	pop	r24
     1b2:	7f 91       	pop	r23
     1b4:	6f 91       	pop	r22
     1b6:	5f 91       	pop	r21
     1b8:	4f 91       	pop	r20
     1ba:	3f 91       	pop	r19
     1bc:	2f 91       	pop	r18
     1be:	1f 91       	pop	r17
     1c0:	0f 91       	pop	r16
     1c2:	ff 90       	pop	r15
     1c4:	ef 90       	pop	r14
     1c6:	df 90       	pop	r13
     1c8:	cf 90       	pop	r12
     1ca:	bf 90       	pop	r11
     1cc:	af 90       	pop	r10
     1ce:	9f 90       	pop	r9
     1d0:	8f 90       	pop	r8
     1d2:	7f 90       	pop	r7
     1d4:	6f 90       	pop	r6
     1d6:	5f 90       	pop	r5
     1d8:	4f 90       	pop	r4
     1da:	3f 90       	pop	r3
     1dc:	2f 90       	pop	r2
     1de:	1f 90       	pop	r1
     1e0:	0f 90       	pop	r0
        reti         /* re-enable all global interrupts */
     1e2:	18 95       	reti

000001e4 <Enter_Kernel>:
=======
     198:	0f 91       	pop	r16
     19a:	0f bf       	out	0x3f, r16	; 63
     19c:	ff 91       	pop	r31
     19e:	fc bf       	out	0x3c, r31	; 60
     1a0:	ff 91       	pop	r31
     1a2:	ef 91       	pop	r30
     1a4:	df 91       	pop	r29
     1a6:	cf 91       	pop	r28
     1a8:	bf 91       	pop	r27
     1aa:	af 91       	pop	r26
     1ac:	9f 91       	pop	r25
     1ae:	8f 91       	pop	r24
     1b0:	7f 91       	pop	r23
     1b2:	6f 91       	pop	r22
     1b4:	5f 91       	pop	r21
     1b6:	4f 91       	pop	r20
     1b8:	3f 91       	pop	r19
     1ba:	2f 91       	pop	r18
     1bc:	1f 91       	pop	r17
     1be:	0f 91       	pop	r16
     1c0:	ff 90       	pop	r15
     1c2:	ef 90       	pop	r14
     1c4:	df 90       	pop	r13
     1c6:	cf 90       	pop	r12
     1c8:	bf 90       	pop	r11
     1ca:	af 90       	pop	r10
     1cc:	9f 90       	pop	r9
     1ce:	8f 90       	pop	r8
     1d0:	7f 90       	pop	r7
     1d2:	6f 90       	pop	r6
     1d4:	5f 90       	pop	r5
     1d6:	4f 90       	pop	r4
     1d8:	3f 90       	pop	r3
     1da:	2f 90       	pop	r2
     1dc:	1f 90       	pop	r1
     1de:	0f 90       	pop	r0
        reti         /* re-enable all global interrupts */
     1e0:	18 95       	reti

000001e2 <Enter_Kernel>:
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
Enter_Kernel:
        /*
          * This is the "bottom" half of CSwitch(). We are still executing in
          * Cp's context.
          */
        SAVECTX
<<<<<<< HEAD
     1e4:	0f 92       	push	r0
     1e6:	1f 92       	push	r1
     1e8:	2f 92       	push	r2
     1ea:	3f 92       	push	r3
     1ec:	4f 92       	push	r4
     1ee:	5f 92       	push	r5
     1f0:	6f 92       	push	r6
     1f2:	7f 92       	push	r7
     1f4:	8f 92       	push	r8
     1f6:	9f 92       	push	r9
     1f8:	af 92       	push	r10
     1fa:	bf 92       	push	r11
     1fc:	cf 92       	push	r12
     1fe:	df 92       	push	r13
     200:	ef 92       	push	r14
     202:	ff 92       	push	r15
     204:	0f 93       	push	r16
     206:	1f 93       	push	r17
     208:	2f 93       	push	r18
     20a:	3f 93       	push	r19
     20c:	4f 93       	push	r20
     20e:	5f 93       	push	r21
     210:	6f 93       	push	r22
     212:	7f 93       	push	r23
     214:	8f 93       	push	r24
     216:	9f 93       	push	r25
     218:	af 93       	push	r26
     21a:	bf 93       	push	r27
     21c:	cf 93       	push	r28
     21e:	df 93       	push	r29
     220:	ef 93       	push	r30
     222:	ff 93       	push	r31
     224:	fc b7       	in	r31, 0x3c	; 60
     226:	ff 93       	push	r31
     228:	0f b7       	in	r16, 0x3f	; 63
     22a:	0f 93       	push	r16
=======
     1e2:	0f 92       	push	r0
     1e4:	1f 92       	push	r1
     1e6:	2f 92       	push	r2
     1e8:	3f 92       	push	r3
     1ea:	4f 92       	push	r4
     1ec:	5f 92       	push	r5
     1ee:	6f 92       	push	r6
     1f0:	7f 92       	push	r7
     1f2:	8f 92       	push	r8
     1f4:	9f 92       	push	r9
     1f6:	af 92       	push	r10
     1f8:	bf 92       	push	r11
     1fa:	cf 92       	push	r12
     1fc:	df 92       	push	r13
     1fe:	ef 92       	push	r14
     200:	ff 92       	push	r15
     202:	0f 93       	push	r16
     204:	1f 93       	push	r17
     206:	2f 93       	push	r18
     208:	3f 93       	push	r19
     20a:	4f 93       	push	r20
     20c:	5f 93       	push	r21
     20e:	6f 93       	push	r22
     210:	7f 93       	push	r23
     212:	8f 93       	push	r24
     214:	9f 93       	push	r25
     216:	af 93       	push	r26
     218:	bf 93       	push	r27
     21a:	cf 93       	push	r28
     21c:	df 93       	push	r29
     21e:	ef 93       	push	r30
     220:	ff 93       	push	r31
     222:	fc b7       	in	r31, 0x3c	; 60
     224:	ff 93       	push	r31
     226:	0f b7       	in	r16, 0x3f	; 63
     228:	0f 93       	push	r16
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
        /*
          * Now, we have saved the Cp's context.
          * Save the current H/W stack pointer into CurrentSp.
          */
        in   r30, SPL
<<<<<<< HEAD
     22c:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
     22e:	fe b7       	in	r31, 0x3e	; 62
        sts  CurrentSp, r30
     230:	e0 93 78 17 	sts	0x1778, r30	; 0x801778 <CurrentSp>
        sts  CurrentSp+1, r31
     234:	f0 93 79 17 	sts	0x1779, r31	; 0x801779 <CurrentSp+0x1>
=======
     22a:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
     22c:	fe b7       	in	r31, 0x3e	; 62
        sts  CurrentSp, r30
     22e:	e0 93 79 17 	sts	0x1779, r30	; 0x801779 <CurrentSp>
        sts  CurrentSp+1, r31
     232:	f0 93 7a 17 	sts	0x177A, r31	; 0x80177a <CurrentSp+0x1>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
        /*
          * We are now ready to restore kernel's context, i.e.,
          * switching the H/W stack pointer back to KernelSp.
          */
        lds  r30, KernelSp
<<<<<<< HEAD
     238:	e0 91 7a 17 	lds	r30, 0x177A	; 0x80177a <KernelSp>
        lds  r31, KernelSp+1
     23c:	f0 91 7b 17 	lds	r31, 0x177B	; 0x80177b <KernelSp+0x1>
        out  SPL, r30
     240:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
     242:	fe bf       	out	0x3e, r31	; 62
=======
     236:	e0 91 7b 17 	lds	r30, 0x177B	; 0x80177b <KernelSp>
        lds  r31, KernelSp+1
     23a:	f0 91 7c 17 	lds	r31, 0x177C	; 0x80177c <KernelSp+0x1>
        out  SPL, r30
     23e:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
     240:	fe bf       	out	0x3e, r31	; 62
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
        /*
          * We are now executing in kernel's stack.
          */
       RESTORECTX
<<<<<<< HEAD
     244:	0f 91       	pop	r16
     246:	0f bf       	out	0x3f, r16	; 63
     248:	ff 91       	pop	r31
     24a:	fc bf       	out	0x3c, r31	; 60
     24c:	ff 91       	pop	r31
     24e:	ef 91       	pop	r30
     250:	df 91       	pop	r29
     252:	cf 91       	pop	r28
     254:	bf 91       	pop	r27
     256:	af 91       	pop	r26
     258:	9f 91       	pop	r25
     25a:	8f 91       	pop	r24
     25c:	7f 91       	pop	r23
     25e:	6f 91       	pop	r22
     260:	5f 91       	pop	r21
     262:	4f 91       	pop	r20
     264:	3f 91       	pop	r19
     266:	2f 91       	pop	r18
     268:	1f 91       	pop	r17
     26a:	0f 91       	pop	r16
     26c:	ff 90       	pop	r15
     26e:	ef 90       	pop	r14
     270:	df 90       	pop	r13
     272:	cf 90       	pop	r12
     274:	bf 90       	pop	r11
     276:	af 90       	pop	r10
     278:	9f 90       	pop	r9
     27a:	8f 90       	pop	r8
     27c:	7f 90       	pop	r7
     27e:	6f 90       	pop	r6
     280:	5f 90       	pop	r5
     282:	4f 90       	pop	r4
     284:	3f 90       	pop	r3
     286:	2f 90       	pop	r2
     288:	1f 90       	pop	r1
     28a:	0f 90       	pop	r0
=======
     242:	0f 91       	pop	r16
     244:	0f bf       	out	0x3f, r16	; 63
     246:	ff 91       	pop	r31
     248:	fc bf       	out	0x3c, r31	; 60
     24a:	ff 91       	pop	r31
     24c:	ef 91       	pop	r30
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	bf 91       	pop	r27
     254:	af 91       	pop	r26
     256:	9f 91       	pop	r25
     258:	8f 91       	pop	r24
     25a:	7f 91       	pop	r23
     25c:	6f 91       	pop	r22
     25e:	5f 91       	pop	r21
     260:	4f 91       	pop	r20
     262:	3f 91       	pop	r19
     264:	2f 91       	pop	r18
     266:	1f 91       	pop	r17
     268:	0f 91       	pop	r16
     26a:	ff 90       	pop	r15
     26c:	ef 90       	pop	r14
     26e:	df 90       	pop	r13
     270:	cf 90       	pop	r12
     272:	bf 90       	pop	r11
     274:	af 90       	pop	r10
     276:	9f 90       	pop	r9
     278:	8f 90       	pop	r8
     27a:	7f 90       	pop	r7
     27c:	6f 90       	pop	r6
     27e:	5f 90       	pop	r5
     280:	4f 90       	pop	r4
     282:	3f 90       	pop	r3
     284:	2f 90       	pop	r2
     286:	1f 90       	pop	r1
     288:	0f 90       	pop	r0
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
        /*
          * We are ready to return to the caller of CSwitch() (or Exit_Kernel()).
          * Note: We should NOT re-enable interrupts while kernel is running.
          *         Therefore, we use "ret", and not "reti".
          */
       ret
<<<<<<< HEAD
     28c:	08 95       	ret

0000028e <EnableLaserPin>:

	Task_Next();
	}
}
void test2(){
	EnableLaserPin2();
     28e:	40 9a       	sbi	0x08, 0	; 8
     290:	08 95       	ret

00000292 <DisableLaserPin>:
     292:	40 98       	cbi	0x08, 0	; 8
     294:	08 95       	ret

00000296 <LaserTask>:
     296:	84 b1       	in	r24, 0x04	; 4
     298:	84 b9       	out	0x04, r24	; 4
     29a:	28 9a       	sbi	0x05, 0	; 5
     29c:	d0 e0       	ldi	r29, 0x00	; 0
     29e:	01 e0       	ldi	r16, 0x01	; 1
     2a0:	10 e0       	ldi	r17, 0x00	; 0
     2a2:	18 9b       	sbis	0x03, 0	; 3
     2a4:	03 c0       	rjmp	.+6      	; 0x2ac <LaserTask+0x16>
     2a6:	f5 df       	rcall	.-22     	; 0x292 <DisableLaserPin>
     2a8:	c1 2f       	mov	r28, r17
     2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <LaserTask+0x1a>
     2ac:	f0 df       	rcall	.-32     	; 0x28e <EnableLaserPin>
     2ae:	c0 2f       	mov	r28, r16
     2b0:	cd 17       	cp	r28, r29
     2b2:	29 f0       	breq	.+10     	; 0x2be <LaserTask+0x28>
     2b4:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <LASER>
     2b8:	a2 d7       	rcall	.+3908   	; 0x11fe <Bluetooth_Send_Byte>
     2ba:	8c 2f       	mov	r24, r28
     2bc:	a0 d7       	rcall	.+3904   	; 0x11fe <Bluetooth_Send_Byte>
     2be:	9a d6       	rcall	.+3380   	; 0xff4 <Task_Next>
     2c0:	dc 2f       	mov	r29, r28
     2c2:	ef cf       	rjmp	.-34     	; 0x2a2 <LaserTask+0xc>

000002c4 <RoombaTask>:
     2c4:	e6 df       	rcall	.-52     	; 0x292 <DisableLaserPin>
     2c6:	0c e7       	ldi	r16, 0x7C	; 124
     2c8:	10 e0       	ldi	r17, 0x00	; 0
     2ca:	0f 2e       	mov	r0, r31
     2cc:	fb e7       	ldi	r31, 0x7B	; 123
     2ce:	af 2e       	mov	r10, r31
     2d0:	b1 2c       	mov	r11, r1
     2d2:	f0 2d       	mov	r31, r0
     2d4:	68 94       	set
     2d6:	99 24       	eor	r9, r9
     2d8:	93 f8       	bld	r9, 3
     2da:	ca e7       	ldi	r28, 0x7A	; 122
     2dc:	d0 e0       	ldi	r29, 0x00	; 0
     2de:	0f 2e       	mov	r0, r31
     2e0:	f8 e7       	ldi	r31, 0x78	; 120
     2e2:	cf 2e       	mov	r12, r31
     2e4:	d1 2c       	mov	r13, r1
     2e6:	f0 2d       	mov	r31, r0
     2e8:	0f 2e       	mov	r0, r31
     2ea:	f9 e7       	ldi	r31, 0x79	; 121
     2ec:	ef 2e       	mov	r14, r31
     2ee:	f1 2c       	mov	r15, r1
     2f0:	f0 2d       	mov	r31, r0
     2f2:	f8 01       	movw	r30, r16
     2f4:	80 81       	ld	r24, Z
     2f6:	80 7e       	andi	r24, 0xE0	; 224
     2f8:	80 83       	st	Z, r24
     2fa:	80 81       	ld	r24, Z
     2fc:	82 60       	ori	r24, 0x02	; 2
     2fe:	80 83       	st	Z, r24
     300:	f5 01       	movw	r30, r10
     302:	90 82       	st	Z, r9
     304:	88 81       	ld	r24, Y
     306:	80 64       	ori	r24, 0x40	; 64
     308:	88 83       	st	Y, r24
     30a:	88 81       	ld	r24, Y
     30c:	86 fd       	sbrc	r24, 6
     30e:	fd cf       	rjmp	.-6      	; 0x30a <RoombaTask+0x46>
     310:	f6 01       	movw	r30, r12
     312:	20 81       	ld	r18, Z
     314:	f7 01       	movw	r30, r14
     316:	80 81       	ld	r24, Z
     318:	30 e0       	ldi	r19, 0x00	; 0
     31a:	38 2b       	or	r19, r24
     31c:	f8 01       	movw	r30, r16
     31e:	80 81       	ld	r24, Z
     320:	80 7e       	andi	r24, 0xE0	; 224
     322:	80 83       	st	Z, r24
     324:	80 81       	ld	r24, Z
     326:	83 60       	ori	r24, 0x03	; 3
     328:	80 83       	st	Z, r24
     32a:	f5 01       	movw	r30, r10
     32c:	90 82       	st	Z, r9
     32e:	88 81       	ld	r24, Y
     330:	80 64       	ori	r24, 0x40	; 64
     332:	88 83       	st	Y, r24
     334:	88 81       	ld	r24, Y
     336:	86 fd       	sbrc	r24, 6
     338:	fd cf       	rjmp	.-6      	; 0x334 <RoombaTask+0x70>
     33a:	f6 01       	movw	r30, r12
     33c:	80 81       	ld	r24, Z
     33e:	f7 01       	movw	r30, r14
     340:	40 81       	ld	r20, Z
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	94 2b       	or	r25, r20
     346:	81 32       	cpi	r24, 0x21	; 33
     348:	f3 e0       	ldi	r31, 0x03	; 3
     34a:	9f 07       	cpc	r25, r31
     34c:	38 f0       	brcs	.+14     	; 0x35c <RoombaTask+0x98>
     34e:	a9 01       	movw	r20, r18
     350:	43 5c       	subi	r20, 0xC3	; 195
     352:	51 40       	sbci	r21, 0x01	; 1
     354:	43 36       	cpi	r20, 0x63	; 99
     356:	51 05       	cpc	r21, r1
     358:	98 f1       	brcs	.+102    	; 0x3c0 <RoombaTask+0xfc>
     35a:	0f c0       	rjmp	.+30     	; 0x37a <RoombaTask+0xb6>
     35c:	88 3c       	cpi	r24, 0xC8	; 200
     35e:	91 05       	cpc	r25, r1
     360:	60 f4       	brcc	.+24     	; 0x37a <RoombaTask+0xb6>
     362:	a9 01       	movw	r20, r18
     364:	43 5c       	subi	r20, 0xC3	; 195
     366:	51 40       	sbci	r21, 0x01	; 1
     368:	43 36       	cpi	r20, 0x63	; 99
     36a:	51 05       	cpc	r21, r1
     36c:	30 f4       	brcc	.+12     	; 0x37a <RoombaTask+0xb6>
     36e:	8f df       	rcall	.-226    	; 0x28e <EnableLaserPin>
     370:	0f 2e       	mov	r0, r31
     372:	f6 e4       	ldi	r31, 0x46	; 70
     374:	8f 2e       	mov	r8, r31
     376:	f0 2d       	mov	r31, r0
     378:	4a c0       	rjmp	.+148    	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     37a:	28 3c       	cpi	r18, 0xC8	; 200
     37c:	31 05       	cpc	r19, r1
     37e:	38 f4       	brcc	.+14     	; 0x38e <RoombaTask+0xca>
     380:	ac 01       	movw	r20, r24
     382:	43 5c       	subi	r20, 0xC3	; 195
     384:	51 40       	sbci	r21, 0x01	; 1
     386:	43 36       	cpi	r20, 0x63	; 99
     388:	51 05       	cpc	r21, r1
     38a:	f8 f0       	brcs	.+62     	; 0x3ca <RoombaTask+0x106>
     38c:	4b c0       	rjmp	.+150    	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     38e:	21 32       	cpi	r18, 0x21	; 33
     390:	43 e0       	ldi	r20, 0x03	; 3
     392:	34 07       	cpc	r19, r20
     394:	38 f0       	brcs	.+14     	; 0x3a4 <RoombaTask+0xe0>
     396:	ac 01       	movw	r20, r24
     398:	43 5c       	subi	r20, 0xC3	; 195
     39a:	51 40       	sbci	r21, 0x01	; 1
     39c:	43 36       	cpi	r20, 0x63	; 99
     39e:	51 05       	cpc	r21, r1
     3a0:	c8 f0       	brcs	.+50     	; 0x3d4 <RoombaTask+0x110>
     3a2:	3c c0       	rjmp	.+120    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     3a4:	81 32       	cpi	r24, 0x21	; 33
     3a6:	93 40       	sbci	r25, 0x03	; 3
     3a8:	d0 f0       	brcs	.+52     	; 0x3de <RoombaTask+0x11a>
     3aa:	28 3c       	cpi	r18, 0xC8	; 200
     3ac:	31 05       	cpc	r19, r1
     3ae:	e0 f0       	brcs	.+56     	; 0x3e8 <RoombaTask+0x124>
     3b0:	21 32       	cpi	r18, 0x21	; 33
     3b2:	33 40       	sbci	r19, 0x03	; 3
     3b4:	f0 f4       	brcc	.+60     	; 0x3f2 <RoombaTask+0x12e>
     3b6:	0f 2e       	mov	r0, r31
     3b8:	f8 e5       	ldi	r31, 0x58	; 88
     3ba:	8f 2e       	mov	r8, r31
     3bc:	f0 2d       	mov	r31, r0
     3be:	27 c0       	rjmp	.+78     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3c0:	0f 2e       	mov	r0, r31
     3c2:	f2 e4       	ldi	r31, 0x42	; 66
     3c4:	8f 2e       	mov	r8, r31
     3c6:	f0 2d       	mov	r31, r0
     3c8:	22 c0       	rjmp	.+68     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3ca:	0f 2e       	mov	r0, r31
     3cc:	fc e4       	ldi	r31, 0x4C	; 76
     3ce:	8f 2e       	mov	r8, r31
     3d0:	f0 2d       	mov	r31, r0
     3d2:	1d c0       	rjmp	.+58     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3d4:	0f 2e       	mov	r0, r31
     3d6:	f2 e5       	ldi	r31, 0x52	; 82
     3d8:	8f 2e       	mov	r8, r31
     3da:	f0 2d       	mov	r31, r0
     3dc:	18 c0       	rjmp	.+48     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3de:	0f 2e       	mov	r0, r31
     3e0:	f8 e5       	ldi	r31, 0x58	; 88
     3e2:	8f 2e       	mov	r8, r31
     3e4:	f0 2d       	mov	r31, r0
     3e6:	13 c0       	rjmp	.+38     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3e8:	0f 2e       	mov	r0, r31
     3ea:	f7 e4       	ldi	r31, 0x47	; 71
     3ec:	8f 2e       	mov	r8, r31
     3ee:	f0 2d       	mov	r31, r0
     3f0:	0e c0       	rjmp	.+28     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3f2:	0f 2e       	mov	r0, r31
     3f4:	fa e4       	ldi	r31, 0x4A	; 74
     3f6:	8f 2e       	mov	r8, r31
     3f8:	f0 2d       	mov	r31, r0
     3fa:	09 c0       	rjmp	.+18     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     3fc:	0f 2e       	mov	r0, r31
     3fe:	fb e4       	ldi	r31, 0x4B	; 75
     400:	8f 2e       	mov	r8, r31
     402:	f0 2d       	mov	r31, r0
     404:	04 c0       	rjmp	.+8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     406:	0f 2e       	mov	r0, r31
     408:	f9 e4       	ldi	r31, 0x49	; 73
     40a:	8f 2e       	mov	r8, r31
     40c:	f0 2d       	mov	r31, r0
     40e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <ROOMBA>
     412:	f5 d6       	rcall	.+3562   	; 0x11fe <Bluetooth_Send_Byte>
     414:	88 2d       	mov	r24, r8
     416:	f3 d6       	rcall	.+3558   	; 0x11fe <Bluetooth_Send_Byte>
     418:	ed d5       	rcall	.+3034   	; 0xff4 <Task_Next>
     41a:	6b cf       	rjmp	.-298    	; 0x2f2 <RoombaTask+0x2e>
     41c:	88 3c       	cpi	r24, 0xC8	; 200
     41e:	91 05       	cpc	r25, r1
     420:	68 f3       	brcs	.-38     	; 0x3fc <RoombaTask+0x138>
     422:	c0 cf       	rjmp	.-128    	; 0x3a4 <RoombaTask+0xe0>
     424:	88 3c       	cpi	r24, 0xC8	; 200
     426:	91 05       	cpc	r25, r1
     428:	70 f3       	brcs	.-36     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     42a:	bc cf       	rjmp	.-136    	; 0x3a4 <RoombaTask+0xe0>

0000042c <EnableLaserPin2>:
     42c:	41 9a       	sbi	0x08, 1	; 8
     42e:	08 95       	ret

00000430 <DisableLaserPin2>:
     430:	41 98       	cbi	0x08, 1	; 8
     432:	08 95       	ret

00000434 <ServoTask>:
     434:	0c e7       	ldi	r16, 0x7C	; 124
     436:	10 e0       	ldi	r17, 0x00	; 0
     438:	0f 2e       	mov	r0, r31
     43a:	fb e7       	ldi	r31, 0x7B	; 123
     43c:	af 2e       	mov	r10, r31
     43e:	b1 2c       	mov	r11, r1
     440:	f0 2d       	mov	r31, r0
     442:	68 94       	set
     444:	66 24       	eor	r6, r6
     446:	63 f8       	bld	r6, 3
     448:	ca e7       	ldi	r28, 0x7A	; 122
     44a:	d0 e0       	ldi	r29, 0x00	; 0
     44c:	0f 2e       	mov	r0, r31
     44e:	f8 e7       	ldi	r31, 0x78	; 120
     450:	cf 2e       	mov	r12, r31
     452:	d1 2c       	mov	r13, r1
     454:	f0 2d       	mov	r31, r0
     456:	0f 2e       	mov	r0, r31
     458:	f9 e7       	ldi	r31, 0x79	; 121
     45a:	ef 2e       	mov	r14, r31
     45c:	f1 2c       	mov	r15, r1
     45e:	f0 2d       	mov	r31, r0
     460:	e7 df       	rcall	.-50     	; 0x430 <DisableLaserPin2>
     462:	f8 01       	movw	r30, r16
     464:	80 81       	ld	r24, Z
     466:	80 7e       	andi	r24, 0xE0	; 224
     468:	80 83       	st	Z, r24
     46a:	f5 01       	movw	r30, r10
     46c:	60 82       	st	Z, r6
     46e:	88 81       	ld	r24, Y
     470:	80 64       	ori	r24, 0x40	; 64
     472:	88 83       	st	Y, r24
     474:	88 81       	ld	r24, Y
     476:	86 fd       	sbrc	r24, 6
     478:	fd cf       	rjmp	.-6      	; 0x474 <ServoTask+0x40>
     47a:	f6 01       	movw	r30, r12
     47c:	30 80       	ld	r3, Z
     47e:	f7 01       	movw	r30, r14
     480:	40 80       	ld	r4, Z
     482:	83 2d       	mov	r24, r3
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	9c 01       	movw	r18, r24
     488:	34 29       	or	r19, r4
     48a:	f8 01       	movw	r30, r16
     48c:	80 81       	ld	r24, Z
     48e:	80 7e       	andi	r24, 0xE0	; 224
     490:	80 83       	st	Z, r24
     492:	80 81       	ld	r24, Z
     494:	81 60       	ori	r24, 0x01	; 1
     496:	80 83       	st	Z, r24
     498:	f5 01       	movw	r30, r10
     49a:	60 82       	st	Z, r6
     49c:	88 81       	ld	r24, Y
     49e:	80 64       	ori	r24, 0x40	; 64
     4a0:	88 83       	st	Y, r24
     4a2:	98 81       	ld	r25, Y
     4a4:	96 fd       	sbrc	r25, 6
     4a6:	fd cf       	rjmp	.-6      	; 0x4a2 <ServoTask+0x6e>
     4a8:	f6 01       	movw	r30, r12
     4aa:	50 80       	ld	r5, Z
     4ac:	f7 01       	movw	r30, r14
     4ae:	70 80       	ld	r7, Z
     4b0:	85 2c       	mov	r8, r5
     4b2:	91 2c       	mov	r9, r1
     4b4:	97 28       	or	r9, r7
     4b6:	c9 01       	movw	r24, r18
     4b8:	80 5e       	subi	r24, 0xE0	; 224
     4ba:	91 40       	sbci	r25, 0x01	; 1
     4bc:	89 97       	sbiw	r24, 0x29	; 41
     4be:	40 f0       	brcs	.+16     	; 0x4d0 <ServoTask+0x9c>
     4c0:	b5 df       	rcall	.-150    	; 0x42c <EnableLaserPin2>
     4c2:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <SERVOX>
     4c6:	9b d6       	rcall	.+3382   	; 0x11fe <Bluetooth_Send_Byte>
     4c8:	83 2d       	mov	r24, r3
     4ca:	99 d6       	rcall	.+3378   	; 0x11fe <Bluetooth_Send_Byte>
     4cc:	84 2d       	mov	r24, r4
     4ce:	97 d6       	rcall	.+3374   	; 0x11fe <Bluetooth_Send_Byte>
     4d0:	f0 ee       	ldi	r31, 0xE0	; 224
     4d2:	8f 1a       	sub	r8, r31
     4d4:	f1 e0       	ldi	r31, 0x01	; 1
     4d6:	9f 0a       	sbc	r9, r31
     4d8:	89 e2       	ldi	r24, 0x29	; 41
     4da:	88 16       	cp	r8, r24
     4dc:	91 04       	cpc	r9, r1
     4de:	38 f0       	brcs	.+14     	; 0x4ee <ServoTask+0xba>
     4e0:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <SERVOY>
     4e4:	8c d6       	rcall	.+3352   	; 0x11fe <Bluetooth_Send_Byte>
     4e6:	85 2d       	mov	r24, r5
     4e8:	8a d6       	rcall	.+3348   	; 0x11fe <Bluetooth_Send_Byte>
     4ea:	87 2d       	mov	r24, r7
     4ec:	88 d6       	rcall	.+3344   	; 0x11fe <Bluetooth_Send_Byte>
     4ee:	82 d5       	rcall	.+2820   	; 0xff4 <Task_Next>
     4f0:	b7 cf       	rjmp	.-146    	; 0x460 <ServoTask+0x2c>

000004f2 <StartADC>:
     4f2:	ec e7       	ldi	r30, 0x7C	; 124
     4f4:	f0 e0       	ldi	r31, 0x00	; 0
     4f6:	80 81       	ld	r24, Z
     4f8:	80 64       	ori	r24, 0x40	; 64
     4fa:	80 83       	st	Z, r24
     4fc:	ea e7       	ldi	r30, 0x7A	; 122
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	80 81       	ld	r24, Z
     502:	87 68       	ori	r24, 0x87	; 135
     504:	80 83       	st	Z, r24
     506:	08 95       	ret

00000508 <a_main>:
}
void a_main(){
     508:	0f 93       	push	r16
     50a:	1f 93       	push	r17

	DDRB |= _BV(DDB0);
     50c:	20 9a       	sbi	0x04, 0	; 4
	DDRC |= _BV(LIGHTPIN);
     50e:	38 9a       	sbi	0x07, 0	; 7

	Bluetooth_UART_Init();
     510:	64 d6       	rcall	.+3272   	; 0x11da <Bluetooth_UART_Init>
	StartADC();
     512:	ef df       	rcall	.-34     	; 0x4f2 <StartADC>
	
	Task_Create_Period(LaserTask, 1, 10,0,1);
     514:	01 e0       	ldi	r16, 0x01	; 1
     516:	10 e0       	ldi	r17, 0x00	; 0
     518:	20 e0       	ldi	r18, 0x00	; 0
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	4a e0       	ldi	r20, 0x0A	; 10
     51e:	50 e0       	ldi	r21, 0x00	; 0
     520:	61 e0       	ldi	r22, 0x01	; 1
     522:	70 e0       	ldi	r23, 0x00	; 0
     524:	8b e4       	ldi	r24, 0x4B	; 75
     526:	91 e0       	ldi	r25, 0x01	; 1
     528:	8f d4       	rcall	.+2334   	; 0xe48 <Task_Create_Period>
	Task_Create_Period(ServoTask, 1,20,6, 8);
     52a:	08 e0       	ldi	r16, 0x08	; 8
     52c:	10 e0       	ldi	r17, 0x00	; 0
     52e:	26 e0       	ldi	r18, 0x06	; 6
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	44 e1       	ldi	r20, 0x14	; 20
     534:	50 e0       	ldi	r21, 0x00	; 0
     536:	61 e0       	ldi	r22, 0x01	; 1
     538:	70 e0       	ldi	r23, 0x00	; 0
     53a:	8a e1       	ldi	r24, 0x1A	; 26
     53c:	92 e0       	ldi	r25, 0x02	; 2
     53e:	84 d4       	rcall	.+2312   	; 0xe48 <Task_Create_Period>
	Task_Create_Period(RoombaTask, 1,20,8,15);
     540:	0f e0       	ldi	r16, 0x0F	; 15
     542:	10 e0       	ldi	r17, 0x00	; 0
     544:	28 e0       	ldi	r18, 0x08	; 8
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	44 e1       	ldi	r20, 0x14	; 20
     54a:	50 e0       	ldi	r21, 0x00	; 0
     54c:	61 e0       	ldi	r22, 0x01	; 1
     54e:	70 e0       	ldi	r23, 0x00	; 0
     550:	82 e6       	ldi	r24, 0x62	; 98
     552:	91 e0       	ldi	r25, 0x01	; 1
     554:	79 d4       	rcall	.+2290   	; 0xe48 <Task_Create_Period>

}
     556:	1f 91       	pop	r17
     558:	0f 91       	pop	r16
     55a:	08 95       	ret

0000055c <Idle_Task>:
=======
     28a:	08 95       	ret

0000028c <Idle_Task>:
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
unsigned int Now()
{
	unsigned int temp_time = TCNT3;
	unsigned int time = (10 * current_tick) + (temp_time / 2000);
	return time;
}
<<<<<<< HEAD
     55c:	ff cf       	rjmp	.-2      	; 0x55c <Idle_Task>

0000055e <Task_Terminate>:
     55e:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <KernelActive>
     562:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     566:	89 2b       	or	r24, r25
     568:	69 f0       	breq	.+26     	; 0x584 <Task_Terminate+0x26>
     56a:	f8 94       	cli
     56c:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     570:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     574:	e8 5f       	subi	r30, 0xF8	; 248
     576:	fe 4f       	sbci	r31, 0xFE	; 254
     578:	83 e0       	ldi	r24, 0x03	; 3
     57a:	80 83       	st	Z, r24
     57c:	80 e1       	ldi	r24, 0x10	; 16
     57e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     582:	30 ce       	rjmp	.-928    	; 0x1e4 <Enter_Kernel>
     584:	08 95       	ret

00000586 <enqueue>:
     586:	fc 01       	movw	r30, r24
     588:	80 a1       	ldd	r24, Z+32	; 0x20
     58a:	91 a1       	ldd	r25, Z+33	; 0x21
     58c:	40 97       	sbiw	r24, 0x10	; 16
     58e:	19 f4       	brne	.+6      	; 0x596 <enqueue+0x10>
     590:	8c e0       	ldi	r24, 0x0C	; 12
     592:	88 b9       	out	0x08, r24	; 8
     594:	ff cf       	rjmp	.-2      	; 0x594 <enqueue+0xe>
     596:	a4 a1       	ldd	r26, Z+36	; 0x24
     598:	b5 a1       	ldd	r27, Z+37	; 0x25
     59a:	aa 0f       	add	r26, r26
     59c:	bb 1f       	adc	r27, r27
     59e:	ae 0f       	add	r26, r30
     5a0:	bf 1f       	adc	r27, r31
     5a2:	11 96       	adiw	r26, 0x01	; 1
     5a4:	7c 93       	st	X, r23
     5a6:	6e 93       	st	-X, r22
     5a8:	80 a1       	ldd	r24, Z+32	; 0x20
     5aa:	91 a1       	ldd	r25, Z+33	; 0x21
     5ac:	01 96       	adiw	r24, 0x01	; 1
     5ae:	91 a3       	std	Z+33, r25	; 0x21
     5b0:	80 a3       	std	Z+32, r24	; 0x20
     5b2:	24 a1       	ldd	r18, Z+36	; 0x24
     5b4:	35 a1       	ldd	r19, Z+37	; 0x25
     5b6:	2f 5f       	subi	r18, 0xFF	; 255
     5b8:	3f 4f       	sbci	r19, 0xFF	; 255
     5ba:	2f 70       	andi	r18, 0x0F	; 15
     5bc:	30 78       	andi	r19, 0x80	; 128
     5be:	33 23       	and	r19, r19
     5c0:	34 f4       	brge	.+12     	; 0x5ce <enqueue+0x48>
     5c2:	21 50       	subi	r18, 0x01	; 1
     5c4:	31 09       	sbc	r19, r1
     5c6:	20 6f       	ori	r18, 0xF0	; 240
     5c8:	3f 6f       	ori	r19, 0xFF	; 255
     5ca:	2f 5f       	subi	r18, 0xFF	; 255
     5cc:	3f 4f       	sbci	r19, 0xFF	; 255
     5ce:	35 a3       	std	Z+37, r19	; 0x25
     5d0:	24 a3       	std	Z+36, r18	; 0x24
     5d2:	08 95       	ret

000005d4 <dequeue>:
     5d4:	fc 01       	movw	r30, r24
     5d6:	80 a1       	ldd	r24, Z+32	; 0x20
     5d8:	91 a1       	ldd	r25, Z+33	; 0x21
     5da:	89 2b       	or	r24, r25
     5dc:	19 f4       	brne	.+6      	; 0x5e4 <dequeue+0x10>
     5de:	8d e0       	ldi	r24, 0x0D	; 13
     5e0:	88 b9       	out	0x08, r24	; 8
     5e2:	ff cf       	rjmp	.-2      	; 0x5e2 <dequeue+0xe>
     5e4:	a2 a1       	ldd	r26, Z+34	; 0x22
     5e6:	b3 a1       	ldd	r27, Z+35	; 0x23
     5e8:	aa 0f       	add	r26, r26
     5ea:	bb 1f       	adc	r27, r27
     5ec:	ae 0f       	add	r26, r30
     5ee:	bf 1f       	adc	r27, r31
     5f0:	8d 91       	ld	r24, X+
     5f2:	9c 91       	ld	r25, X
     5f4:	20 a1       	ldd	r18, Z+32	; 0x20
     5f6:	31 a1       	ldd	r19, Z+33	; 0x21
     5f8:	21 50       	subi	r18, 0x01	; 1
     5fa:	31 09       	sbc	r19, r1
     5fc:	31 a3       	std	Z+33, r19	; 0x21
     5fe:	20 a3       	std	Z+32, r18	; 0x20
     600:	22 a1       	ldd	r18, Z+34	; 0x22
     602:	33 a1       	ldd	r19, Z+35	; 0x23
     604:	2f 5f       	subi	r18, 0xFF	; 255
     606:	3f 4f       	sbci	r19, 0xFF	; 255
     608:	2f 70       	andi	r18, 0x0F	; 15
     60a:	30 78       	andi	r19, 0x80	; 128
     60c:	33 23       	and	r19, r19
     60e:	34 f4       	brge	.+12     	; 0x61c <dequeue+0x48>
     610:	21 50       	subi	r18, 0x01	; 1
     612:	31 09       	sbc	r19, r1
     614:	20 6f       	ori	r18, 0xF0	; 240
     616:	3f 6f       	ori	r19, 0xFF	; 255
     618:	2f 5f       	subi	r18, 0xFF	; 255
     61a:	3f 4f       	sbci	r19, 0xFF	; 255
     61c:	33 a3       	std	Z+35, r19	; 0x23
     61e:	22 a3       	std	Z+34, r18	; 0x22
     620:	08 95       	ret

00000622 <Dispatch>:
     622:	80 91 06 05 	lds	r24, 0x0506	; 0x800506 <ReadyQSystem+0x20>
     626:	90 91 07 05 	lds	r25, 0x0507	; 0x800507 <ReadyQSystem+0x21>
     62a:	18 16       	cp	r1, r24
     62c:	19 06       	cpc	r1, r25
     62e:	9c f4       	brge	.+38     	; 0x656 <Dispatch+0x34>
     630:	86 ee       	ldi	r24, 0xE6	; 230
     632:	94 e0       	ldi	r25, 0x04	; 4
     634:	cf df       	rcall	.-98     	; 0x5d4 <dequeue>
     636:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <Cp+0x1>
     63a:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <Cp>
     63e:	fc 01       	movw	r30, r24
     640:	23 81       	ldd	r18, Z+3	; 0x03
     642:	34 81       	ldd	r19, Z+4	; 0x04
     644:	30 93 79 17 	sts	0x1779, r19	; 0x801779 <CurrentSp+0x1>
     648:	20 93 78 17 	sts	0x1778, r18	; 0x801778 <CurrentSp>
     64c:	eb 5f       	subi	r30, 0xFB	; 251
     64e:	fe 4f       	sbci	r31, 0xFE	; 254
     650:	82 e0       	ldi	r24, 0x02	; 2
     652:	80 83       	st	Z, r24
     654:	08 95       	ret
     656:	80 91 2c 05 	lds	r24, 0x052C	; 0x80052c <ReadyQTime+0x20>
     65a:	90 91 2d 05 	lds	r25, 0x052D	; 0x80052d <ReadyQTime+0x21>
     65e:	18 16       	cp	r1, r24
     660:	19 06       	cpc	r1, r25
     662:	9c f4       	brge	.+38     	; 0x68a <Dispatch+0x68>
     664:	8c e0       	ldi	r24, 0x0C	; 12
     666:	95 e0       	ldi	r25, 0x05	; 5
     668:	b5 df       	rcall	.-150    	; 0x5d4 <dequeue>
     66a:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <Cp+0x1>
     66e:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <Cp>
     672:	fc 01       	movw	r30, r24
     674:	23 81       	ldd	r18, Z+3	; 0x03
     676:	34 81       	ldd	r19, Z+4	; 0x04
     678:	30 93 79 17 	sts	0x1779, r19	; 0x801779 <CurrentSp+0x1>
     67c:	20 93 78 17 	sts	0x1778, r18	; 0x801778 <CurrentSp>
     680:	eb 5f       	subi	r30, 0xFB	; 251
     682:	fe 4f       	sbci	r31, 0xFE	; 254
     684:	82 e0       	ldi	r24, 0x02	; 2
     686:	80 83       	st	Z, r24
     688:	08 95       	ret
     68a:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <ReadyQRR+0x20>
     68e:	90 91 53 05 	lds	r25, 0x0553	; 0x800553 <ReadyQRR+0x21>
     692:	18 16       	cp	r1, r24
     694:	19 06       	cpc	r1, r25
     696:	9c f4       	brge	.+38     	; 0x6be <Dispatch+0x9c>
     698:	82 e3       	ldi	r24, 0x32	; 50
     69a:	95 e0       	ldi	r25, 0x05	; 5
     69c:	9b df       	rcall	.-202    	; 0x5d4 <dequeue>
     69e:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <Cp+0x1>
     6a2:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <Cp>
     6a6:	fc 01       	movw	r30, r24
     6a8:	23 81       	ldd	r18, Z+3	; 0x03
     6aa:	34 81       	ldd	r19, Z+4	; 0x04
     6ac:	30 93 79 17 	sts	0x1779, r19	; 0x801779 <CurrentSp+0x1>
     6b0:	20 93 78 17 	sts	0x1778, r18	; 0x801778 <CurrentSp>
     6b4:	eb 5f       	subi	r30, 0xFB	; 251
     6b6:	fe 4f       	sbci	r31, 0xFE	; 254
     6b8:	82 e0       	ldi	r24, 0x02	; 2
     6ba:	80 83       	st	Z, r24
     6bc:	08 95       	ret
     6be:	80 91 e0 04 	lds	r24, 0x04E0	; 0x8004e0 <ReadyQIdle+0x20>
     6c2:	90 91 e1 04 	lds	r25, 0x04E1	; 0x8004e1 <ReadyQIdle+0x21>
     6c6:	18 16       	cp	r1, r24
     6c8:	19 06       	cpc	r1, r25
     6ca:	9c f4       	brge	.+38     	; 0x6f2 <Dispatch+0xd0>
     6cc:	80 ec       	ldi	r24, 0xC0	; 192
     6ce:	94 e0       	ldi	r25, 0x04	; 4
     6d0:	81 df       	rcall	.-254    	; 0x5d4 <dequeue>
     6d2:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <Cp+0x1>
     6d6:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <Cp>
     6da:	fc 01       	movw	r30, r24
     6dc:	23 81       	ldd	r18, Z+3	; 0x03
     6de:	34 81       	ldd	r19, Z+4	; 0x04
     6e0:	30 93 79 17 	sts	0x1779, r19	; 0x801779 <CurrentSp+0x1>
     6e4:	20 93 78 17 	sts	0x1778, r18	; 0x801778 <CurrentSp>
     6e8:	eb 5f       	subi	r30, 0xFB	; 251
     6ea:	fe 4f       	sbci	r31, 0xFE	; 254
     6ec:	82 e0       	ldi	r24, 0x02	; 2
     6ee:	80 83       	st	Z, r24
     6f0:	08 95       	ret
     6f2:	88 e1       	ldi	r24, 0x18	; 24
     6f4:	88 b9       	out	0x08, r24	; 8
     6f6:	ff cf       	rjmp	.-2      	; 0x6f6 <Dispatch+0xd4>

000006f8 <setReady>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ec 01       	movw	r28, r24
     6fe:	8a 81       	ldd	r24, Y+2	; 0x02
     700:	81 30       	cpi	r24, 0x01	; 1
     702:	79 f0       	breq	.+30     	; 0x722 <setReady+0x2a>
     704:	d8 f0       	brcs	.+54     	; 0x73c <setReady+0x44>
     706:	82 30       	cpi	r24, 0x02	; 2
     708:	39 f0       	breq	.+14     	; 0x718 <setReady+0x20>
     70a:	83 30       	cpi	r24, 0x03	; 3
     70c:	e1 f4       	brne	.+56     	; 0x746 <setReady+0x4e>
     70e:	be 01       	movw	r22, r28
     710:	80 ec       	ldi	r24, 0xC0	; 192
     712:	94 e0       	ldi	r25, 0x04	; 4
     714:	38 df       	rcall	.-400    	; 0x586 <enqueue>
     716:	1a c0       	rjmp	.+52     	; 0x74c <setReady+0x54>
     718:	be 01       	movw	r22, r28
     71a:	82 e3       	ldi	r24, 0x32	; 50
     71c:	95 e0       	ldi	r25, 0x05	; 5
     71e:	33 df       	rcall	.-410    	; 0x586 <enqueue>
     720:	15 c0       	rjmp	.+42     	; 0x74c <setReady+0x54>
     722:	be 01       	movw	r22, r28
     724:	8c e0       	ldi	r24, 0x0C	; 12
     726:	95 e0       	ldi	r25, 0x05	; 5
     728:	2e df       	rcall	.-420    	; 0x586 <enqueue>
     72a:	80 91 2c 05 	lds	r24, 0x052C	; 0x80052c <ReadyQTime+0x20>
     72e:	90 91 2d 05 	lds	r25, 0x052D	; 0x80052d <ReadyQTime+0x21>
     732:	02 97       	sbiw	r24, 0x02	; 2
     734:	5c f0       	brlt	.+22     	; 0x74c <setReady+0x54>
     736:	85 e0       	ldi	r24, 0x05	; 5
     738:	88 b9       	out	0x08, r24	; 8
     73a:	ff cf       	rjmp	.-2      	; 0x73a <setReady+0x42>
     73c:	be 01       	movw	r22, r28
     73e:	86 ee       	ldi	r24, 0xE6	; 230
     740:	94 e0       	ldi	r25, 0x04	; 4
     742:	21 df       	rcall	.-446    	; 0x586 <enqueue>
     744:	03 c0       	rjmp	.+6      	; 0x74c <setReady+0x54>
     746:	8c e7       	ldi	r24, 0x7C	; 124
     748:	88 b9       	out	0x08, r24	; 8
     74a:	ff cf       	rjmp	.-2      	; 0x74a <setReady+0x52>
     74c:	cb 5f       	subi	r28, 0xFB	; 251
     74e:	de 4f       	sbci	r29, 0xFE	; 254
     750:	81 e0       	ldi	r24, 0x01	; 1
     752:	88 83       	st	Y, r24
     754:	df 91       	pop	r29
     756:	cf 91       	pop	r28
     758:	08 95       	ret

0000075a <Kernel_Create_Task_At>:
     75a:	8f 92       	push	r8
     75c:	9f 92       	push	r9
     75e:	af 92       	push	r10
     760:	bf 92       	push	r11
     762:	cf 92       	push	r12
     764:	df 92       	push	r13
     766:	ef 92       	push	r14
     768:	ff 92       	push	r15
     76a:	0f 93       	push	r16
     76c:	cf 93       	push	r28
     76e:	df 93       	push	r29
     770:	ec 01       	movw	r28, r24
     772:	fc 01       	movw	r30, r24
     774:	35 96       	adiw	r30, 0x05	; 5
     776:	81 2c       	mov	r8, r1
     778:	99 24       	eor	r9, r9
     77a:	93 94       	inc	r9
     77c:	df 01       	movw	r26, r30
     77e:	c4 01       	movw	r24, r8
     780:	1d 92       	st	X+, r1
     782:	01 97       	sbiw	r24, 0x01	; 1
     784:	e9 f7       	brne	.-6      	; 0x780 <Kernel_Create_Task_At+0x26>
     786:	e1 50       	subi	r30, 0x01	; 1
     788:	ff 4f       	sbci	r31, 0xFF	; 255
     78a:	8f ea       	ldi	r24, 0xAF	; 175
     78c:	92 e0       	ldi	r25, 0x02	; 2
     78e:	80 83       	st	Z, r24
     790:	31 97       	sbiw	r30, 0x01	; 1
     792:	90 83       	st	Z, r25
     794:	31 97       	sbiw	r30, 0x01	; 1
     796:	10 82       	st	Z, r1
     798:	31 97       	sbiw	r30, 0x01	; 1
     79a:	60 83       	st	Z, r22
     79c:	31 97       	sbiw	r30, 0x01	; 1
     79e:	70 83       	st	Z, r23
     7a0:	31 97       	sbiw	r30, 0x01	; 1
     7a2:	10 82       	st	Z, r1
     7a4:	de 01       	movw	r26, r28
     7a6:	a4 52       	subi	r26, 0x24	; 36
     7a8:	bf 4f       	sbci	r27, 0xFF	; 255
     7aa:	b2 97       	sbiw	r30, 0x22	; 34
     7ac:	80 81       	ld	r24, Z
     7ae:	80 68       	ori	r24, 0x80	; 128
     7b0:	80 83       	st	Z, r24
     7b2:	bc 83       	std	Y+4, r27	; 0x04
     7b4:	ab 83       	std	Y+3, r26	; 0x03
     7b6:	b9 96       	adiw	r30, 0x29	; 41
     7b8:	71 83       	std	Z+1, r23	; 0x01
     7ba:	60 83       	st	Z, r22
     7bc:	32 96       	adiw	r30, 0x02	; 2
     7be:	10 82       	st	Z, r1
     7c0:	9d 96       	adiw	r26, 0x2d	; 45
     7c2:	11 96       	adiw	r26, 0x01	; 1
     7c4:	5c 93       	st	X, r21
     7c6:	4e 93       	st	-X, r20
     7c8:	39 83       	std	Y+1, r19	; 0x01
     7ca:	28 83       	st	Y, r18
     7cc:	0a 83       	std	Y+2, r16	; 0x02
     7ce:	10 82       	st	Z, r1
     7d0:	39 96       	adiw	r30, 0x09	; 9
     7d2:	f1 82       	std	Z+1, r15	; 0x01
     7d4:	e0 82       	st	Z, r14
     7d6:	32 96       	adiw	r30, 0x02	; 2
     7d8:	d1 82       	std	Z+1, r13	; 0x01
     7da:	c0 82       	st	Z, r12
     7dc:	32 96       	adiw	r30, 0x02	; 2
     7de:	b1 82       	std	Z+1, r11	; 0x01
     7e0:	a0 82       	st	Z, r10
     7e2:	32 96       	adiw	r30, 0x02	; 2
     7e4:	b1 82       	std	Z+1, r11	; 0x01
     7e6:	a0 82       	st	Z, r10
     7e8:	32 96       	adiw	r30, 0x02	; 2
     7ea:	11 82       	std	Z+1, r1	; 0x01
     7ec:	10 82       	st	Z, r1
     7ee:	01 30       	cpi	r16, 0x01	; 1
     7f0:	21 f4       	brne	.+8      	; 0x7fa <Kernel_Create_Task_At+0xa0>
     7f2:	84 e0       	ldi	r24, 0x04	; 4
     7f4:	74 97       	sbiw	r30, 0x14	; 20
     7f6:	80 83       	st	Z, r24
     7f8:	02 c0       	rjmp	.+4      	; 0x7fe <Kernel_Create_Task_At+0xa4>
     7fa:	ce 01       	movw	r24, r28
     7fc:	7d df       	rcall	.-262    	; 0x6f8 <setReady>
     7fe:	88 81       	ld	r24, Y
     800:	99 81       	ldd	r25, Y+1	; 0x01
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	0f 91       	pop	r16
     808:	ff 90       	pop	r15
     80a:	ef 90       	pop	r14
     80c:	df 90       	pop	r13
     80e:	cf 90       	pop	r12
     810:	bf 90       	pop	r11
     812:	af 90       	pop	r10
     814:	9f 90       	pop	r9
     816:	8f 90       	pop	r8
     818:	08 95       	ret

0000081a <Kernel_Create_Task>:
     81a:	af 92       	push	r10
     81c:	bf 92       	push	r11
     81e:	cf 92       	push	r12
     820:	df 92       	push	r13
     822:	ef 92       	push	r14
     824:	ff 92       	push	r15
     826:	0f 93       	push	r16
     828:	1f 93       	push	r17
     82a:	cf 93       	push	r28
     82c:	df 93       	push	r29
     82e:	ec 01       	movw	r28, r24
     830:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Tasks>
     834:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Tasks+0x1>
     838:	40 97       	sbiw	r24, 0x10	; 16
     83a:	99 f1       	breq	.+102    	; 0x8a2 <Kernel_Create_Task+0x88>
     83c:	80 91 5d 06 	lds	r24, 0x065D	; 0x80065d <Process+0x105>
     840:	88 23       	and	r24, r24
     842:	71 f0       	breq	.+28     	; 0x860 <Kernel_Create_Task+0x46>
     844:	af e7       	ldi	r26, 0x7F	; 127
     846:	b7 e0       	ldi	r27, 0x07	; 7
     848:	e1 e0       	ldi	r30, 0x01	; 1
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	9c 91       	ld	r25, X
     84e:	99 23       	and	r25, r25
     850:	49 f0       	breq	.+18     	; 0x864 <Kernel_Create_Task+0x4a>
     852:	31 96       	adiw	r30, 0x01	; 1
     854:	ae 5d       	subi	r26, 0xDE	; 222
     856:	be 4f       	sbci	r27, 0xFE	; 254
     858:	e0 31       	cpi	r30, 0x10	; 16
     85a:	f1 05       	cpc	r31, r1
     85c:	b9 f7       	brne	.-18     	; 0x84c <Kernel_Create_Task+0x32>
     85e:	02 c0       	rjmp	.+4      	; 0x864 <Kernel_Create_Task+0x4a>
     860:	e0 e0       	ldi	r30, 0x00	; 0
     862:	f0 e0       	ldi	r31, 0x00	; 0
     864:	57 01       	movw	r10, r14
     866:	68 01       	movw	r12, r16
     868:	79 01       	movw	r14, r18
     86a:	04 2f       	mov	r16, r20
     86c:	ab 01       	movw	r20, r22
     86e:	be 01       	movw	r22, r28
     870:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Tasks>
     874:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Tasks+0x1>
     878:	01 96       	adiw	r24, 0x01	; 1
     87a:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <Tasks+0x1>
     87e:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <Tasks>
     882:	9f 01       	movw	r18, r30
     884:	2f 5f       	subi	r18, 0xFF	; 255
     886:	3f 4f       	sbci	r19, 0xFF	; 255
     888:	a2 e2       	ldi	r26, 0x22	; 34
     88a:	b1 e0       	ldi	r27, 0x01	; 1
     88c:	ea 9f       	mul	r30, r26
     88e:	c0 01       	movw	r24, r0
     890:	eb 9f       	mul	r30, r27
     892:	90 0d       	add	r25, r0
     894:	fa 9f       	mul	r31, r26
     896:	90 0d       	add	r25, r0
     898:	11 24       	eor	r1, r1
     89a:	88 5a       	subi	r24, 0xA8	; 168
     89c:	9a 4f       	sbci	r25, 0xFA	; 250
     89e:	5d df       	rcall	.-326    	; 0x75a <Kernel_Create_Task_At>
     8a0:	02 c0       	rjmp	.+4      	; 0x8a6 <Kernel_Create_Task+0x8c>
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	1f 91       	pop	r17
     8ac:	0f 91       	pop	r16
     8ae:	ff 90       	pop	r15
     8b0:	ef 90       	pop	r14
     8b2:	df 90       	pop	r13
     8b4:	cf 90       	pop	r12
     8b6:	bf 90       	pop	r11
     8b8:	af 90       	pop	r10
     8ba:	08 95       	ret

000008bc <Kernel_Chan_Init>:
     8bc:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
     8c0:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__data_end+0x1>
     8c4:	40 97       	sbiw	r24, 0x10	; 16
     8c6:	18 f0       	brcs	.+6      	; 0x8ce <Kernel_Chan_Init+0x12>
     8c8:	82 e0       	ldi	r24, 0x02	; 2
     8ca:	88 b9       	out	0x08, r24	; 8
     8cc:	ff cf       	rjmp	.-2      	; 0x8cc <Kernel_Chan_Init+0x10>
     8ce:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__data_end>
     8d2:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__data_end+0x1>
     8d6:	8b e2       	ldi	r24, 0x2B	; 43
     8d8:	82 9f       	mul	r24, r18
     8da:	f0 01       	movw	r30, r0
     8dc:	83 9f       	mul	r24, r19
     8de:	f0 0d       	add	r31, r0
     8e0:	11 24       	eor	r1, r1
     8e2:	ea 5f       	subi	r30, 0xFA	; 250
     8e4:	fd 4f       	sbci	r31, 0xFD	; 253
     8e6:	91 e0       	ldi	r25, 0x01	; 1
     8e8:	90 83       	st	Z, r25
     8ea:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__data_end>
     8ee:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__data_end+0x1>
     8f2:	82 9f       	mul	r24, r18
     8f4:	f0 01       	movw	r30, r0
     8f6:	83 9f       	mul	r24, r19
     8f8:	f0 0d       	add	r31, r0
     8fa:	11 24       	eor	r1, r1
     8fc:	ea 5f       	subi	r30, 0xFA	; 250
     8fe:	fd 4f       	sbci	r31, 0xFD	; 253
     900:	14 a2       	std	Z+36, r1	; 0x24
     902:	13 a2       	std	Z+35, r1	; 0x23
     904:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__data_end>
     908:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__data_end+0x1>
     90c:	82 9f       	mul	r24, r18
     90e:	f0 01       	movw	r30, r0
     910:	83 9f       	mul	r24, r19
     912:	f0 0d       	add	r31, r0
     914:	11 24       	eor	r1, r1
     916:	ea 5f       	subi	r30, 0xFA	; 250
     918:	fd 4f       	sbci	r31, 0xFD	; 253
     91a:	16 a2       	std	Z+38, r1	; 0x26
     91c:	15 a2       	std	Z+37, r1	; 0x25
     91e:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__data_end>
     922:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__data_end+0x1>
     926:	82 9f       	mul	r24, r18
     928:	f0 01       	movw	r30, r0
     92a:	83 9f       	mul	r24, r19
     92c:	f0 0d       	add	r31, r0
     92e:	11 24       	eor	r1, r1
     930:	ea 5f       	subi	r30, 0xFA	; 250
     932:	fd 4f       	sbci	r31, 0xFD	; 253
     934:	10 a6       	std	Z+40, r1	; 0x28
     936:	17 a2       	std	Z+39, r1	; 0x27
     938:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
     93c:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__data_end+0x1>
     940:	01 96       	adiw	r24, 0x01	; 1
     942:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <__data_end+0x1>
     946:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <__data_end>
     94a:	08 95       	ret

0000094c <Kernel_Chan_Send>:
     94c:	af 92       	push	r10
     94e:	bf 92       	push	r11
     950:	cf 92       	push	r12
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	cf 93       	push	r28
     95e:	df 93       	push	r29
     960:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     964:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     968:	82 81       	ldd	r24, Z+2	; 0x02
     96a:	81 30       	cpi	r24, 0x01	; 1
     96c:	19 f4       	brne	.+6      	; 0x974 <Kernel_Chan_Send+0x28>
     96e:	83 e0       	ldi	r24, 0x03	; 3
     970:	88 b9       	out	0x08, r24	; 8
     972:	ff cf       	rjmp	.-2      	; 0x972 <Kernel_Chan_Send+0x26>
     974:	df 01       	movw	r26, r30
     976:	a3 5f       	subi	r26, 0xF3	; 243
     978:	be 4f       	sbci	r27, 0xFE	; 254
     97a:	ad 90       	ld	r10, X+
     97c:	bc 90       	ld	r11, X
     97e:	21 e0       	ldi	r18, 0x01	; 1
     980:	a2 1a       	sub	r10, r18
     982:	b1 08       	sbc	r11, r1
     984:	8b e2       	ldi	r24, 0x2B	; 43
     986:	8a 9d       	mul	r24, r10
     988:	d0 01       	movw	r26, r0
     98a:	8b 9d       	mul	r24, r11
     98c:	b0 0d       	add	r27, r0
     98e:	11 24       	eor	r1, r1
     990:	aa 5f       	subi	r26, 0xFA	; 250
     992:	bd 4f       	sbci	r27, 0xFD	; 253
     994:	8c 91       	ld	r24, X
     996:	81 11       	cpse	r24, r1
     998:	03 c0       	rjmp	.+6      	; 0x9a0 <Kernel_Chan_Send+0x54>
     99a:	82 e0       	ldi	r24, 0x02	; 2
     99c:	88 b9       	out	0x08, r24	; 8
     99e:	ff cf       	rjmp	.-2      	; 0x99e <Kernel_Chan_Send+0x52>
     9a0:	82 30       	cpi	r24, 0x02	; 2
     9a2:	19 f4       	brne	.+6      	; 0x9aa <Kernel_Chan_Send+0x5e>
     9a4:	84 e0       	ldi	r24, 0x04	; 4
     9a6:	88 b9       	out	0x08, r24	; 8
     9a8:	ff cf       	rjmp	.-2      	; 0x9a8 <Kernel_Chan_Send+0x5c>
     9aa:	df 01       	movw	r26, r30
     9ac:	a1 5f       	subi	r26, 0xF1	; 241
     9ae:	be 4f       	sbci	r27, 0xFE	; 254
     9b0:	2d 91       	ld	r18, X+
     9b2:	3c 91       	ld	r19, X
     9b4:	9b e2       	ldi	r25, 0x2B	; 43
     9b6:	9a 9d       	mul	r25, r10
     9b8:	d0 01       	movw	r26, r0
     9ba:	9b 9d       	mul	r25, r11
     9bc:	b0 0d       	add	r27, r0
     9be:	11 24       	eor	r1, r1
     9c0:	aa 5f       	subi	r26, 0xFA	; 250
     9c2:	bd 4f       	sbci	r27, 0xFD	; 253
     9c4:	9a 96       	adiw	r26, 0x2a	; 42
     9c6:	3c 93       	st	X, r19
     9c8:	2e 93       	st	-X, r18
     9ca:	99 97       	sbiw	r26, 0x29	; 41
     9cc:	83 30       	cpi	r24, 0x03	; 3
     9ce:	09 f0       	breq	.+2      	; 0x9d2 <Kernel_Chan_Send+0x86>
     9d0:	3e c0       	rjmp	.+124    	; 0xa4e <Kernel_Chan_Send+0x102>
     9d2:	19 c0       	rjmp	.+50     	; 0xa06 <Kernel_Chan_Send+0xba>
     9d4:	c8 01       	movw	r24, r16
     9d6:	fe dd       	rcall	.-1028   	; 0x5d4 <dequeue>
     9d8:	ec 01       	movw	r28, r24
     9da:	f7 01       	movw	r30, r14
     9dc:	80 81       	ld	r24, Z
     9de:	91 81       	ldd	r25, Z+1	; 0x01
     9e0:	fe 01       	movw	r30, r28
     9e2:	e5 5f       	subi	r30, 0xF5	; 245
     9e4:	fe 4f       	sbci	r31, 0xFE	; 254
     9e6:	91 83       	std	Z+1, r25	; 0x01
     9e8:	80 83       	st	Z, r24
     9ea:	ce 01       	movw	r24, r28
     9ec:	85 de       	rcall	.-758    	; 0x6f8 <setReady>
     9ee:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     9f2:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     9f6:	82 81       	ldd	r24, Z+2	; 0x02
     9f8:	9a 81       	ldd	r25, Y+2	; 0x02
     9fa:	98 17       	cp	r25, r24
     9fc:	b8 f4       	brcc	.+46     	; 0xa2c <Kernel_Chan_Send+0xe0>
     9fe:	cf 01       	movw	r24, r30
     a00:	7b de       	rcall	.-778    	; 0x6f8 <setReady>
     a02:	0f de       	rcall	.-994    	; 0x622 <Dispatch>
     a04:	13 c0       	rjmp	.+38     	; 0xa2c <Kernel_Chan_Send+0xe0>
     a06:	8b e2       	ldi	r24, 0x2B	; 43
     a08:	8a 9d       	mul	r24, r10
     a0a:	80 01       	movw	r16, r0
     a0c:	8b 9d       	mul	r24, r11
     a0e:	10 0d       	add	r17, r0
     a10:	11 24       	eor	r1, r1
     a12:	c8 01       	movw	r24, r16
     a14:	8a 5f       	subi	r24, 0xFA	; 250
     a16:	9d 4f       	sbci	r25, 0xFD	; 253
     a18:	6c 01       	movw	r12, r24
     a1a:	f3 e2       	ldi	r31, 0x23	; 35
     a1c:	cf 0e       	add	r12, r31
     a1e:	d1 1c       	adc	r13, r1
     a20:	7c 01       	movw	r14, r24
     a22:	29 e2       	ldi	r18, 0x29	; 41
     a24:	e2 0e       	add	r14, r18
     a26:	f1 1c       	adc	r15, r1
     a28:	07 5f       	subi	r16, 0xF7	; 247
     a2a:	1d 4f       	sbci	r17, 0xFD	; 253
     a2c:	f6 01       	movw	r30, r12
     a2e:	80 81       	ld	r24, Z
     a30:	91 81       	ldd	r25, Z+1	; 0x01
     a32:	18 16       	cp	r1, r24
     a34:	19 06       	cpc	r1, r25
     a36:	74 f2       	brlt	.-100    	; 0x9d4 <Kernel_Chan_Send+0x88>
     a38:	8b e2       	ldi	r24, 0x2B	; 43
     a3a:	8a 9d       	mul	r24, r10
     a3c:	f0 01       	movw	r30, r0
     a3e:	8b 9d       	mul	r24, r11
     a40:	f0 0d       	add	r31, r0
     a42:	11 24       	eor	r1, r1
     a44:	ea 5f       	subi	r30, 0xFA	; 250
     a46:	fd 4f       	sbci	r31, 0xFD	; 253
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	80 83       	st	Z, r24
     a4c:	12 c0       	rjmp	.+36     	; 0xa72 <Kernel_Chan_Send+0x126>
     a4e:	8b e2       	ldi	r24, 0x2B	; 43
     a50:	8a 9d       	mul	r24, r10
     a52:	d0 01       	movw	r26, r0
     a54:	8b 9d       	mul	r24, r11
     a56:	b0 0d       	add	r27, r0
     a58:	11 24       	eor	r1, r1
     a5a:	aa 5f       	subi	r26, 0xFA	; 250
     a5c:	bd 4f       	sbci	r27, 0xFD	; 253
     a5e:	82 e0       	ldi	r24, 0x02	; 2
     a60:	8c 93       	st	X, r24
     a62:	12 96       	adiw	r26, 0x02	; 2
     a64:	fc 93       	st	X, r31
     a66:	ee 93       	st	-X, r30
     a68:	11 97       	sbiw	r26, 0x01	; 1
     a6a:	eb 5f       	subi	r30, 0xFB	; 251
     a6c:	fe 4f       	sbci	r31, 0xFE	; 254
     a6e:	83 e0       	ldi	r24, 0x03	; 3
     a70:	80 83       	st	Z, r24
     a72:	df 91       	pop	r29
     a74:	cf 91       	pop	r28
     a76:	1f 91       	pop	r17
     a78:	0f 91       	pop	r16
     a7a:	ff 90       	pop	r15
     a7c:	ef 90       	pop	r14
     a7e:	df 90       	pop	r13
     a80:	cf 90       	pop	r12
     a82:	bf 90       	pop	r11
     a84:	af 90       	pop	r10
     a86:	08 95       	ret

00000a88 <Kernel_Chan_Receive>:
     a88:	ef 92       	push	r14
     a8a:	ff 92       	push	r15
     a8c:	0f 93       	push	r16
     a8e:	1f 93       	push	r17
     a90:	cf 93       	push	r28
     a92:	df 93       	push	r29
     a94:	c0 91 bc 04 	lds	r28, 0x04BC	; 0x8004bc <Cp>
     a98:	d0 91 bd 04 	lds	r29, 0x04BD	; 0x8004bd <Cp+0x1>
     a9c:	8a 81       	ldd	r24, Y+2	; 0x02
     a9e:	81 30       	cpi	r24, 0x01	; 1
     aa0:	19 f4       	brne	.+6      	; 0xaa8 <Kernel_Chan_Receive+0x20>
     aa2:	83 e0       	ldi	r24, 0x03	; 3
     aa4:	88 b9       	out	0x08, r24	; 8
     aa6:	ff cf       	rjmp	.-2      	; 0xaa6 <Kernel_Chan_Receive+0x1e>
     aa8:	fe 01       	movw	r30, r28
     aaa:	e3 5f       	subi	r30, 0xF3	; 243
     aac:	fe 4f       	sbci	r31, 0xFE	; 254
     aae:	00 81       	ld	r16, Z
     ab0:	11 81       	ldd	r17, Z+1	; 0x01
     ab2:	01 50       	subi	r16, 0x01	; 1
     ab4:	11 09       	sbc	r17, r1
     ab6:	8b e2       	ldi	r24, 0x2B	; 43
     ab8:	80 9f       	mul	r24, r16
     aba:	f0 01       	movw	r30, r0
     abc:	81 9f       	mul	r24, r17
     abe:	f0 0d       	add	r31, r0
     ac0:	11 24       	eor	r1, r1
     ac2:	ea 5f       	subi	r30, 0xFA	; 250
     ac4:	fd 4f       	sbci	r31, 0xFD	; 253
     ac6:	80 81       	ld	r24, Z
     ac8:	81 11       	cpse	r24, r1
     aca:	03 c0       	rjmp	.+6      	; 0xad2 <Kernel_Chan_Receive+0x4a>
     acc:	82 e0       	ldi	r24, 0x02	; 2
     ace:	88 b9       	out	0x08, r24	; 8
     ad0:	ff cf       	rjmp	.-2      	; 0xad0 <Kernel_Chan_Receive+0x48>
     ad2:	82 30       	cpi	r24, 0x02	; 2
     ad4:	91 f5       	brne	.+100    	; 0xb3a <Kernel_Chan_Receive+0xb2>
     ad6:	2b e2       	ldi	r18, 0x2B	; 43
     ad8:	20 9f       	mul	r18, r16
     ada:	c0 01       	movw	r24, r0
     adc:	21 9f       	mul	r18, r17
     ade:	90 0d       	add	r25, r0
     ae0:	11 24       	eor	r1, r1
     ae2:	9c 01       	movw	r18, r24
     ae4:	2a 5f       	subi	r18, 0xFA	; 250
     ae6:	3d 4f       	sbci	r19, 0xFD	; 253
     ae8:	79 01       	movw	r14, r18
     aea:	d9 01       	movw	r26, r18
     aec:	99 96       	adiw	r26, 0x29	; 41
     aee:	8d 91       	ld	r24, X+
     af0:	9c 91       	ld	r25, X
     af2:	9a 97       	sbiw	r26, 0x2a	; 42
     af4:	fe 01       	movw	r30, r28
     af6:	e5 5f       	subi	r30, 0xF5	; 245
     af8:	fe 4f       	sbci	r31, 0xFE	; 254
     afa:	91 83       	std	Z+1, r25	; 0x01
     afc:	80 83       	st	Z, r24
     afe:	11 96       	adiw	r26, 0x01	; 1
     b00:	8d 91       	ld	r24, X+
     b02:	9c 91       	ld	r25, X
     b04:	12 97       	sbiw	r26, 0x02	; 2
     b06:	f8 dd       	rcall	.-1040   	; 0x6f8 <setReady>
     b08:	8a 81       	ldd	r24, Y+2	; 0x02
     b0a:	d7 01       	movw	r26, r14
     b0c:	11 96       	adiw	r26, 0x01	; 1
     b0e:	ed 91       	ld	r30, X+
     b10:	fc 91       	ld	r31, X
     b12:	12 97       	sbiw	r26, 0x02	; 2
     b14:	92 81       	ldd	r25, Z+2	; 0x02
     b16:	98 17       	cp	r25, r24
     b18:	18 f4       	brcc	.+6      	; 0xb20 <Kernel_Chan_Receive+0x98>
     b1a:	ce 01       	movw	r24, r28
     b1c:	ed dd       	rcall	.-1062   	; 0x6f8 <setReady>
     b1e:	81 dd       	rcall	.-1278   	; 0x622 <Dispatch>
     b20:	8b e2       	ldi	r24, 0x2B	; 43
     b22:	80 9f       	mul	r24, r16
     b24:	f0 01       	movw	r30, r0
     b26:	81 9f       	mul	r24, r17
     b28:	f0 0d       	add	r31, r0
     b2a:	11 24       	eor	r1, r1
     b2c:	ea 5f       	subi	r30, 0xFA	; 250
     b2e:	fd 4f       	sbci	r31, 0xFD	; 253
     b30:	12 82       	std	Z+2, r1	; 0x02
     b32:	11 82       	std	Z+1, r1	; 0x01
     b34:	81 e0       	ldi	r24, 0x01	; 1
     b36:	80 83       	st	Z, r24
     b38:	13 c0       	rjmp	.+38     	; 0xb60 <Kernel_Chan_Receive+0xd8>
     b3a:	8b e2       	ldi	r24, 0x2B	; 43
     b3c:	80 9f       	mul	r24, r16
     b3e:	70 01       	movw	r14, r0
     b40:	81 9f       	mul	r24, r17
     b42:	f0 0c       	add	r15, r0
     b44:	11 24       	eor	r1, r1
     b46:	be 01       	movw	r22, r28
     b48:	c7 01       	movw	r24, r14
     b4a:	87 5f       	subi	r24, 0xF7	; 247
     b4c:	9d 4f       	sbci	r25, 0xFD	; 253
     b4e:	1b dd       	rcall	.-1482   	; 0x586 <enqueue>
     b50:	f7 01       	movw	r30, r14
     b52:	ea 5f       	subi	r30, 0xFA	; 250
     b54:	fd 4f       	sbci	r31, 0xFD	; 253
     b56:	83 e0       	ldi	r24, 0x03	; 3
     b58:	80 83       	st	Z, r24
     b5a:	cb 5f       	subi	r28, 0xFB	; 251
     b5c:	de 4f       	sbci	r29, 0xFE	; 254
     b5e:	88 83       	st	Y, r24
     b60:	df 91       	pop	r29
     b62:	cf 91       	pop	r28
     b64:	1f 91       	pop	r17
     b66:	0f 91       	pop	r16
     b68:	ff 90       	pop	r15
     b6a:	ef 90       	pop	r14
     b6c:	08 95       	ret

00000b6e <Kernel_Chan_Write>:
     b6e:	af 92       	push	r10
     b70:	bf 92       	push	r11
     b72:	cf 92       	push	r12
     b74:	df 92       	push	r13
     b76:	ef 92       	push	r14
     b78:	ff 92       	push	r15
     b7a:	0f 93       	push	r16
     b7c:	1f 93       	push	r17
     b7e:	cf 93       	push	r28
     b80:	df 93       	push	r29
     b82:	20 91 bc 04 	lds	r18, 0x04BC	; 0x8004bc <Cp>
     b86:	30 91 bd 04 	lds	r19, 0x04BD	; 0x8004bd <Cp+0x1>
     b8a:	f9 01       	movw	r30, r18
     b8c:	e3 5f       	subi	r30, 0xF3	; 243
     b8e:	fe 4f       	sbci	r31, 0xFE	; 254
     b90:	a0 80       	ld	r10, Z
     b92:	b1 80       	ldd	r11, Z+1	; 0x01
     b94:	81 e0       	ldi	r24, 0x01	; 1
     b96:	a8 1a       	sub	r10, r24
     b98:	b1 08       	sbc	r11, r1
     b9a:	8b e2       	ldi	r24, 0x2B	; 43
     b9c:	8a 9d       	mul	r24, r10
     b9e:	f0 01       	movw	r30, r0
     ba0:	8b 9d       	mul	r24, r11
     ba2:	f0 0d       	add	r31, r0
     ba4:	11 24       	eor	r1, r1
     ba6:	ea 5f       	subi	r30, 0xFA	; 250
     ba8:	fd 4f       	sbci	r31, 0xFD	; 253
     baa:	80 81       	ld	r24, Z
     bac:	81 11       	cpse	r24, r1
     bae:	03 c0       	rjmp	.+6      	; 0xbb6 <Kernel_Chan_Write+0x48>
     bb0:	82 e0       	ldi	r24, 0x02	; 2
     bb2:	88 b9       	out	0x08, r24	; 8
     bb4:	ff cf       	rjmp	.-2      	; 0xbb4 <Kernel_Chan_Write+0x46>
     bb6:	82 30       	cpi	r24, 0x02	; 2
     bb8:	19 f4       	brne	.+6      	; 0xbc0 <Kernel_Chan_Write+0x52>
     bba:	84 e0       	ldi	r24, 0x04	; 4
     bbc:	88 b9       	out	0x08, r24	; 8
     bbe:	ff cf       	rjmp	.-2      	; 0xbbe <Kernel_Chan_Write+0x50>
     bc0:	83 30       	cpi	r24, 0x03	; 3
     bc2:	09 f0       	breq	.+2      	; 0xbc6 <Kernel_Chan_Write+0x58>
     bc4:	49 c0       	rjmp	.+146    	; 0xc58 <Kernel_Chan_Write+0xea>
     bc6:	f9 01       	movw	r30, r18
     bc8:	e1 5f       	subi	r30, 0xF1	; 241
     bca:	fe 4f       	sbci	r31, 0xFE	; 254
     bcc:	80 81       	ld	r24, Z
     bce:	91 81       	ldd	r25, Z+1	; 0x01
     bd0:	2b e2       	ldi	r18, 0x2B	; 43
     bd2:	2a 9d       	mul	r18, r10
     bd4:	f0 01       	movw	r30, r0
     bd6:	2b 9d       	mul	r18, r11
     bd8:	f0 0d       	add	r31, r0
     bda:	11 24       	eor	r1, r1
     bdc:	ea 5f       	subi	r30, 0xFA	; 250
     bde:	fd 4f       	sbci	r31, 0xFD	; 253
     be0:	92 a7       	std	Z+42, r25	; 0x2a
     be2:	81 a7       	std	Z+41, r24	; 0x29
     be4:	8b e2       	ldi	r24, 0x2B	; 43
     be6:	8a 9d       	mul	r24, r10
     be8:	80 01       	movw	r16, r0
     bea:	8b 9d       	mul	r24, r11
     bec:	10 0d       	add	r17, r0
     bee:	11 24       	eor	r1, r1
     bf0:	cf 01       	movw	r24, r30
     bf2:	6f 01       	movw	r12, r30
     bf4:	e3 e2       	ldi	r30, 0x23	; 35
     bf6:	ce 0e       	add	r12, r30
     bf8:	d1 1c       	adc	r13, r1
     bfa:	7c 01       	movw	r14, r24
     bfc:	f9 e2       	ldi	r31, 0x29	; 41
     bfe:	ef 0e       	add	r14, r31
     c00:	f1 1c       	adc	r15, r1
     c02:	07 5f       	subi	r16, 0xF7	; 247
     c04:	1d 4f       	sbci	r17, 0xFD	; 253
     c06:	18 c0       	rjmp	.+48     	; 0xc38 <Kernel_Chan_Write+0xca>
     c08:	c8 01       	movw	r24, r16
     c0a:	e4 dc       	rcall	.-1592   	; 0x5d4 <dequeue>
     c0c:	ec 01       	movw	r28, r24
     c0e:	f7 01       	movw	r30, r14
     c10:	80 81       	ld	r24, Z
     c12:	91 81       	ldd	r25, Z+1	; 0x01
     c14:	fe 01       	movw	r30, r28
     c16:	e5 5f       	subi	r30, 0xF5	; 245
     c18:	fe 4f       	sbci	r31, 0xFE	; 254
     c1a:	91 83       	std	Z+1, r25	; 0x01
     c1c:	80 83       	st	Z, r24
     c1e:	ce 01       	movw	r24, r28
     c20:	6b dd       	rcall	.-1322   	; 0x6f8 <setReady>
     c22:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     c26:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     c2a:	82 81       	ldd	r24, Z+2	; 0x02
     c2c:	9a 81       	ldd	r25, Y+2	; 0x02
     c2e:	98 17       	cp	r25, r24
     c30:	18 f4       	brcc	.+6      	; 0xc38 <Kernel_Chan_Write+0xca>
     c32:	cf 01       	movw	r24, r30
     c34:	61 dd       	rcall	.-1342   	; 0x6f8 <setReady>
     c36:	f5 dc       	rcall	.-1558   	; 0x622 <Dispatch>
     c38:	f6 01       	movw	r30, r12
     c3a:	80 81       	ld	r24, Z
     c3c:	91 81       	ldd	r25, Z+1	; 0x01
     c3e:	18 16       	cp	r1, r24
     c40:	19 06       	cpc	r1, r25
     c42:	14 f3       	brlt	.-60     	; 0xc08 <Kernel_Chan_Write+0x9a>
     c44:	8b e2       	ldi	r24, 0x2B	; 43
     c46:	8a 9d       	mul	r24, r10
     c48:	f0 01       	movw	r30, r0
     c4a:	8b 9d       	mul	r24, r11
     c4c:	f0 0d       	add	r31, r0
     c4e:	11 24       	eor	r1, r1
     c50:	ea 5f       	subi	r30, 0xFA	; 250
     c52:	fd 4f       	sbci	r31, 0xFD	; 253
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	80 83       	st	Z, r24
     c58:	df 91       	pop	r29
     c5a:	cf 91       	pop	r28
     c5c:	1f 91       	pop	r17
     c5e:	0f 91       	pop	r16
     c60:	ff 90       	pop	r15
     c62:	ef 90       	pop	r14
     c64:	df 90       	pop	r13
     c66:	cf 90       	pop	r12
     c68:	bf 90       	pop	r11
     c6a:	af 90       	pop	r10
     c6c:	08 95       	ret

00000c6e <OS_Init>:
     c6e:	10 92 b7 04 	sts	0x04B7, r1	; 0x8004b7 <Tasks+0x1>
     c72:	10 92 b6 04 	sts	0x04B6, r1	; 0x8004b6 <Tasks>
     c76:	10 92 b9 04 	sts	0x04B9, r1	; 0x8004b9 <KernelActive+0x1>
     c7a:	10 92 b8 04 	sts	0x04B8, r1	; 0x8004b8 <KernelActive>
     c7e:	10 92 bb 04 	sts	0x04BB, r1	; 0x8004bb <NextP+0x1>
     c82:	10 92 ba 04 	sts	0x04BA, r1	; 0x8004ba <NextP>
     c86:	e8 e5       	ldi	r30, 0x58	; 88
     c88:	f5 e0       	ldi	r31, 0x05	; 5
     c8a:	28 e7       	ldi	r18, 0x78	; 120
     c8c:	37 e1       	ldi	r19, 0x17	; 23
     c8e:	82 e2       	ldi	r24, 0x22	; 34
     c90:	91 e0       	ldi	r25, 0x01	; 1
     c92:	df 01       	movw	r26, r30
     c94:	ac 01       	movw	r20, r24
     c96:	1d 92       	st	X+, r1
     c98:	41 50       	subi	r20, 0x01	; 1
     c9a:	50 40       	sbci	r21, 0x00	; 0
     c9c:	e1 f7       	brne	.-8      	; 0xc96 <OS_Init+0x28>
     c9e:	df 01       	movw	r26, r30
     ca0:	ab 5f       	subi	r26, 0xFB	; 251
     ca2:	be 4f       	sbci	r27, 0xFE	; 254
     ca4:	1c 92       	st	X, r1
     ca6:	ee 5d       	subi	r30, 0xDE	; 222
     ca8:	fe 4f       	sbci	r31, 0xFE	; 254
     caa:	e2 17       	cp	r30, r18
     cac:	f3 07       	cpc	r31, r19
     cae:	89 f7       	brne	.-30     	; 0xc92 <OS_Init+0x24>
     cb0:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <__data_end+0x1>
     cb4:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <__data_end>
     cb8:	e6 e0       	ldi	r30, 0x06	; 6
     cba:	f2 e0       	ldi	r31, 0x02	; 2
     cbc:	26 eb       	ldi	r18, 0xB6	; 182
     cbe:	34 e0       	ldi	r19, 0x04	; 4
     cc0:	8b e2       	ldi	r24, 0x2B	; 43
     cc2:	df 01       	movw	r26, r30
     cc4:	48 2f       	mov	r20, r24
     cc6:	1d 92       	st	X+, r1
     cc8:	4a 95       	dec	r20
     cca:	e9 f7       	brne	.-6      	; 0xcc6 <OS_Init+0x58>
     ccc:	10 82       	st	Z, r1
     cce:	bb 96       	adiw	r30, 0x2b	; 43
     cd0:	e2 17       	cp	r30, r18
     cd2:	f3 07       	cpc	r31, r19
     cd4:	b1 f7       	brne	.-20     	; 0xcc2 <OS_Init+0x54>
     cd6:	08 95       	ret

00000cd8 <OS_Start>:
     cd8:	af 92       	push	r10
     cda:	bf 92       	push	r11
     cdc:	df 92       	push	r13
     cde:	ef 92       	push	r14
     ce0:	ff 92       	push	r15
     ce2:	0f 93       	push	r16
     ce4:	1f 93       	push	r17
     ce6:	cf 93       	push	r28
     ce8:	df 93       	push	r29
     cea:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <KernelActive>
     cee:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     cf2:	89 2b       	or	r24, r25
     cf4:	09 f0       	breq	.+2      	; 0xcf8 <OS_Start+0x20>
     cf6:	9e c0       	rjmp	.+316    	; 0xe34 <OS_Start+0x15c>
     cf8:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Tasks>
     cfc:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Tasks+0x1>
     d00:	89 2b       	or	r24, r25
     d02:	09 f4       	brne	.+2      	; 0xd06 <OS_Start+0x2e>
     d04:	97 c0       	rjmp	.+302    	; 0xe34 <OS_Start+0x15c>
     d06:	f8 94       	cli
     d08:	81 e0       	ldi	r24, 0x01	; 1
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	90 93 b9 04 	sts	0x04B9, r25	; 0x8004b9 <KernelActive+0x1>
     d10:	80 93 b8 04 	sts	0x04B8, r24	; 0x8004b8 <KernelActive>
     d14:	86 dc       	rcall	.-1780   	; 0x622 <Dispatch>
     d16:	68 94       	set
     d18:	dd 24       	eor	r13, r13
     d1a:	d2 f8       	bld	r13, 2
     d1c:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     d20:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     d24:	df 01       	movw	r26, r30
     d26:	a8 5f       	subi	r26, 0xF8	; 248
     d28:	be 4f       	sbci	r27, 0xFE	; 254
     d2a:	1c 92       	st	X, r1
     d2c:	83 81       	ldd	r24, Z+3	; 0x03
     d2e:	94 81       	ldd	r25, Z+4	; 0x04
     d30:	90 93 79 17 	sts	0x1779, r25	; 0x801779 <CurrentSp+0x1>
     d34:	80 93 78 17 	sts	0x1778, r24	; 0x801778 <CurrentSp>
     d38:	00 da       	rcall	.-3072   	; 0x13a <CSwitch>
     d3a:	c0 91 bc 04 	lds	r28, 0x04BC	; 0x8004bc <Cp>
     d3e:	d0 91 bd 04 	lds	r29, 0x04BD	; 0x8004bd <Cp+0x1>
     d42:	80 91 78 17 	lds	r24, 0x1778	; 0x801778 <CurrentSp>
     d46:	90 91 79 17 	lds	r25, 0x1779	; 0x801779 <CurrentSp+0x1>
     d4a:	9c 83       	std	Y+4, r25	; 0x04
     d4c:	8b 83       	std	Y+3, r24	; 0x03
     d4e:	fe 01       	movw	r30, r28
     d50:	e8 5f       	subi	r30, 0xF8	; 248
     d52:	fe 4f       	sbci	r31, 0xFE	; 254
     d54:	e0 81       	ld	r30, Z
     d56:	f0 e0       	ldi	r31, 0x00	; 0
     d58:	e9 30       	cpi	r30, 0x09	; 9
     d5a:	f1 05       	cpc	r31, r1
     d5c:	f8 f6       	brcc	.-66     	; 0xd1c <OS_Start+0x44>
     d5e:	88 27       	eor	r24, r24
     d60:	ee 58       	subi	r30, 0x8E	; 142
     d62:	ff 4f       	sbci	r31, 0xFF	; 255
     d64:	8f 4f       	sbci	r24, 0xFF	; 255
     d66:	53 c2       	rjmp	.+1190   	; 0x120e <__tablejump2__>
     d68:	fe 01       	movw	r30, r28
     d6a:	e0 5e       	subi	r30, 0xE0	; 224
     d6c:	fe 4f       	sbci	r31, 0xFE	; 254
     d6e:	e0 80       	ld	r14, Z
     d70:	f1 80       	ldd	r15, Z+1	; 0x01
     d72:	32 97       	sbiw	r30, 0x02	; 2
     d74:	00 81       	ld	r16, Z
     d76:	11 81       	ldd	r17, Z+1	; 0x01
     d78:	32 97       	sbiw	r30, 0x02	; 2
     d7a:	20 81       	ld	r18, Z
     d7c:	31 81       	ldd	r19, Z+1	; 0x01
     d7e:	5e 01       	movw	r10, r28
     d80:	85 ee       	ldi	r24, 0xE5	; 229
     d82:	a8 1a       	sub	r10, r24
     d84:	8e ef       	ldi	r24, 0xFE	; 254
     d86:	b8 0a       	sbc	r11, r24
     d88:	f5 01       	movw	r30, r10
     d8a:	40 81       	ld	r20, Z
     d8c:	72 97       	sbiw	r30, 0x12	; 18
     d8e:	60 81       	ld	r22, Z
     d90:	71 81       	ldd	r23, Z+1	; 0x01
     d92:	33 97       	sbiw	r30, 0x03	; 3
     d94:	80 81       	ld	r24, Z
     d96:	91 81       	ldd	r25, Z+1	; 0x01
     d98:	40 dd       	rcall	.-1408   	; 0x81a <Kernel_Create_Task>
     d9a:	f5 01       	movw	r30, r10
     d9c:	80 81       	ld	r24, Z
     d9e:	82 30       	cpi	r24, 0x02	; 2
     da0:	08 f0       	brcs	.+2      	; 0xda4 <OS_Start+0xcc>
     da2:	bc cf       	rjmp	.-136    	; 0xd1c <OS_Start+0x44>
     da4:	f5 01       	movw	r30, r10
     da6:	90 81       	ld	r25, Z
     da8:	8a 81       	ldd	r24, Y+2	; 0x02
     daa:	98 17       	cp	r25, r24
     dac:	08 f0       	brcs	.+2      	; 0xdb0 <OS_Start+0xd8>
     dae:	b6 cf       	rjmp	.-148    	; 0xd1c <OS_Start+0x44>
     db0:	ce 01       	movw	r24, r28
     db2:	a2 dc       	rcall	.-1724   	; 0x6f8 <setReady>
     db4:	36 dc       	rcall	.-1940   	; 0x622 <Dispatch>
     db6:	b2 cf       	rjmp	.-156    	; 0xd1c <OS_Start+0x44>
     db8:	ce 01       	movw	r24, r28
     dba:	9e dc       	rcall	.-1732   	; 0x6f8 <setReady>
     dbc:	32 dc       	rcall	.-1948   	; 0x622 <Dispatch>
     dbe:	ae cf       	rjmp	.-164    	; 0xd1c <OS_Start+0x44>
     dc0:	fe 01       	movw	r30, r28
     dc2:	e7 5e       	subi	r30, 0xE7	; 231
     dc4:	fe 4f       	sbci	r31, 0xFE	; 254
     dc6:	11 82       	std	Z+1, r1	; 0x01
     dc8:	10 82       	st	Z, r1
     dca:	cb 5f       	subi	r28, 0xFB	; 251
     dcc:	de 4f       	sbci	r29, 0xFE	; 254
     dce:	d8 82       	st	Y, r13
     dd0:	28 dc       	rcall	.-1968   	; 0x622 <Dispatch>
     dd2:	a4 cf       	rjmp	.-184    	; 0xd1c <OS_Start+0x44>
     dd4:	cb 5f       	subi	r28, 0xFB	; 251
     dd6:	de 4f       	sbci	r29, 0xFE	; 254
     dd8:	18 82       	st	Y, r1
     dda:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Tasks>
     dde:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Tasks+0x1>
     de2:	01 97       	sbiw	r24, 0x01	; 1
     de4:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <Tasks+0x1>
     de8:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <Tasks>
     dec:	1a dc       	rcall	.-1996   	; 0x622 <Dispatch>
     dee:	96 cf       	rjmp	.-212    	; 0xd1c <OS_Start+0x44>
     df0:	65 dd       	rcall	.-1334   	; 0x8bc <Kernel_Chan_Init>
     df2:	c5 5f       	subi	r28, 0xF5	; 245
     df4:	de 4f       	sbci	r29, 0xFE	; 254
     df6:	99 83       	std	Y+1, r25	; 0x01
     df8:	88 83       	st	Y, r24
     dfa:	90 cf       	rjmp	.-224    	; 0xd1c <OS_Start+0x44>
     dfc:	a7 dd       	rcall	.-1202   	; 0x94c <Kernel_Chan_Send>
     dfe:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     e02:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     e06:	eb 5f       	subi	r30, 0xFB	; 251
     e08:	fe 4f       	sbci	r31, 0xFE	; 254
     e0a:	80 81       	ld	r24, Z
     e0c:	83 30       	cpi	r24, 0x03	; 3
     e0e:	09 f0       	breq	.+2      	; 0xe12 <OS_Start+0x13a>
     e10:	85 cf       	rjmp	.-246    	; 0xd1c <OS_Start+0x44>
     e12:	07 dc       	rcall	.-2034   	; 0x622 <Dispatch>
     e14:	83 cf       	rjmp	.-250    	; 0xd1c <OS_Start+0x44>
     e16:	38 de       	rcall	.-912    	; 0xa88 <Kernel_Chan_Receive>
     e18:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     e1c:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     e20:	eb 5f       	subi	r30, 0xFB	; 251
     e22:	fe 4f       	sbci	r31, 0xFE	; 254
     e24:	80 81       	ld	r24, Z
     e26:	83 30       	cpi	r24, 0x03	; 3
     e28:	09 f0       	breq	.+2      	; 0xe2c <OS_Start+0x154>
     e2a:	78 cf       	rjmp	.-272    	; 0xd1c <OS_Start+0x44>
     e2c:	fa db       	rcall	.-2060   	; 0x622 <Dispatch>
     e2e:	76 cf       	rjmp	.-276    	; 0xd1c <OS_Start+0x44>
     e30:	9e de       	rcall	.-708    	; 0xb6e <Kernel_Chan_Write>
     e32:	74 cf       	rjmp	.-280    	; 0xd1c <OS_Start+0x44>
     e34:	df 91       	pop	r29
     e36:	cf 91       	pop	r28
     e38:	1f 91       	pop	r17
     e3a:	0f 91       	pop	r16
     e3c:	ff 90       	pop	r15
     e3e:	ef 90       	pop	r14
     e40:	df 90       	pop	r13
     e42:	bf 90       	pop	r11
     e44:	af 90       	pop	r10
     e46:	08 95       	ret

00000e48 <Task_Create_Period>:
     e48:	ef 92       	push	r14
     e4a:	ff 92       	push	r15
     e4c:	0f 93       	push	r16
     e4e:	1f 93       	push	r17
     e50:	cf 93       	push	r28
     e52:	df 93       	push	r29
     e54:	e0 91 b8 04 	lds	r30, 0x04B8	; 0x8004b8 <KernelActive>
     e58:	f0 91 b9 04 	lds	r31, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     e5c:	ef 2b       	or	r30, r31
     e5e:	29 f1       	breq	.+74     	; 0xeaa <Task_Create_Period+0x62>
     e60:	f8 94       	cli
     e62:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     e66:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     e6a:	ef 01       	movw	r28, r30
     e6c:	c8 5f       	subi	r28, 0xF8	; 248
     e6e:	de 4f       	sbci	r29, 0xFE	; 254
     e70:	a1 e0       	ldi	r26, 0x01	; 1
     e72:	a8 83       	st	Y, r26
     e74:	22 97       	sbiw	r28, 0x02	; 2
     e76:	99 83       	std	Y+1, r25	; 0x01
     e78:	88 83       	st	Y, r24
     e7a:	23 96       	adiw	r28, 0x03	; 3
     e7c:	79 83       	std	Y+1, r23	; 0x01
     e7e:	68 83       	st	Y, r22
     e80:	62 96       	adiw	r28, 0x12	; 18
     e82:	a8 83       	st	Y, r26
     e84:	df 01       	movw	r26, r30
     e86:	a4 5e       	subi	r26, 0xE4	; 228
     e88:	be 4f       	sbci	r27, 0xFE	; 254
     e8a:	11 96       	adiw	r26, 0x01	; 1
     e8c:	5c 93       	st	X, r21
     e8e:	4e 93       	st	-X, r20
     e90:	12 96       	adiw	r26, 0x02	; 2
     e92:	11 96       	adiw	r26, 0x01	; 1
     e94:	3c 93       	st	X, r19
     e96:	2e 93       	st	-X, r18
     e98:	e0 5e       	subi	r30, 0xE0	; 224
     e9a:	fe 4f       	sbci	r31, 0xFE	; 254
     e9c:	11 83       	std	Z+1, r17	; 0x01
     e9e:	00 83       	st	Z, r16
     ea0:	80 e1       	ldi	r24, 0x10	; 16
     ea2:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     ea6:	9e d9       	rcall	.-3268   	; 0x1e4 <Enter_Kernel>
     ea8:	05 c0       	rjmp	.+10     	; 0xeb4 <Task_Create_Period+0x6c>
     eaa:	78 01       	movw	r14, r16
     eac:	89 01       	movw	r16, r18
     eae:	9a 01       	movw	r18, r20
     eb0:	41 e0       	ldi	r20, 0x01	; 1
     eb2:	b3 dc       	rcall	.-1690   	; 0x81a <Kernel_Create_Task>
     eb4:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     eb8:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     ebc:	80 81       	ld	r24, Z
     ebe:	91 81       	ldd	r25, Z+1	; 0x01
     ec0:	df 91       	pop	r29
     ec2:	cf 91       	pop	r28
     ec4:	1f 91       	pop	r17
     ec6:	0f 91       	pop	r16
     ec8:	ff 90       	pop	r15
     eca:	ef 90       	pop	r14
     ecc:	08 95       	ret

00000ece <Task_Create_System>:
     ece:	ef 92       	push	r14
     ed0:	ff 92       	push	r15
     ed2:	0f 93       	push	r16
     ed4:	1f 93       	push	r17
     ed6:	20 91 b8 04 	lds	r18, 0x04B8	; 0x8004b8 <KernelActive>
     eda:	30 91 b9 04 	lds	r19, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     ede:	23 2b       	or	r18, r19
     ee0:	01 f1       	breq	.+64     	; 0xf22 <Task_Create_System+0x54>
     ee2:	f8 94       	cli
     ee4:	20 91 bc 04 	lds	r18, 0x04BC	; 0x8004bc <Cp>
     ee8:	30 91 bd 04 	lds	r19, 0x04BD	; 0x8004bd <Cp+0x1>
     eec:	f9 01       	movw	r30, r18
     eee:	e8 5f       	subi	r30, 0xF8	; 248
     ef0:	fe 4f       	sbci	r31, 0xFE	; 254
     ef2:	41 e0       	ldi	r20, 0x01	; 1
     ef4:	40 83       	st	Z, r20
     ef6:	32 97       	sbiw	r30, 0x02	; 2
     ef8:	91 83       	std	Z+1, r25	; 0x01
     efa:	80 83       	st	Z, r24
     efc:	33 96       	adiw	r30, 0x03	; 3
     efe:	71 83       	std	Z+1, r23	; 0x01
     f00:	60 83       	st	Z, r22
     f02:	72 96       	adiw	r30, 0x12	; 18
     f04:	10 82       	st	Z, r1
     f06:	31 96       	adiw	r30, 0x01	; 1
     f08:	11 82       	std	Z+1, r1	; 0x01
     f0a:	10 82       	st	Z, r1
     f0c:	32 96       	adiw	r30, 0x02	; 2
     f0e:	11 82       	std	Z+1, r1	; 0x01
     f10:	10 82       	st	Z, r1
     f12:	32 96       	adiw	r30, 0x02	; 2
     f14:	11 82       	std	Z+1, r1	; 0x01
     f16:	10 82       	st	Z, r1
     f18:	80 e1       	ldi	r24, 0x10	; 16
     f1a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     f1e:	62 d9       	rcall	.-3388   	; 0x1e4 <Enter_Kernel>
     f20:	08 c0       	rjmp	.+16     	; 0xf32 <Task_Create_System+0x64>
     f22:	e1 2c       	mov	r14, r1
     f24:	f1 2c       	mov	r15, r1
     f26:	00 e0       	ldi	r16, 0x00	; 0
     f28:	10 e0       	ldi	r17, 0x00	; 0
     f2a:	20 e0       	ldi	r18, 0x00	; 0
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	40 e0       	ldi	r20, 0x00	; 0
     f30:	74 dc       	rcall	.-1816   	; 0x81a <Kernel_Create_Task>
     f32:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     f36:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     f3a:	80 81       	ld	r24, Z
     f3c:	91 81       	ldd	r25, Z+1	; 0x01
     f3e:	1f 91       	pop	r17
     f40:	0f 91       	pop	r16
     f42:	ff 90       	pop	r15
     f44:	ef 90       	pop	r14
     f46:	08 95       	ret

00000f48 <Task_Create_Idle>:
     f48:	ef 92       	push	r14
     f4a:	ff 92       	push	r15
     f4c:	0f 93       	push	r16
     f4e:	1f 93       	push	r17
     f50:	20 91 b8 04 	lds	r18, 0x04B8	; 0x8004b8 <KernelActive>
     f54:	30 91 b9 04 	lds	r19, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     f58:	23 2b       	or	r18, r19
     f5a:	29 f1       	breq	.+74     	; 0xfa6 <Task_Create_Idle+0x5e>
     f5c:	f8 94       	cli
     f5e:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     f62:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     f66:	df 01       	movw	r26, r30
     f68:	a8 5f       	subi	r26, 0xF8	; 248
     f6a:	be 4f       	sbci	r27, 0xFE	; 254
     f6c:	21 e0       	ldi	r18, 0x01	; 1
     f6e:	2c 93       	st	X, r18
     f70:	12 97       	sbiw	r26, 0x02	; 2
     f72:	11 96       	adiw	r26, 0x01	; 1
     f74:	9c 93       	st	X, r25
     f76:	8e 93       	st	-X, r24
     f78:	13 96       	adiw	r26, 0x03	; 3
     f7a:	11 96       	adiw	r26, 0x01	; 1
     f7c:	7c 93       	st	X, r23
     f7e:	6e 93       	st	-X, r22
     f80:	83 e0       	ldi	r24, 0x03	; 3
     f82:	82 83       	std	Z+2, r24	; 0x02
     f84:	18 96       	adiw	r26, 0x08	; 8
     f86:	11 96       	adiw	r26, 0x01	; 1
     f88:	1c 92       	st	X, r1
     f8a:	1e 92       	st	-X, r1
     f8c:	12 96       	adiw	r26, 0x02	; 2
     f8e:	11 96       	adiw	r26, 0x01	; 1
     f90:	1c 92       	st	X, r1
     f92:	1e 92       	st	-X, r1
     f94:	eb 5e       	subi	r30, 0xEB	; 235
     f96:	fe 4f       	sbci	r31, 0xFE	; 254
     f98:	11 82       	std	Z+1, r1	; 0x01
     f9a:	10 82       	st	Z, r1
     f9c:	80 e1       	ldi	r24, 0x10	; 16
     f9e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     fa2:	20 d9       	rcall	.-3520   	; 0x1e4 <Enter_Kernel>
     fa4:	08 c0       	rjmp	.+16     	; 0xfb6 <Task_Create_Idle+0x6e>
     fa6:	e1 2c       	mov	r14, r1
     fa8:	f1 2c       	mov	r15, r1
     faa:	00 e0       	ldi	r16, 0x00	; 0
     fac:	10 e0       	ldi	r17, 0x00	; 0
     fae:	20 e0       	ldi	r18, 0x00	; 0
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	43 e0       	ldi	r20, 0x03	; 3
     fb4:	32 dc       	rcall	.-1948   	; 0x81a <Kernel_Create_Task>
     fb6:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     fba:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     fbe:	80 81       	ld	r24, Z
     fc0:	91 81       	ldd	r25, Z+1	; 0x01
     fc2:	1f 91       	pop	r17
     fc4:	0f 91       	pop	r16
     fc6:	ff 90       	pop	r15
     fc8:	ef 90       	pop	r14
     fca:	08 95       	ret

00000fcc <Task_Next_2>:
     fcc:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <KernelActive>
     fd0:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     fd4:	89 2b       	or	r24, r25
     fd6:	69 f0       	breq	.+26     	; 0xff2 <Task_Next_2+0x26>
     fd8:	f8 94       	cli
     fda:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     fde:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     fe2:	e8 5f       	subi	r30, 0xF8	; 248
     fe4:	fe 4f       	sbci	r31, 0xFE	; 254
     fe6:	82 e0       	ldi	r24, 0x02	; 2
     fe8:	80 83       	st	Z, r24
     fea:	80 e1       	ldi	r24, 0x10	; 16
     fec:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     ff0:	f9 c8       	rjmp	.-3598   	; 0x1e4 <Enter_Kernel>
     ff2:	08 95       	ret

00000ff4 <Task_Next>:
     ff4:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <KernelActive>
     ff8:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     ffc:	89 2b       	or	r24, r25
     ffe:	91 f0       	breq	.+36     	; 0x1024 <Task_Next+0x30>
    1000:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
    1004:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
    1008:	82 81       	ldd	r24, Z+2	; 0x02
    100a:	81 30       	cpi	r24, 0x01	; 1
    100c:	11 f0       	breq	.+4      	; 0x1012 <Task_Next+0x1e>
    100e:	de cf       	rjmp	.-68     	; 0xfcc <Task_Next_2>
    1010:	08 95       	ret
    1012:	f8 94       	cli
    1014:	e8 5f       	subi	r30, 0xF8	; 248
    1016:	fe 4f       	sbci	r31, 0xFE	; 254
    1018:	84 e0       	ldi	r24, 0x04	; 4
    101a:	80 83       	st	Z, r24
    101c:	80 e1       	ldi	r24, 0x10	; 16
    101e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
    1022:	e0 c8       	rjmp	.-3648   	; 0x1e4 <Enter_Kernel>
    1024:	08 95       	ret

00001026 <Timer_Init>:
=======
     28c:	ff cf       	rjmp	.-2      	; 0x28c <Idle_Task>

0000028e <Task_Terminate>:
     28e:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <KernelActive>
     292:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     296:	89 2b       	or	r24, r25
     298:	69 f0       	breq	.+26     	; 0x2b4 <Task_Terminate+0x26>
     29a:	f8 94       	cli
     29c:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     2a0:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     2a4:	e8 5f       	subi	r30, 0xF8	; 248
     2a6:	fe 4f       	sbci	r31, 0xFE	; 254
     2a8:	83 e0       	ldi	r24, 0x03	; 3
     2aa:	80 83       	st	Z, r24
     2ac:	80 e1       	ldi	r24, 0x10	; 16
     2ae:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     2b2:	97 cf       	rjmp	.-210    	; 0x1e2 <Enter_Kernel>
     2b4:	08 95       	ret

000002b6 <enqueue>:
     2b6:	fc 01       	movw	r30, r24
     2b8:	80 a1       	ldd	r24, Z+32	; 0x20
     2ba:	91 a1       	ldd	r25, Z+33	; 0x21
     2bc:	40 97       	sbiw	r24, 0x10	; 16
     2be:	19 f4       	brne	.+6      	; 0x2c6 <enqueue+0x10>
     2c0:	8c e0       	ldi	r24, 0x0C	; 12
     2c2:	88 b9       	out	0x08, r24	; 8
     2c4:	ff cf       	rjmp	.-2      	; 0x2c4 <enqueue+0xe>
     2c6:	a4 a1       	ldd	r26, Z+36	; 0x24
     2c8:	b5 a1       	ldd	r27, Z+37	; 0x25
     2ca:	aa 0f       	add	r26, r26
     2cc:	bb 1f       	adc	r27, r27
     2ce:	ae 0f       	add	r26, r30
     2d0:	bf 1f       	adc	r27, r31
     2d2:	11 96       	adiw	r26, 0x01	; 1
     2d4:	7c 93       	st	X, r23
     2d6:	6e 93       	st	-X, r22
     2d8:	80 a1       	ldd	r24, Z+32	; 0x20
     2da:	91 a1       	ldd	r25, Z+33	; 0x21
     2dc:	01 96       	adiw	r24, 0x01	; 1
     2de:	91 a3       	std	Z+33, r25	; 0x21
     2e0:	80 a3       	std	Z+32, r24	; 0x20
     2e2:	24 a1       	ldd	r18, Z+36	; 0x24
     2e4:	35 a1       	ldd	r19, Z+37	; 0x25
     2e6:	2f 5f       	subi	r18, 0xFF	; 255
     2e8:	3f 4f       	sbci	r19, 0xFF	; 255
     2ea:	2f 70       	andi	r18, 0x0F	; 15
     2ec:	30 78       	andi	r19, 0x80	; 128
     2ee:	33 23       	and	r19, r19
     2f0:	34 f4       	brge	.+12     	; 0x2fe <enqueue+0x48>
     2f2:	21 50       	subi	r18, 0x01	; 1
     2f4:	31 09       	sbc	r19, r1
     2f6:	20 6f       	ori	r18, 0xF0	; 240
     2f8:	3f 6f       	ori	r19, 0xFF	; 255
     2fa:	2f 5f       	subi	r18, 0xFF	; 255
     2fc:	3f 4f       	sbci	r19, 0xFF	; 255
     2fe:	35 a3       	std	Z+37, r19	; 0x25
     300:	24 a3       	std	Z+36, r18	; 0x24
     302:	08 95       	ret

00000304 <dequeue>:
     304:	fc 01       	movw	r30, r24
     306:	80 a1       	ldd	r24, Z+32	; 0x20
     308:	91 a1       	ldd	r25, Z+33	; 0x21
     30a:	89 2b       	or	r24, r25
     30c:	19 f4       	brne	.+6      	; 0x314 <dequeue+0x10>
     30e:	8d e0       	ldi	r24, 0x0D	; 13
     310:	88 b9       	out	0x08, r24	; 8
     312:	ff cf       	rjmp	.-2      	; 0x312 <dequeue+0xe>
     314:	a2 a1       	ldd	r26, Z+34	; 0x22
     316:	b3 a1       	ldd	r27, Z+35	; 0x23
     318:	aa 0f       	add	r26, r26
     31a:	bb 1f       	adc	r27, r27
     31c:	ae 0f       	add	r26, r30
     31e:	bf 1f       	adc	r27, r31
     320:	8d 91       	ld	r24, X+
     322:	9c 91       	ld	r25, X
     324:	20 a1       	ldd	r18, Z+32	; 0x20
     326:	31 a1       	ldd	r19, Z+33	; 0x21
     328:	21 50       	subi	r18, 0x01	; 1
     32a:	31 09       	sbc	r19, r1
     32c:	31 a3       	std	Z+33, r19	; 0x21
     32e:	20 a3       	std	Z+32, r18	; 0x20
     330:	22 a1       	ldd	r18, Z+34	; 0x22
     332:	33 a1       	ldd	r19, Z+35	; 0x23
     334:	2f 5f       	subi	r18, 0xFF	; 255
     336:	3f 4f       	sbci	r19, 0xFF	; 255
     338:	2f 70       	andi	r18, 0x0F	; 15
     33a:	30 78       	andi	r19, 0x80	; 128
     33c:	33 23       	and	r19, r19
     33e:	34 f4       	brge	.+12     	; 0x34c <dequeue+0x48>
     340:	21 50       	subi	r18, 0x01	; 1
     342:	31 09       	sbc	r19, r1
     344:	20 6f       	ori	r18, 0xF0	; 240
     346:	3f 6f       	ori	r19, 0xFF	; 255
     348:	2f 5f       	subi	r18, 0xFF	; 255
     34a:	3f 4f       	sbci	r19, 0xFF	; 255
     34c:	33 a3       	std	Z+35, r19	; 0x23
     34e:	22 a3       	std	Z+34, r18	; 0x22
     350:	08 95       	ret

00000352 <Dispatch>:
     352:	80 91 06 05 	lds	r24, 0x0506	; 0x800506 <ReadyQSystem+0x20>
     356:	90 91 07 05 	lds	r25, 0x0507	; 0x800507 <ReadyQSystem+0x21>
     35a:	18 16       	cp	r1, r24
     35c:	19 06       	cpc	r1, r25
     35e:	9c f4       	brge	.+38     	; 0x386 <Dispatch+0x34>
     360:	86 ee       	ldi	r24, 0xE6	; 230
     362:	94 e0       	ldi	r25, 0x04	; 4
     364:	cf df       	rcall	.-98     	; 0x304 <dequeue>
     366:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <Cp+0x1>
     36a:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <Cp>
     36e:	fc 01       	movw	r30, r24
     370:	23 81       	ldd	r18, Z+3	; 0x03
     372:	34 81       	ldd	r19, Z+4	; 0x04
     374:	30 93 7a 17 	sts	0x177A, r19	; 0x80177a <CurrentSp+0x1>
     378:	20 93 79 17 	sts	0x1779, r18	; 0x801779 <CurrentSp>
     37c:	eb 5f       	subi	r30, 0xFB	; 251
     37e:	fe 4f       	sbci	r31, 0xFE	; 254
     380:	82 e0       	ldi	r24, 0x02	; 2
     382:	80 83       	st	Z, r24
     384:	08 95       	ret
     386:	80 91 2c 05 	lds	r24, 0x052C	; 0x80052c <ReadyQTime+0x20>
     38a:	90 91 2d 05 	lds	r25, 0x052D	; 0x80052d <ReadyQTime+0x21>
     38e:	18 16       	cp	r1, r24
     390:	19 06       	cpc	r1, r25
     392:	9c f4       	brge	.+38     	; 0x3ba <Dispatch+0x68>
     394:	8c e0       	ldi	r24, 0x0C	; 12
     396:	95 e0       	ldi	r25, 0x05	; 5
     398:	b5 df       	rcall	.-150    	; 0x304 <dequeue>
     39a:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <Cp+0x1>
     39e:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <Cp>
     3a2:	fc 01       	movw	r30, r24
     3a4:	23 81       	ldd	r18, Z+3	; 0x03
     3a6:	34 81       	ldd	r19, Z+4	; 0x04
     3a8:	30 93 7a 17 	sts	0x177A, r19	; 0x80177a <CurrentSp+0x1>
     3ac:	20 93 79 17 	sts	0x1779, r18	; 0x801779 <CurrentSp>
     3b0:	eb 5f       	subi	r30, 0xFB	; 251
     3b2:	fe 4f       	sbci	r31, 0xFE	; 254
     3b4:	82 e0       	ldi	r24, 0x02	; 2
     3b6:	80 83       	st	Z, r24
     3b8:	08 95       	ret
     3ba:	80 91 52 05 	lds	r24, 0x0552	; 0x800552 <ReadyQRR+0x20>
     3be:	90 91 53 05 	lds	r25, 0x0553	; 0x800553 <ReadyQRR+0x21>
     3c2:	18 16       	cp	r1, r24
     3c4:	19 06       	cpc	r1, r25
     3c6:	9c f4       	brge	.+38     	; 0x3ee <Dispatch+0x9c>
     3c8:	82 e3       	ldi	r24, 0x32	; 50
     3ca:	95 e0       	ldi	r25, 0x05	; 5
     3cc:	9b df       	rcall	.-202    	; 0x304 <dequeue>
     3ce:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <Cp+0x1>
     3d2:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <Cp>
     3d6:	fc 01       	movw	r30, r24
     3d8:	23 81       	ldd	r18, Z+3	; 0x03
     3da:	34 81       	ldd	r19, Z+4	; 0x04
     3dc:	30 93 7a 17 	sts	0x177A, r19	; 0x80177a <CurrentSp+0x1>
     3e0:	20 93 79 17 	sts	0x1779, r18	; 0x801779 <CurrentSp>
     3e4:	eb 5f       	subi	r30, 0xFB	; 251
     3e6:	fe 4f       	sbci	r31, 0xFE	; 254
     3e8:	82 e0       	ldi	r24, 0x02	; 2
     3ea:	80 83       	st	Z, r24
     3ec:	08 95       	ret
     3ee:	80 91 e0 04 	lds	r24, 0x04E0	; 0x8004e0 <ReadyQIdle+0x20>
     3f2:	90 91 e1 04 	lds	r25, 0x04E1	; 0x8004e1 <ReadyQIdle+0x21>
     3f6:	18 16       	cp	r1, r24
     3f8:	19 06       	cpc	r1, r25
     3fa:	9c f4       	brge	.+38     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3fc:	80 ec       	ldi	r24, 0xC0	; 192
     3fe:	94 e0       	ldi	r25, 0x04	; 4
     400:	81 df       	rcall	.-254    	; 0x304 <dequeue>
     402:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <Cp+0x1>
     406:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <Cp>
     40a:	fc 01       	movw	r30, r24
     40c:	23 81       	ldd	r18, Z+3	; 0x03
     40e:	34 81       	ldd	r19, Z+4	; 0x04
     410:	30 93 7a 17 	sts	0x177A, r19	; 0x80177a <CurrentSp+0x1>
     414:	20 93 79 17 	sts	0x1779, r18	; 0x801779 <CurrentSp>
     418:	eb 5f       	subi	r30, 0xFB	; 251
     41a:	fe 4f       	sbci	r31, 0xFE	; 254
     41c:	82 e0       	ldi	r24, 0x02	; 2
     41e:	80 83       	st	Z, r24
     420:	08 95       	ret
     422:	88 e1       	ldi	r24, 0x18	; 24
     424:	88 b9       	out	0x08, r24	; 8
     426:	ff cf       	rjmp	.-2      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>

00000428 <setReady>:
     428:	cf 93       	push	r28
     42a:	df 93       	push	r29
     42c:	ec 01       	movw	r28, r24
     42e:	8a 81       	ldd	r24, Y+2	; 0x02
     430:	81 30       	cpi	r24, 0x01	; 1
     432:	79 f0       	breq	.+30     	; 0x452 <setReady+0x2a>
     434:	d8 f0       	brcs	.+54     	; 0x46c <setReady+0x44>
     436:	82 30       	cpi	r24, 0x02	; 2
     438:	39 f0       	breq	.+14     	; 0x448 <setReady+0x20>
     43a:	83 30       	cpi	r24, 0x03	; 3
     43c:	e1 f4       	brne	.+56     	; 0x476 <setReady+0x4e>
     43e:	be 01       	movw	r22, r28
     440:	80 ec       	ldi	r24, 0xC0	; 192
     442:	94 e0       	ldi	r25, 0x04	; 4
     444:	38 df       	rcall	.-400    	; 0x2b6 <enqueue>
     446:	1a c0       	rjmp	.+52     	; 0x47c <setReady+0x54>
     448:	be 01       	movw	r22, r28
     44a:	82 e3       	ldi	r24, 0x32	; 50
     44c:	95 e0       	ldi	r25, 0x05	; 5
     44e:	33 df       	rcall	.-410    	; 0x2b6 <enqueue>
     450:	15 c0       	rjmp	.+42     	; 0x47c <setReady+0x54>
     452:	be 01       	movw	r22, r28
     454:	8c e0       	ldi	r24, 0x0C	; 12
     456:	95 e0       	ldi	r25, 0x05	; 5
     458:	2e df       	rcall	.-420    	; 0x2b6 <enqueue>
     45a:	80 91 2c 05 	lds	r24, 0x052C	; 0x80052c <ReadyQTime+0x20>
     45e:	90 91 2d 05 	lds	r25, 0x052D	; 0x80052d <ReadyQTime+0x21>
     462:	02 97       	sbiw	r24, 0x02	; 2
     464:	5c f0       	brlt	.+22     	; 0x47c <setReady+0x54>
     466:	85 e0       	ldi	r24, 0x05	; 5
     468:	88 b9       	out	0x08, r24	; 8
     46a:	ff cf       	rjmp	.-2      	; 0x46a <setReady+0x42>
     46c:	be 01       	movw	r22, r28
     46e:	86 ee       	ldi	r24, 0xE6	; 230
     470:	94 e0       	ldi	r25, 0x04	; 4
     472:	21 df       	rcall	.-446    	; 0x2b6 <enqueue>
     474:	03 c0       	rjmp	.+6      	; 0x47c <setReady+0x54>
     476:	8c e7       	ldi	r24, 0x7C	; 124
     478:	88 b9       	out	0x08, r24	; 8
     47a:	ff cf       	rjmp	.-2      	; 0x47a <setReady+0x52>
     47c:	cb 5f       	subi	r28, 0xFB	; 251
     47e:	de 4f       	sbci	r29, 0xFE	; 254
     480:	81 e0       	ldi	r24, 0x01	; 1
     482:	88 83       	st	Y, r24
     484:	df 91       	pop	r29
     486:	cf 91       	pop	r28
     488:	08 95       	ret

0000048a <Kernel_Create_Task_At>:
     48a:	8f 92       	push	r8
     48c:	9f 92       	push	r9
     48e:	af 92       	push	r10
     490:	bf 92       	push	r11
     492:	cf 92       	push	r12
     494:	df 92       	push	r13
     496:	ef 92       	push	r14
     498:	ff 92       	push	r15
     49a:	0f 93       	push	r16
     49c:	cf 93       	push	r28
     49e:	df 93       	push	r29
     4a0:	ec 01       	movw	r28, r24
     4a2:	fc 01       	movw	r30, r24
     4a4:	35 96       	adiw	r30, 0x05	; 5
     4a6:	81 2c       	mov	r8, r1
     4a8:	99 24       	eor	r9, r9
     4aa:	93 94       	inc	r9
     4ac:	df 01       	movw	r26, r30
     4ae:	c4 01       	movw	r24, r8
     4b0:	1d 92       	st	X+, r1
     4b2:	01 97       	sbiw	r24, 0x01	; 1
     4b4:	e9 f7       	brne	.-6      	; 0x4b0 <Kernel_Create_Task_At+0x26>
     4b6:	e1 50       	subi	r30, 0x01	; 1
     4b8:	ff 4f       	sbci	r31, 0xFF	; 255
     4ba:	87 e4       	ldi	r24, 0x47	; 71
     4bc:	91 e0       	ldi	r25, 0x01	; 1
     4be:	80 83       	st	Z, r24
     4c0:	31 97       	sbiw	r30, 0x01	; 1
     4c2:	90 83       	st	Z, r25
     4c4:	31 97       	sbiw	r30, 0x01	; 1
     4c6:	10 82       	st	Z, r1
     4c8:	31 97       	sbiw	r30, 0x01	; 1
     4ca:	60 83       	st	Z, r22
     4cc:	31 97       	sbiw	r30, 0x01	; 1
     4ce:	70 83       	st	Z, r23
     4d0:	31 97       	sbiw	r30, 0x01	; 1
     4d2:	10 82       	st	Z, r1
     4d4:	de 01       	movw	r26, r28
     4d6:	a4 52       	subi	r26, 0x24	; 36
     4d8:	bf 4f       	sbci	r27, 0xFF	; 255
     4da:	b2 97       	sbiw	r30, 0x22	; 34
     4dc:	80 81       	ld	r24, Z
     4de:	80 68       	ori	r24, 0x80	; 128
     4e0:	80 83       	st	Z, r24
     4e2:	bc 83       	std	Y+4, r27	; 0x04
     4e4:	ab 83       	std	Y+3, r26	; 0x03
     4e6:	b9 96       	adiw	r30, 0x29	; 41
     4e8:	71 83       	std	Z+1, r23	; 0x01
     4ea:	60 83       	st	Z, r22
     4ec:	32 96       	adiw	r30, 0x02	; 2
     4ee:	10 82       	st	Z, r1
     4f0:	9d 96       	adiw	r26, 0x2d	; 45
     4f2:	11 96       	adiw	r26, 0x01	; 1
     4f4:	5c 93       	st	X, r21
     4f6:	4e 93       	st	-X, r20
     4f8:	39 83       	std	Y+1, r19	; 0x01
     4fa:	28 83       	st	Y, r18
     4fc:	0a 83       	std	Y+2, r16	; 0x02
     4fe:	10 82       	st	Z, r1
     500:	39 96       	adiw	r30, 0x09	; 9
     502:	f1 82       	std	Z+1, r15	; 0x01
     504:	e0 82       	st	Z, r14
     506:	32 96       	adiw	r30, 0x02	; 2
     508:	d1 82       	std	Z+1, r13	; 0x01
     50a:	c0 82       	st	Z, r12
     50c:	32 96       	adiw	r30, 0x02	; 2
     50e:	b1 82       	std	Z+1, r11	; 0x01
     510:	a0 82       	st	Z, r10
     512:	32 96       	adiw	r30, 0x02	; 2
     514:	b1 82       	std	Z+1, r11	; 0x01
     516:	a0 82       	st	Z, r10
     518:	32 96       	adiw	r30, 0x02	; 2
     51a:	11 82       	std	Z+1, r1	; 0x01
     51c:	10 82       	st	Z, r1
     51e:	01 30       	cpi	r16, 0x01	; 1
     520:	21 f4       	brne	.+8      	; 0x52a <Kernel_Create_Task_At+0xa0>
     522:	84 e0       	ldi	r24, 0x04	; 4
     524:	74 97       	sbiw	r30, 0x14	; 20
     526:	80 83       	st	Z, r24
     528:	02 c0       	rjmp	.+4      	; 0x52e <Kernel_Create_Task_At+0xa4>
     52a:	ce 01       	movw	r24, r28
     52c:	7d df       	rcall	.-262    	; 0x428 <setReady>
     52e:	88 81       	ld	r24, Y
     530:	99 81       	ldd	r25, Y+1	; 0x01
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	0f 91       	pop	r16
     538:	ff 90       	pop	r15
     53a:	ef 90       	pop	r14
     53c:	df 90       	pop	r13
     53e:	cf 90       	pop	r12
     540:	bf 90       	pop	r11
     542:	af 90       	pop	r10
     544:	9f 90       	pop	r9
     546:	8f 90       	pop	r8
     548:	08 95       	ret

0000054a <Kernel_Create_Task>:
     54a:	af 92       	push	r10
     54c:	bf 92       	push	r11
     54e:	cf 92       	push	r12
     550:	df 92       	push	r13
     552:	ef 92       	push	r14
     554:	ff 92       	push	r15
     556:	0f 93       	push	r16
     558:	1f 93       	push	r17
     55a:	cf 93       	push	r28
     55c:	df 93       	push	r29
     55e:	ec 01       	movw	r28, r24
     560:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Tasks>
     564:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Tasks+0x1>
     568:	40 97       	sbiw	r24, 0x10	; 16
     56a:	99 f1       	breq	.+102    	; 0x5d2 <Kernel_Create_Task+0x88>
     56c:	80 91 5d 06 	lds	r24, 0x065D	; 0x80065d <Process+0x105>
     570:	88 23       	and	r24, r24
     572:	71 f0       	breq	.+28     	; 0x590 <Kernel_Create_Task+0x46>
     574:	af e7       	ldi	r26, 0x7F	; 127
     576:	b7 e0       	ldi	r27, 0x07	; 7
     578:	e1 e0       	ldi	r30, 0x01	; 1
     57a:	f0 e0       	ldi	r31, 0x00	; 0
     57c:	9c 91       	ld	r25, X
     57e:	99 23       	and	r25, r25
     580:	49 f0       	breq	.+18     	; 0x594 <Kernel_Create_Task+0x4a>
     582:	31 96       	adiw	r30, 0x01	; 1
     584:	ae 5d       	subi	r26, 0xDE	; 222
     586:	be 4f       	sbci	r27, 0xFE	; 254
     588:	e0 31       	cpi	r30, 0x10	; 16
     58a:	f1 05       	cpc	r31, r1
     58c:	b9 f7       	brne	.-18     	; 0x57c <Kernel_Create_Task+0x32>
     58e:	02 c0       	rjmp	.+4      	; 0x594 <Kernel_Create_Task+0x4a>
     590:	e0 e0       	ldi	r30, 0x00	; 0
     592:	f0 e0       	ldi	r31, 0x00	; 0
     594:	57 01       	movw	r10, r14
     596:	68 01       	movw	r12, r16
     598:	79 01       	movw	r14, r18
     59a:	04 2f       	mov	r16, r20
     59c:	ab 01       	movw	r20, r22
     59e:	be 01       	movw	r22, r28
     5a0:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Tasks>
     5a4:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Tasks+0x1>
     5a8:	01 96       	adiw	r24, 0x01	; 1
     5aa:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <Tasks+0x1>
     5ae:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <Tasks>
     5b2:	9f 01       	movw	r18, r30
     5b4:	2f 5f       	subi	r18, 0xFF	; 255
     5b6:	3f 4f       	sbci	r19, 0xFF	; 255
     5b8:	a2 e2       	ldi	r26, 0x22	; 34
     5ba:	b1 e0       	ldi	r27, 0x01	; 1
     5bc:	ea 9f       	mul	r30, r26
     5be:	c0 01       	movw	r24, r0
     5c0:	eb 9f       	mul	r30, r27
     5c2:	90 0d       	add	r25, r0
     5c4:	fa 9f       	mul	r31, r26
     5c6:	90 0d       	add	r25, r0
     5c8:	11 24       	eor	r1, r1
     5ca:	88 5a       	subi	r24, 0xA8	; 168
     5cc:	9a 4f       	sbci	r25, 0xFA	; 250
     5ce:	5d df       	rcall	.-326    	; 0x48a <Kernel_Create_Task_At>
     5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <Kernel_Create_Task+0x8c>
     5d2:	80 e0       	ldi	r24, 0x00	; 0
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	1f 91       	pop	r17
     5dc:	0f 91       	pop	r16
     5de:	ff 90       	pop	r15
     5e0:	ef 90       	pop	r14
     5e2:	df 90       	pop	r13
     5e4:	cf 90       	pop	r12
     5e6:	bf 90       	pop	r11
     5e8:	af 90       	pop	r10
     5ea:	08 95       	ret

000005ec <Kernel_Chan_Init>:
     5ec:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
     5f0:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__data_end+0x1>
     5f4:	40 97       	sbiw	r24, 0x10	; 16
     5f6:	18 f0       	brcs	.+6      	; 0x5fe <Kernel_Chan_Init+0x12>
     5f8:	82 e0       	ldi	r24, 0x02	; 2
     5fa:	88 b9       	out	0x08, r24	; 8
     5fc:	ff cf       	rjmp	.-2      	; 0x5fc <Kernel_Chan_Init+0x10>
     5fe:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__data_end>
     602:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__data_end+0x1>
     606:	8b e2       	ldi	r24, 0x2B	; 43
     608:	82 9f       	mul	r24, r18
     60a:	f0 01       	movw	r30, r0
     60c:	83 9f       	mul	r24, r19
     60e:	f0 0d       	add	r31, r0
     610:	11 24       	eor	r1, r1
     612:	ea 5f       	subi	r30, 0xFA	; 250
     614:	fd 4f       	sbci	r31, 0xFD	; 253
     616:	91 e0       	ldi	r25, 0x01	; 1
     618:	90 83       	st	Z, r25
     61a:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__data_end>
     61e:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__data_end+0x1>
     622:	82 9f       	mul	r24, r18
     624:	f0 01       	movw	r30, r0
     626:	83 9f       	mul	r24, r19
     628:	f0 0d       	add	r31, r0
     62a:	11 24       	eor	r1, r1
     62c:	ea 5f       	subi	r30, 0xFA	; 250
     62e:	fd 4f       	sbci	r31, 0xFD	; 253
     630:	14 a2       	std	Z+36, r1	; 0x24
     632:	13 a2       	std	Z+35, r1	; 0x23
     634:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__data_end>
     638:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__data_end+0x1>
     63c:	82 9f       	mul	r24, r18
     63e:	f0 01       	movw	r30, r0
     640:	83 9f       	mul	r24, r19
     642:	f0 0d       	add	r31, r0
     644:	11 24       	eor	r1, r1
     646:	ea 5f       	subi	r30, 0xFA	; 250
     648:	fd 4f       	sbci	r31, 0xFD	; 253
     64a:	16 a2       	std	Z+38, r1	; 0x26
     64c:	15 a2       	std	Z+37, r1	; 0x25
     64e:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <__data_end>
     652:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <__data_end+0x1>
     656:	82 9f       	mul	r24, r18
     658:	f0 01       	movw	r30, r0
     65a:	83 9f       	mul	r24, r19
     65c:	f0 0d       	add	r31, r0
     65e:	11 24       	eor	r1, r1
     660:	ea 5f       	subi	r30, 0xFA	; 250
     662:	fd 4f       	sbci	r31, 0xFD	; 253
     664:	10 a6       	std	Z+40, r1	; 0x28
     666:	17 a2       	std	Z+39, r1	; 0x27
     668:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
     66c:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__data_end+0x1>
     670:	01 96       	adiw	r24, 0x01	; 1
     672:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <__data_end+0x1>
     676:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <__data_end>
     67a:	08 95       	ret

0000067c <Kernel_Chan_Send>:
     67c:	af 92       	push	r10
     67e:	bf 92       	push	r11
     680:	cf 92       	push	r12
     682:	df 92       	push	r13
     684:	ef 92       	push	r14
     686:	ff 92       	push	r15
     688:	0f 93       	push	r16
     68a:	1f 93       	push	r17
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     694:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     698:	82 81       	ldd	r24, Z+2	; 0x02
     69a:	81 30       	cpi	r24, 0x01	; 1
     69c:	19 f4       	brne	.+6      	; 0x6a4 <Kernel_Chan_Send+0x28>
     69e:	83 e0       	ldi	r24, 0x03	; 3
     6a0:	88 b9       	out	0x08, r24	; 8
     6a2:	ff cf       	rjmp	.-2      	; 0x6a2 <Kernel_Chan_Send+0x26>
     6a4:	df 01       	movw	r26, r30
     6a6:	a3 5f       	subi	r26, 0xF3	; 243
     6a8:	be 4f       	sbci	r27, 0xFE	; 254
     6aa:	ad 90       	ld	r10, X+
     6ac:	bc 90       	ld	r11, X
     6ae:	21 e0       	ldi	r18, 0x01	; 1
     6b0:	a2 1a       	sub	r10, r18
     6b2:	b1 08       	sbc	r11, r1
     6b4:	8b e2       	ldi	r24, 0x2B	; 43
     6b6:	8a 9d       	mul	r24, r10
     6b8:	d0 01       	movw	r26, r0
     6ba:	8b 9d       	mul	r24, r11
     6bc:	b0 0d       	add	r27, r0
     6be:	11 24       	eor	r1, r1
     6c0:	aa 5f       	subi	r26, 0xFA	; 250
     6c2:	bd 4f       	sbci	r27, 0xFD	; 253
     6c4:	8c 91       	ld	r24, X
     6c6:	81 11       	cpse	r24, r1
     6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <Kernel_Chan_Send+0x54>
     6ca:	82 e0       	ldi	r24, 0x02	; 2
     6cc:	88 b9       	out	0x08, r24	; 8
     6ce:	ff cf       	rjmp	.-2      	; 0x6ce <Kernel_Chan_Send+0x52>
     6d0:	82 30       	cpi	r24, 0x02	; 2
     6d2:	19 f4       	brne	.+6      	; 0x6da <Kernel_Chan_Send+0x5e>
     6d4:	84 e0       	ldi	r24, 0x04	; 4
     6d6:	88 b9       	out	0x08, r24	; 8
     6d8:	ff cf       	rjmp	.-2      	; 0x6d8 <Kernel_Chan_Send+0x5c>
     6da:	df 01       	movw	r26, r30
     6dc:	a1 5f       	subi	r26, 0xF1	; 241
     6de:	be 4f       	sbci	r27, 0xFE	; 254
     6e0:	2d 91       	ld	r18, X+
     6e2:	3c 91       	ld	r19, X
     6e4:	9b e2       	ldi	r25, 0x2B	; 43
     6e6:	9a 9d       	mul	r25, r10
     6e8:	d0 01       	movw	r26, r0
     6ea:	9b 9d       	mul	r25, r11
     6ec:	b0 0d       	add	r27, r0
     6ee:	11 24       	eor	r1, r1
     6f0:	aa 5f       	subi	r26, 0xFA	; 250
     6f2:	bd 4f       	sbci	r27, 0xFD	; 253
     6f4:	9a 96       	adiw	r26, 0x2a	; 42
     6f6:	3c 93       	st	X, r19
     6f8:	2e 93       	st	-X, r18
     6fa:	99 97       	sbiw	r26, 0x29	; 41
     6fc:	83 30       	cpi	r24, 0x03	; 3
     6fe:	09 f0       	breq	.+2      	; 0x702 <Kernel_Chan_Send+0x86>
     700:	3e c0       	rjmp	.+124    	; 0x77e <Kernel_Chan_Send+0x102>
     702:	19 c0       	rjmp	.+50     	; 0x736 <Kernel_Chan_Send+0xba>
     704:	c8 01       	movw	r24, r16
     706:	fe dd       	rcall	.-1028   	; 0x304 <dequeue>
     708:	ec 01       	movw	r28, r24
     70a:	f7 01       	movw	r30, r14
     70c:	80 81       	ld	r24, Z
     70e:	91 81       	ldd	r25, Z+1	; 0x01
     710:	fe 01       	movw	r30, r28
     712:	e5 5f       	subi	r30, 0xF5	; 245
     714:	fe 4f       	sbci	r31, 0xFE	; 254
     716:	91 83       	std	Z+1, r25	; 0x01
     718:	80 83       	st	Z, r24
     71a:	ce 01       	movw	r24, r28
     71c:	85 de       	rcall	.-758    	; 0x428 <setReady>
     71e:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     722:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     726:	82 81       	ldd	r24, Z+2	; 0x02
     728:	9a 81       	ldd	r25, Y+2	; 0x02
     72a:	98 17       	cp	r25, r24
     72c:	b8 f4       	brcc	.+46     	; 0x75c <Kernel_Chan_Send+0xe0>
     72e:	cf 01       	movw	r24, r30
     730:	7b de       	rcall	.-778    	; 0x428 <setReady>
     732:	0f de       	rcall	.-994    	; 0x352 <Dispatch>
     734:	13 c0       	rjmp	.+38     	; 0x75c <Kernel_Chan_Send+0xe0>
     736:	8b e2       	ldi	r24, 0x2B	; 43
     738:	8a 9d       	mul	r24, r10
     73a:	80 01       	movw	r16, r0
     73c:	8b 9d       	mul	r24, r11
     73e:	10 0d       	add	r17, r0
     740:	11 24       	eor	r1, r1
     742:	c8 01       	movw	r24, r16
     744:	8a 5f       	subi	r24, 0xFA	; 250
     746:	9d 4f       	sbci	r25, 0xFD	; 253
     748:	6c 01       	movw	r12, r24
     74a:	f3 e2       	ldi	r31, 0x23	; 35
     74c:	cf 0e       	add	r12, r31
     74e:	d1 1c       	adc	r13, r1
     750:	7c 01       	movw	r14, r24
     752:	29 e2       	ldi	r18, 0x29	; 41
     754:	e2 0e       	add	r14, r18
     756:	f1 1c       	adc	r15, r1
     758:	07 5f       	subi	r16, 0xF7	; 247
     75a:	1d 4f       	sbci	r17, 0xFD	; 253
     75c:	f6 01       	movw	r30, r12
     75e:	80 81       	ld	r24, Z
     760:	91 81       	ldd	r25, Z+1	; 0x01
     762:	18 16       	cp	r1, r24
     764:	19 06       	cpc	r1, r25
     766:	74 f2       	brlt	.-100    	; 0x704 <Kernel_Chan_Send+0x88>
     768:	8b e2       	ldi	r24, 0x2B	; 43
     76a:	8a 9d       	mul	r24, r10
     76c:	f0 01       	movw	r30, r0
     76e:	8b 9d       	mul	r24, r11
     770:	f0 0d       	add	r31, r0
     772:	11 24       	eor	r1, r1
     774:	ea 5f       	subi	r30, 0xFA	; 250
     776:	fd 4f       	sbci	r31, 0xFD	; 253
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	80 83       	st	Z, r24
     77c:	12 c0       	rjmp	.+36     	; 0x7a2 <Kernel_Chan_Send+0x126>
     77e:	8b e2       	ldi	r24, 0x2B	; 43
     780:	8a 9d       	mul	r24, r10
     782:	d0 01       	movw	r26, r0
     784:	8b 9d       	mul	r24, r11
     786:	b0 0d       	add	r27, r0
     788:	11 24       	eor	r1, r1
     78a:	aa 5f       	subi	r26, 0xFA	; 250
     78c:	bd 4f       	sbci	r27, 0xFD	; 253
     78e:	82 e0       	ldi	r24, 0x02	; 2
     790:	8c 93       	st	X, r24
     792:	12 96       	adiw	r26, 0x02	; 2
     794:	fc 93       	st	X, r31
     796:	ee 93       	st	-X, r30
     798:	11 97       	sbiw	r26, 0x01	; 1
     79a:	eb 5f       	subi	r30, 0xFB	; 251
     79c:	fe 4f       	sbci	r31, 0xFE	; 254
     79e:	83 e0       	ldi	r24, 0x03	; 3
     7a0:	80 83       	st	Z, r24
     7a2:	df 91       	pop	r29
     7a4:	cf 91       	pop	r28
     7a6:	1f 91       	pop	r17
     7a8:	0f 91       	pop	r16
     7aa:	ff 90       	pop	r15
     7ac:	ef 90       	pop	r14
     7ae:	df 90       	pop	r13
     7b0:	cf 90       	pop	r12
     7b2:	bf 90       	pop	r11
     7b4:	af 90       	pop	r10
     7b6:	08 95       	ret

000007b8 <Kernel_Chan_Receive>:
     7b8:	ef 92       	push	r14
     7ba:	ff 92       	push	r15
     7bc:	0f 93       	push	r16
     7be:	1f 93       	push	r17
     7c0:	cf 93       	push	r28
     7c2:	df 93       	push	r29
     7c4:	c0 91 bc 04 	lds	r28, 0x04BC	; 0x8004bc <Cp>
     7c8:	d0 91 bd 04 	lds	r29, 0x04BD	; 0x8004bd <Cp+0x1>
     7cc:	8a 81       	ldd	r24, Y+2	; 0x02
     7ce:	81 30       	cpi	r24, 0x01	; 1
     7d0:	19 f4       	brne	.+6      	; 0x7d8 <Kernel_Chan_Receive+0x20>
     7d2:	83 e0       	ldi	r24, 0x03	; 3
     7d4:	88 b9       	out	0x08, r24	; 8
     7d6:	ff cf       	rjmp	.-2      	; 0x7d6 <Kernel_Chan_Receive+0x1e>
     7d8:	fe 01       	movw	r30, r28
     7da:	e3 5f       	subi	r30, 0xF3	; 243
     7dc:	fe 4f       	sbci	r31, 0xFE	; 254
     7de:	00 81       	ld	r16, Z
     7e0:	11 81       	ldd	r17, Z+1	; 0x01
     7e2:	01 50       	subi	r16, 0x01	; 1
     7e4:	11 09       	sbc	r17, r1
     7e6:	8b e2       	ldi	r24, 0x2B	; 43
     7e8:	80 9f       	mul	r24, r16
     7ea:	f0 01       	movw	r30, r0
     7ec:	81 9f       	mul	r24, r17
     7ee:	f0 0d       	add	r31, r0
     7f0:	11 24       	eor	r1, r1
     7f2:	ea 5f       	subi	r30, 0xFA	; 250
     7f4:	fd 4f       	sbci	r31, 0xFD	; 253
     7f6:	80 81       	ld	r24, Z
     7f8:	81 11       	cpse	r24, r1
     7fa:	03 c0       	rjmp	.+6      	; 0x802 <Kernel_Chan_Receive+0x4a>
     7fc:	82 e0       	ldi	r24, 0x02	; 2
     7fe:	88 b9       	out	0x08, r24	; 8
     800:	ff cf       	rjmp	.-2      	; 0x800 <Kernel_Chan_Receive+0x48>
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	91 f5       	brne	.+100    	; 0x86a <Kernel_Chan_Receive+0xb2>
     806:	2b e2       	ldi	r18, 0x2B	; 43
     808:	20 9f       	mul	r18, r16
     80a:	c0 01       	movw	r24, r0
     80c:	21 9f       	mul	r18, r17
     80e:	90 0d       	add	r25, r0
     810:	11 24       	eor	r1, r1
     812:	9c 01       	movw	r18, r24
     814:	2a 5f       	subi	r18, 0xFA	; 250
     816:	3d 4f       	sbci	r19, 0xFD	; 253
     818:	79 01       	movw	r14, r18
     81a:	d9 01       	movw	r26, r18
     81c:	99 96       	adiw	r26, 0x29	; 41
     81e:	8d 91       	ld	r24, X+
     820:	9c 91       	ld	r25, X
     822:	9a 97       	sbiw	r26, 0x2a	; 42
     824:	fe 01       	movw	r30, r28
     826:	e5 5f       	subi	r30, 0xF5	; 245
     828:	fe 4f       	sbci	r31, 0xFE	; 254
     82a:	91 83       	std	Z+1, r25	; 0x01
     82c:	80 83       	st	Z, r24
     82e:	11 96       	adiw	r26, 0x01	; 1
     830:	8d 91       	ld	r24, X+
     832:	9c 91       	ld	r25, X
     834:	12 97       	sbiw	r26, 0x02	; 2
     836:	f8 dd       	rcall	.-1040   	; 0x428 <setReady>
     838:	8a 81       	ldd	r24, Y+2	; 0x02
     83a:	d7 01       	movw	r26, r14
     83c:	11 96       	adiw	r26, 0x01	; 1
     83e:	ed 91       	ld	r30, X+
     840:	fc 91       	ld	r31, X
     842:	12 97       	sbiw	r26, 0x02	; 2
     844:	92 81       	ldd	r25, Z+2	; 0x02
     846:	98 17       	cp	r25, r24
     848:	18 f4       	brcc	.+6      	; 0x850 <Kernel_Chan_Receive+0x98>
     84a:	ce 01       	movw	r24, r28
     84c:	ed dd       	rcall	.-1062   	; 0x428 <setReady>
     84e:	81 dd       	rcall	.-1278   	; 0x352 <Dispatch>
     850:	8b e2       	ldi	r24, 0x2B	; 43
     852:	80 9f       	mul	r24, r16
     854:	f0 01       	movw	r30, r0
     856:	81 9f       	mul	r24, r17
     858:	f0 0d       	add	r31, r0
     85a:	11 24       	eor	r1, r1
     85c:	ea 5f       	subi	r30, 0xFA	; 250
     85e:	fd 4f       	sbci	r31, 0xFD	; 253
     860:	12 82       	std	Z+2, r1	; 0x02
     862:	11 82       	std	Z+1, r1	; 0x01
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	80 83       	st	Z, r24
     868:	13 c0       	rjmp	.+38     	; 0x890 <Kernel_Chan_Receive+0xd8>
     86a:	8b e2       	ldi	r24, 0x2B	; 43
     86c:	80 9f       	mul	r24, r16
     86e:	70 01       	movw	r14, r0
     870:	81 9f       	mul	r24, r17
     872:	f0 0c       	add	r15, r0
     874:	11 24       	eor	r1, r1
     876:	be 01       	movw	r22, r28
     878:	c7 01       	movw	r24, r14
     87a:	87 5f       	subi	r24, 0xF7	; 247
     87c:	9d 4f       	sbci	r25, 0xFD	; 253
     87e:	1b dd       	rcall	.-1482   	; 0x2b6 <enqueue>
     880:	f7 01       	movw	r30, r14
     882:	ea 5f       	subi	r30, 0xFA	; 250
     884:	fd 4f       	sbci	r31, 0xFD	; 253
     886:	83 e0       	ldi	r24, 0x03	; 3
     888:	80 83       	st	Z, r24
     88a:	cb 5f       	subi	r28, 0xFB	; 251
     88c:	de 4f       	sbci	r29, 0xFE	; 254
     88e:	88 83       	st	Y, r24
     890:	df 91       	pop	r29
     892:	cf 91       	pop	r28
     894:	1f 91       	pop	r17
     896:	0f 91       	pop	r16
     898:	ff 90       	pop	r15
     89a:	ef 90       	pop	r14
     89c:	08 95       	ret

0000089e <Kernel_Chan_Write>:
     89e:	af 92       	push	r10
     8a0:	bf 92       	push	r11
     8a2:	cf 92       	push	r12
     8a4:	df 92       	push	r13
     8a6:	ef 92       	push	r14
     8a8:	ff 92       	push	r15
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
     8ae:	cf 93       	push	r28
     8b0:	df 93       	push	r29
     8b2:	20 91 bc 04 	lds	r18, 0x04BC	; 0x8004bc <Cp>
     8b6:	30 91 bd 04 	lds	r19, 0x04BD	; 0x8004bd <Cp+0x1>
     8ba:	f9 01       	movw	r30, r18
     8bc:	e3 5f       	subi	r30, 0xF3	; 243
     8be:	fe 4f       	sbci	r31, 0xFE	; 254
     8c0:	a0 80       	ld	r10, Z
     8c2:	b1 80       	ldd	r11, Z+1	; 0x01
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	a8 1a       	sub	r10, r24
     8c8:	b1 08       	sbc	r11, r1
     8ca:	8b e2       	ldi	r24, 0x2B	; 43
     8cc:	8a 9d       	mul	r24, r10
     8ce:	f0 01       	movw	r30, r0
     8d0:	8b 9d       	mul	r24, r11
     8d2:	f0 0d       	add	r31, r0
     8d4:	11 24       	eor	r1, r1
     8d6:	ea 5f       	subi	r30, 0xFA	; 250
     8d8:	fd 4f       	sbci	r31, 0xFD	; 253
     8da:	80 81       	ld	r24, Z
     8dc:	81 11       	cpse	r24, r1
     8de:	03 c0       	rjmp	.+6      	; 0x8e6 <Kernel_Chan_Write+0x48>
     8e0:	82 e0       	ldi	r24, 0x02	; 2
     8e2:	88 b9       	out	0x08, r24	; 8
     8e4:	ff cf       	rjmp	.-2      	; 0x8e4 <Kernel_Chan_Write+0x46>
     8e6:	82 30       	cpi	r24, 0x02	; 2
     8e8:	19 f4       	brne	.+6      	; 0x8f0 <Kernel_Chan_Write+0x52>
     8ea:	84 e0       	ldi	r24, 0x04	; 4
     8ec:	88 b9       	out	0x08, r24	; 8
     8ee:	ff cf       	rjmp	.-2      	; 0x8ee <Kernel_Chan_Write+0x50>
     8f0:	83 30       	cpi	r24, 0x03	; 3
     8f2:	09 f0       	breq	.+2      	; 0x8f6 <Kernel_Chan_Write+0x58>
     8f4:	49 c0       	rjmp	.+146    	; 0x988 <Kernel_Chan_Write+0xea>
     8f6:	f9 01       	movw	r30, r18
     8f8:	e1 5f       	subi	r30, 0xF1	; 241
     8fa:	fe 4f       	sbci	r31, 0xFE	; 254
     8fc:	80 81       	ld	r24, Z
     8fe:	91 81       	ldd	r25, Z+1	; 0x01
     900:	2b e2       	ldi	r18, 0x2B	; 43
     902:	2a 9d       	mul	r18, r10
     904:	f0 01       	movw	r30, r0
     906:	2b 9d       	mul	r18, r11
     908:	f0 0d       	add	r31, r0
     90a:	11 24       	eor	r1, r1
     90c:	ea 5f       	subi	r30, 0xFA	; 250
     90e:	fd 4f       	sbci	r31, 0xFD	; 253
     910:	92 a7       	std	Z+42, r25	; 0x2a
     912:	81 a7       	std	Z+41, r24	; 0x29
     914:	8b e2       	ldi	r24, 0x2B	; 43
     916:	8a 9d       	mul	r24, r10
     918:	80 01       	movw	r16, r0
     91a:	8b 9d       	mul	r24, r11
     91c:	10 0d       	add	r17, r0
     91e:	11 24       	eor	r1, r1
     920:	cf 01       	movw	r24, r30
     922:	6f 01       	movw	r12, r30
     924:	e3 e2       	ldi	r30, 0x23	; 35
     926:	ce 0e       	add	r12, r30
     928:	d1 1c       	adc	r13, r1
     92a:	7c 01       	movw	r14, r24
     92c:	f9 e2       	ldi	r31, 0x29	; 41
     92e:	ef 0e       	add	r14, r31
     930:	f1 1c       	adc	r15, r1
     932:	07 5f       	subi	r16, 0xF7	; 247
     934:	1d 4f       	sbci	r17, 0xFD	; 253
     936:	18 c0       	rjmp	.+48     	; 0x968 <Kernel_Chan_Write+0xca>
     938:	c8 01       	movw	r24, r16
     93a:	e4 dc       	rcall	.-1592   	; 0x304 <dequeue>
     93c:	ec 01       	movw	r28, r24
     93e:	f7 01       	movw	r30, r14
     940:	80 81       	ld	r24, Z
     942:	91 81       	ldd	r25, Z+1	; 0x01
     944:	fe 01       	movw	r30, r28
     946:	e5 5f       	subi	r30, 0xF5	; 245
     948:	fe 4f       	sbci	r31, 0xFE	; 254
     94a:	91 83       	std	Z+1, r25	; 0x01
     94c:	80 83       	st	Z, r24
     94e:	ce 01       	movw	r24, r28
     950:	6b dd       	rcall	.-1322   	; 0x428 <setReady>
     952:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     956:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     95a:	82 81       	ldd	r24, Z+2	; 0x02
     95c:	9a 81       	ldd	r25, Y+2	; 0x02
     95e:	98 17       	cp	r25, r24
     960:	18 f4       	brcc	.+6      	; 0x968 <Kernel_Chan_Write+0xca>
     962:	cf 01       	movw	r24, r30
     964:	61 dd       	rcall	.-1342   	; 0x428 <setReady>
     966:	f5 dc       	rcall	.-1558   	; 0x352 <Dispatch>
     968:	f6 01       	movw	r30, r12
     96a:	80 81       	ld	r24, Z
     96c:	91 81       	ldd	r25, Z+1	; 0x01
     96e:	18 16       	cp	r1, r24
     970:	19 06       	cpc	r1, r25
     972:	14 f3       	brlt	.-60     	; 0x938 <Kernel_Chan_Write+0x9a>
     974:	8b e2       	ldi	r24, 0x2B	; 43
     976:	8a 9d       	mul	r24, r10
     978:	f0 01       	movw	r30, r0
     97a:	8b 9d       	mul	r24, r11
     97c:	f0 0d       	add	r31, r0
     97e:	11 24       	eor	r1, r1
     980:	ea 5f       	subi	r30, 0xFA	; 250
     982:	fd 4f       	sbci	r31, 0xFD	; 253
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	80 83       	st	Z, r24
     988:	df 91       	pop	r29
     98a:	cf 91       	pop	r28
     98c:	1f 91       	pop	r17
     98e:	0f 91       	pop	r16
     990:	ff 90       	pop	r15
     992:	ef 90       	pop	r14
     994:	df 90       	pop	r13
     996:	cf 90       	pop	r12
     998:	bf 90       	pop	r11
     99a:	af 90       	pop	r10
     99c:	08 95       	ret

0000099e <OS_Init>:
     99e:	10 92 b7 04 	sts	0x04B7, r1	; 0x8004b7 <Tasks+0x1>
     9a2:	10 92 b6 04 	sts	0x04B6, r1	; 0x8004b6 <Tasks>
     9a6:	10 92 b9 04 	sts	0x04B9, r1	; 0x8004b9 <KernelActive+0x1>
     9aa:	10 92 b8 04 	sts	0x04B8, r1	; 0x8004b8 <KernelActive>
     9ae:	10 92 bb 04 	sts	0x04BB, r1	; 0x8004bb <NextP+0x1>
     9b2:	10 92 ba 04 	sts	0x04BA, r1	; 0x8004ba <NextP>
     9b6:	e8 e5       	ldi	r30, 0x58	; 88
     9b8:	f5 e0       	ldi	r31, 0x05	; 5
     9ba:	28 e7       	ldi	r18, 0x78	; 120
     9bc:	37 e1       	ldi	r19, 0x17	; 23
     9be:	82 e2       	ldi	r24, 0x22	; 34
     9c0:	91 e0       	ldi	r25, 0x01	; 1
     9c2:	df 01       	movw	r26, r30
     9c4:	ac 01       	movw	r20, r24
     9c6:	1d 92       	st	X+, r1
     9c8:	41 50       	subi	r20, 0x01	; 1
     9ca:	50 40       	sbci	r21, 0x00	; 0
     9cc:	e1 f7       	brne	.-8      	; 0x9c6 <OS_Init+0x28>
     9ce:	df 01       	movw	r26, r30
     9d0:	ab 5f       	subi	r26, 0xFB	; 251
     9d2:	be 4f       	sbci	r27, 0xFE	; 254
     9d4:	1c 92       	st	X, r1
     9d6:	ee 5d       	subi	r30, 0xDE	; 222
     9d8:	fe 4f       	sbci	r31, 0xFE	; 254
     9da:	e2 17       	cp	r30, r18
     9dc:	f3 07       	cpc	r31, r19
     9de:	89 f7       	brne	.-30     	; 0x9c2 <OS_Init+0x24>
     9e0:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <__data_end+0x1>
     9e4:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <__data_end>
     9e8:	e6 e0       	ldi	r30, 0x06	; 6
     9ea:	f2 e0       	ldi	r31, 0x02	; 2
     9ec:	26 eb       	ldi	r18, 0xB6	; 182
     9ee:	34 e0       	ldi	r19, 0x04	; 4
     9f0:	8b e2       	ldi	r24, 0x2B	; 43
     9f2:	df 01       	movw	r26, r30
     9f4:	48 2f       	mov	r20, r24
     9f6:	1d 92       	st	X+, r1
     9f8:	4a 95       	dec	r20
     9fa:	e9 f7       	brne	.-6      	; 0x9f6 <OS_Init+0x58>
     9fc:	10 82       	st	Z, r1
     9fe:	bb 96       	adiw	r30, 0x2b	; 43
     a00:	e2 17       	cp	r30, r18
     a02:	f3 07       	cpc	r31, r19
     a04:	b1 f7       	brne	.-20     	; 0x9f2 <OS_Init+0x54>
     a06:	08 95       	ret

00000a08 <OS_Start>:
     a08:	af 92       	push	r10
     a0a:	bf 92       	push	r11
     a0c:	df 92       	push	r13
     a0e:	ef 92       	push	r14
     a10:	ff 92       	push	r15
     a12:	0f 93       	push	r16
     a14:	1f 93       	push	r17
     a16:	cf 93       	push	r28
     a18:	df 93       	push	r29
     a1a:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <KernelActive>
     a1e:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     a22:	89 2b       	or	r24, r25
     a24:	09 f0       	breq	.+2      	; 0xa28 <OS_Start+0x20>
     a26:	9e c0       	rjmp	.+316    	; 0xb64 <OS_Start+0x15c>
     a28:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Tasks>
     a2c:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Tasks+0x1>
     a30:	89 2b       	or	r24, r25
     a32:	09 f4       	brne	.+2      	; 0xa36 <OS_Start+0x2e>
     a34:	97 c0       	rjmp	.+302    	; 0xb64 <OS_Start+0x15c>
     a36:	f8 94       	cli
     a38:	81 e0       	ldi	r24, 0x01	; 1
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	90 93 b9 04 	sts	0x04B9, r25	; 0x8004b9 <KernelActive+0x1>
     a40:	80 93 b8 04 	sts	0x04B8, r24	; 0x8004b8 <KernelActive>
     a44:	86 dc       	rcall	.-1780   	; 0x352 <Dispatch>
     a46:	68 94       	set
     a48:	dd 24       	eor	r13, r13
     a4a:	d2 f8       	bld	r13, 2
     a4c:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     a50:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     a54:	df 01       	movw	r26, r30
     a56:	a8 5f       	subi	r26, 0xF8	; 248
     a58:	be 4f       	sbci	r27, 0xFE	; 254
     a5a:	1c 92       	st	X, r1
     a5c:	83 81       	ldd	r24, Z+3	; 0x03
     a5e:	94 81       	ldd	r25, Z+4	; 0x04
     a60:	90 93 7a 17 	sts	0x177A, r25	; 0x80177a <CurrentSp+0x1>
     a64:	80 93 79 17 	sts	0x1779, r24	; 0x801779 <CurrentSp>
     a68:	67 db       	rcall	.-2354   	; 0x138 <CSwitch>
     a6a:	c0 91 bc 04 	lds	r28, 0x04BC	; 0x8004bc <Cp>
     a6e:	d0 91 bd 04 	lds	r29, 0x04BD	; 0x8004bd <Cp+0x1>
     a72:	80 91 79 17 	lds	r24, 0x1779	; 0x801779 <CurrentSp>
     a76:	90 91 7a 17 	lds	r25, 0x177A	; 0x80177a <CurrentSp+0x1>
     a7a:	9c 83       	std	Y+4, r25	; 0x04
     a7c:	8b 83       	std	Y+3, r24	; 0x03
     a7e:	fe 01       	movw	r30, r28
     a80:	e8 5f       	subi	r30, 0xF8	; 248
     a82:	fe 4f       	sbci	r31, 0xFE	; 254
     a84:	e0 81       	ld	r30, Z
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	e9 30       	cpi	r30, 0x09	; 9
     a8a:	f1 05       	cpc	r31, r1
     a8c:	f8 f6       	brcc	.-66     	; 0xa4c <OS_Start+0x44>
     a8e:	88 27       	eor	r24, r24
     a90:	ee 58       	subi	r30, 0x8E	; 142
     a92:	ff 4f       	sbci	r31, 0xFF	; 255
     a94:	8f 4f       	sbci	r24, 0xFF	; 255
     a96:	3a c4       	rjmp	.+2164   	; 0x130c <__tablejump2__>
     a98:	fe 01       	movw	r30, r28
     a9a:	e0 5e       	subi	r30, 0xE0	; 224
     a9c:	fe 4f       	sbci	r31, 0xFE	; 254
     a9e:	e0 80       	ld	r14, Z
     aa0:	f1 80       	ldd	r15, Z+1	; 0x01
     aa2:	32 97       	sbiw	r30, 0x02	; 2
     aa4:	00 81       	ld	r16, Z
     aa6:	11 81       	ldd	r17, Z+1	; 0x01
     aa8:	32 97       	sbiw	r30, 0x02	; 2
     aaa:	20 81       	ld	r18, Z
     aac:	31 81       	ldd	r19, Z+1	; 0x01
     aae:	5e 01       	movw	r10, r28
     ab0:	85 ee       	ldi	r24, 0xE5	; 229
     ab2:	a8 1a       	sub	r10, r24
     ab4:	8e ef       	ldi	r24, 0xFE	; 254
     ab6:	b8 0a       	sbc	r11, r24
     ab8:	f5 01       	movw	r30, r10
     aba:	40 81       	ld	r20, Z
     abc:	72 97       	sbiw	r30, 0x12	; 18
     abe:	60 81       	ld	r22, Z
     ac0:	71 81       	ldd	r23, Z+1	; 0x01
     ac2:	33 97       	sbiw	r30, 0x03	; 3
     ac4:	80 81       	ld	r24, Z
     ac6:	91 81       	ldd	r25, Z+1	; 0x01
     ac8:	40 dd       	rcall	.-1408   	; 0x54a <Kernel_Create_Task>
     aca:	f5 01       	movw	r30, r10
     acc:	80 81       	ld	r24, Z
     ace:	82 30       	cpi	r24, 0x02	; 2
     ad0:	08 f0       	brcs	.+2      	; 0xad4 <OS_Start+0xcc>
     ad2:	bc cf       	rjmp	.-136    	; 0xa4c <OS_Start+0x44>
     ad4:	f5 01       	movw	r30, r10
     ad6:	90 81       	ld	r25, Z
     ad8:	8a 81       	ldd	r24, Y+2	; 0x02
     ada:	98 17       	cp	r25, r24
     adc:	08 f0       	brcs	.+2      	; 0xae0 <OS_Start+0xd8>
     ade:	b6 cf       	rjmp	.-148    	; 0xa4c <OS_Start+0x44>
     ae0:	ce 01       	movw	r24, r28
     ae2:	a2 dc       	rcall	.-1724   	; 0x428 <setReady>
     ae4:	36 dc       	rcall	.-1940   	; 0x352 <Dispatch>
     ae6:	b2 cf       	rjmp	.-156    	; 0xa4c <OS_Start+0x44>
     ae8:	ce 01       	movw	r24, r28
     aea:	9e dc       	rcall	.-1732   	; 0x428 <setReady>
     aec:	32 dc       	rcall	.-1948   	; 0x352 <Dispatch>
     aee:	ae cf       	rjmp	.-164    	; 0xa4c <OS_Start+0x44>
     af0:	fe 01       	movw	r30, r28
     af2:	e7 5e       	subi	r30, 0xE7	; 231
     af4:	fe 4f       	sbci	r31, 0xFE	; 254
     af6:	11 82       	std	Z+1, r1	; 0x01
     af8:	10 82       	st	Z, r1
     afa:	cb 5f       	subi	r28, 0xFB	; 251
     afc:	de 4f       	sbci	r29, 0xFE	; 254
     afe:	d8 82       	st	Y, r13
     b00:	28 dc       	rcall	.-1968   	; 0x352 <Dispatch>
     b02:	a4 cf       	rjmp	.-184    	; 0xa4c <OS_Start+0x44>
     b04:	cb 5f       	subi	r28, 0xFB	; 251
     b06:	de 4f       	sbci	r29, 0xFE	; 254
     b08:	18 82       	st	Y, r1
     b0a:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <Tasks>
     b0e:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <Tasks+0x1>
     b12:	01 97       	sbiw	r24, 0x01	; 1
     b14:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <Tasks+0x1>
     b18:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <Tasks>
     b1c:	1a dc       	rcall	.-1996   	; 0x352 <Dispatch>
     b1e:	96 cf       	rjmp	.-212    	; 0xa4c <OS_Start+0x44>
     b20:	65 dd       	rcall	.-1334   	; 0x5ec <Kernel_Chan_Init>
     b22:	c5 5f       	subi	r28, 0xF5	; 245
     b24:	de 4f       	sbci	r29, 0xFE	; 254
     b26:	99 83       	std	Y+1, r25	; 0x01
     b28:	88 83       	st	Y, r24
     b2a:	90 cf       	rjmp	.-224    	; 0xa4c <OS_Start+0x44>
     b2c:	a7 dd       	rcall	.-1202   	; 0x67c <Kernel_Chan_Send>
     b2e:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     b32:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     b36:	eb 5f       	subi	r30, 0xFB	; 251
     b38:	fe 4f       	sbci	r31, 0xFE	; 254
     b3a:	80 81       	ld	r24, Z
     b3c:	83 30       	cpi	r24, 0x03	; 3
     b3e:	09 f0       	breq	.+2      	; 0xb42 <OS_Start+0x13a>
     b40:	85 cf       	rjmp	.-246    	; 0xa4c <OS_Start+0x44>
     b42:	07 dc       	rcall	.-2034   	; 0x352 <Dispatch>
     b44:	83 cf       	rjmp	.-250    	; 0xa4c <OS_Start+0x44>
     b46:	38 de       	rcall	.-912    	; 0x7b8 <Kernel_Chan_Receive>
     b48:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     b4c:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     b50:	eb 5f       	subi	r30, 0xFB	; 251
     b52:	fe 4f       	sbci	r31, 0xFE	; 254
     b54:	80 81       	ld	r24, Z
     b56:	83 30       	cpi	r24, 0x03	; 3
     b58:	09 f0       	breq	.+2      	; 0xb5c <OS_Start+0x154>
     b5a:	78 cf       	rjmp	.-272    	; 0xa4c <OS_Start+0x44>
     b5c:	fa db       	rcall	.-2060   	; 0x352 <Dispatch>
     b5e:	76 cf       	rjmp	.-276    	; 0xa4c <OS_Start+0x44>
     b60:	9e de       	rcall	.-708    	; 0x89e <Kernel_Chan_Write>
     b62:	74 cf       	rjmp	.-280    	; 0xa4c <OS_Start+0x44>
     b64:	df 91       	pop	r29
     b66:	cf 91       	pop	r28
     b68:	1f 91       	pop	r17
     b6a:	0f 91       	pop	r16
     b6c:	ff 90       	pop	r15
     b6e:	ef 90       	pop	r14
     b70:	df 90       	pop	r13
     b72:	bf 90       	pop	r11
     b74:	af 90       	pop	r10
     b76:	08 95       	ret

00000b78 <Task_Create_System>:
     b78:	ef 92       	push	r14
     b7a:	ff 92       	push	r15
     b7c:	0f 93       	push	r16
     b7e:	1f 93       	push	r17
     b80:	20 91 b8 04 	lds	r18, 0x04B8	; 0x8004b8 <KernelActive>
     b84:	30 91 b9 04 	lds	r19, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     b88:	23 2b       	or	r18, r19
     b8a:	01 f1       	breq	.+64     	; 0xbcc <Task_Create_System+0x54>
     b8c:	f8 94       	cli
     b8e:	20 91 bc 04 	lds	r18, 0x04BC	; 0x8004bc <Cp>
     b92:	30 91 bd 04 	lds	r19, 0x04BD	; 0x8004bd <Cp+0x1>
     b96:	f9 01       	movw	r30, r18
     b98:	e8 5f       	subi	r30, 0xF8	; 248
     b9a:	fe 4f       	sbci	r31, 0xFE	; 254
     b9c:	41 e0       	ldi	r20, 0x01	; 1
     b9e:	40 83       	st	Z, r20
     ba0:	32 97       	sbiw	r30, 0x02	; 2
     ba2:	91 83       	std	Z+1, r25	; 0x01
     ba4:	80 83       	st	Z, r24
     ba6:	33 96       	adiw	r30, 0x03	; 3
     ba8:	71 83       	std	Z+1, r23	; 0x01
     baa:	60 83       	st	Z, r22
     bac:	72 96       	adiw	r30, 0x12	; 18
     bae:	10 82       	st	Z, r1
     bb0:	31 96       	adiw	r30, 0x01	; 1
     bb2:	11 82       	std	Z+1, r1	; 0x01
     bb4:	10 82       	st	Z, r1
     bb6:	32 96       	adiw	r30, 0x02	; 2
     bb8:	11 82       	std	Z+1, r1	; 0x01
     bba:	10 82       	st	Z, r1
     bbc:	32 96       	adiw	r30, 0x02	; 2
     bbe:	11 82       	std	Z+1, r1	; 0x01
     bc0:	10 82       	st	Z, r1
     bc2:	80 e1       	ldi	r24, 0x10	; 16
     bc4:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     bc8:	0c db       	rcall	.-2536   	; 0x1e2 <Enter_Kernel>
     bca:	08 c0       	rjmp	.+16     	; 0xbdc <Task_Create_System+0x64>
     bcc:	e1 2c       	mov	r14, r1
     bce:	f1 2c       	mov	r15, r1
     bd0:	00 e0       	ldi	r16, 0x00	; 0
     bd2:	10 e0       	ldi	r17, 0x00	; 0
     bd4:	20 e0       	ldi	r18, 0x00	; 0
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	40 e0       	ldi	r20, 0x00	; 0
     bda:	b7 dc       	rcall	.-1682   	; 0x54a <Kernel_Create_Task>
     bdc:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     be0:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     be4:	80 81       	ld	r24, Z
     be6:	91 81       	ldd	r25, Z+1	; 0x01
     be8:	1f 91       	pop	r17
     bea:	0f 91       	pop	r16
     bec:	ff 90       	pop	r15
     bee:	ef 90       	pop	r14
     bf0:	08 95       	ret

00000bf2 <Task_Create_Idle>:
     bf2:	ef 92       	push	r14
     bf4:	ff 92       	push	r15
     bf6:	0f 93       	push	r16
     bf8:	1f 93       	push	r17
     bfa:	20 91 b8 04 	lds	r18, 0x04B8	; 0x8004b8 <KernelActive>
     bfe:	30 91 b9 04 	lds	r19, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     c02:	23 2b       	or	r18, r19
     c04:	29 f1       	breq	.+74     	; 0xc50 <Task_Create_Idle+0x5e>
     c06:	f8 94       	cli
     c08:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     c0c:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     c10:	df 01       	movw	r26, r30
     c12:	a8 5f       	subi	r26, 0xF8	; 248
     c14:	be 4f       	sbci	r27, 0xFE	; 254
     c16:	21 e0       	ldi	r18, 0x01	; 1
     c18:	2c 93       	st	X, r18
     c1a:	12 97       	sbiw	r26, 0x02	; 2
     c1c:	11 96       	adiw	r26, 0x01	; 1
     c1e:	9c 93       	st	X, r25
     c20:	8e 93       	st	-X, r24
     c22:	13 96       	adiw	r26, 0x03	; 3
     c24:	11 96       	adiw	r26, 0x01	; 1
     c26:	7c 93       	st	X, r23
     c28:	6e 93       	st	-X, r22
     c2a:	83 e0       	ldi	r24, 0x03	; 3
     c2c:	82 83       	std	Z+2, r24	; 0x02
     c2e:	18 96       	adiw	r26, 0x08	; 8
     c30:	11 96       	adiw	r26, 0x01	; 1
     c32:	1c 92       	st	X, r1
     c34:	1e 92       	st	-X, r1
     c36:	12 96       	adiw	r26, 0x02	; 2
     c38:	11 96       	adiw	r26, 0x01	; 1
     c3a:	1c 92       	st	X, r1
     c3c:	1e 92       	st	-X, r1
     c3e:	eb 5e       	subi	r30, 0xEB	; 235
     c40:	fe 4f       	sbci	r31, 0xFE	; 254
     c42:	11 82       	std	Z+1, r1	; 0x01
     c44:	10 82       	st	Z, r1
     c46:	80 e1       	ldi	r24, 0x10	; 16
     c48:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     c4c:	ca da       	rcall	.-2668   	; 0x1e2 <Enter_Kernel>
     c4e:	08 c0       	rjmp	.+16     	; 0xc60 <Task_Create_Idle+0x6e>
     c50:	e1 2c       	mov	r14, r1
     c52:	f1 2c       	mov	r15, r1
     c54:	00 e0       	ldi	r16, 0x00	; 0
     c56:	10 e0       	ldi	r17, 0x00	; 0
     c58:	20 e0       	ldi	r18, 0x00	; 0
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	43 e0       	ldi	r20, 0x03	; 3
     c5e:	75 dc       	rcall	.-1814   	; 0x54a <Kernel_Create_Task>
     c60:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     c64:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     c68:	80 81       	ld	r24, Z
     c6a:	91 81       	ldd	r25, Z+1	; 0x01
     c6c:	1f 91       	pop	r17
     c6e:	0f 91       	pop	r16
     c70:	ff 90       	pop	r15
     c72:	ef 90       	pop	r14
     c74:	08 95       	ret

00000c76 <Task_Next_2>:
     c76:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <KernelActive>
     c7a:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     c7e:	89 2b       	or	r24, r25
     c80:	69 f0       	breq	.+26     	; 0xc9c <Task_Next_2+0x26>
     c82:	f8 94       	cli
     c84:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     c88:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     c8c:	e8 5f       	subi	r30, 0xF8	; 248
     c8e:	fe 4f       	sbci	r31, 0xFE	; 254
     c90:	82 e0       	ldi	r24, 0x02	; 2
     c92:	80 83       	st	Z, r24
     c94:	80 e1       	ldi	r24, 0x10	; 16
     c96:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     c9a:	a3 ca       	rjmp	.-2746   	; 0x1e2 <Enter_Kernel>
     c9c:	08 95       	ret

00000c9e <Task_Next>:
     c9e:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <KernelActive>
     ca2:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     ca6:	89 2b       	or	r24, r25
     ca8:	91 f0       	breq	.+36     	; 0xcce <Task_Next+0x30>
     caa:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     cae:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     cb2:	82 81       	ldd	r24, Z+2	; 0x02
     cb4:	81 30       	cpi	r24, 0x01	; 1
     cb6:	11 f0       	breq	.+4      	; 0xcbc <Task_Next+0x1e>
     cb8:	de cf       	rjmp	.-68     	; 0xc76 <Task_Next_2>
     cba:	08 95       	ret
     cbc:	f8 94       	cli
     cbe:	e8 5f       	subi	r30, 0xF8	; 248
     cc0:	fe 4f       	sbci	r31, 0xFE	; 254
     cc2:	84 e0       	ldi	r24, 0x04	; 4
     cc4:	80 83       	st	Z, r24
     cc6:	80 e1       	ldi	r24, 0x10	; 16
     cc8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     ccc:	8a ca       	rjmp	.-2796   	; 0x1e2 <Enter_Kernel>
     cce:	08 95       	ret

00000cd0 <Chan_Init>:
     cd0:	80 91 b8 04 	lds	r24, 0x04B8	; 0x8004b8 <KernelActive>
     cd4:	90 91 b9 04 	lds	r25, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     cd8:	00 97       	sbiw	r24, 0x00	; 0
     cda:	a9 f0       	breq	.+42     	; 0xd06 <Chan_Init+0x36>
     cdc:	f8 94       	cli
     cde:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     ce2:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     ce6:	e8 5f       	subi	r30, 0xF8	; 248
     ce8:	fe 4f       	sbci	r31, 0xFE	; 254
     cea:	85 e0       	ldi	r24, 0x05	; 5
     cec:	80 83       	st	Z, r24
     cee:	80 e1       	ldi	r24, 0x10	; 16
     cf0:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     cf4:	76 da       	rcall	.-2836   	; 0x1e2 <Enter_Kernel>
     cf6:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     cfa:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     cfe:	e5 5f       	subi	r30, 0xF5	; 245
     d00:	fe 4f       	sbci	r31, 0xFE	; 254
     d02:	80 81       	ld	r24, Z
     d04:	91 81       	ldd	r25, Z+1	; 0x01
     d06:	08 95       	ret

00000d08 <Send>:
     d08:	20 91 b8 04 	lds	r18, 0x04B8	; 0x8004b8 <KernelActive>
     d0c:	30 91 b9 04 	lds	r19, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     d10:	23 2b       	or	r18, r19
     d12:	a1 f0       	breq	.+40     	; 0xd3c <Send+0x34>
     d14:	f8 94       	cli
     d16:	20 91 bc 04 	lds	r18, 0x04BC	; 0x8004bc <Cp>
     d1a:	30 91 bd 04 	lds	r19, 0x04BD	; 0x8004bd <Cp+0x1>
     d1e:	f9 01       	movw	r30, r18
     d20:	e8 5f       	subi	r30, 0xF8	; 248
     d22:	fe 4f       	sbci	r31, 0xFE	; 254
     d24:	46 e0       	ldi	r20, 0x06	; 6
     d26:	40 83       	st	Z, r20
     d28:	35 96       	adiw	r30, 0x05	; 5
     d2a:	91 83       	std	Z+1, r25	; 0x01
     d2c:	80 83       	st	Z, r24
     d2e:	32 96       	adiw	r30, 0x02	; 2
     d30:	71 83       	std	Z+1, r23	; 0x01
     d32:	60 83       	st	Z, r22
     d34:	80 e1       	ldi	r24, 0x10	; 16
     d36:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     d3a:	53 ca       	rjmp	.-2906   	; 0x1e2 <Enter_Kernel>
     d3c:	08 95       	ret

00000d3e <Recv>:
     d3e:	20 91 b8 04 	lds	r18, 0x04B8	; 0x8004b8 <KernelActive>
     d42:	30 91 b9 04 	lds	r19, 0x04B9	; 0x8004b9 <KernelActive+0x1>
     d46:	23 2b       	or	r18, r19
     d48:	d1 f0       	breq	.+52     	; 0xd7e <Recv+0x40>
     d4a:	f8 94       	cli
     d4c:	20 91 bc 04 	lds	r18, 0x04BC	; 0x8004bc <Cp>
     d50:	30 91 bd 04 	lds	r19, 0x04BD	; 0x8004bd <Cp+0x1>
     d54:	f9 01       	movw	r30, r18
     d56:	e8 5f       	subi	r30, 0xF8	; 248
     d58:	fe 4f       	sbci	r31, 0xFE	; 254
     d5a:	47 e0       	ldi	r20, 0x07	; 7
     d5c:	40 83       	st	Z, r20
     d5e:	35 96       	adiw	r30, 0x05	; 5
     d60:	91 83       	std	Z+1, r25	; 0x01
     d62:	80 83       	st	Z, r24
     d64:	80 e1       	ldi	r24, 0x10	; 16
     d66:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x70010b>
     d6a:	3b da       	rcall	.-2954   	; 0x1e2 <Enter_Kernel>
     d6c:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     d70:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     d74:	e5 5f       	subi	r30, 0xF5	; 245
     d76:	fe 4f       	sbci	r31, 0xFE	; 254
     d78:	80 81       	ld	r24, Z
     d7a:	91 81       	ldd	r25, Z+1	; 0x01
     d7c:	08 95       	ret
     d7e:	8f ef       	ldi	r24, 0xFF	; 255
     d80:	9f ef       	ldi	r25, 0xFF	; 255
     d82:	08 95       	ret

00000d84 <Timer_Init>:
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
  * A Simple Test
  *============
  */
void Timer_Init()
{
  Disable_Interrupt();
<<<<<<< HEAD
    1026:	f8 94       	cli
  //Clear timer config.
  TCCR3A = 0;
    1028:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
  TCCR3B = 0;
    102c:	e1 e9       	ldi	r30, 0x91	; 145
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	10 82       	st	Z, r1
  //Set to CTC (mode 4)
  TCCR3B |= (1<<WGM32);
    1032:	80 81       	ld	r24, Z
    1034:	88 60       	ori	r24, 0x08	; 8
    1036:	80 83       	st	Z, r24

  //Set prescaller to 1/8
  TCCR3B |= (1<<CS31);
    1038:	80 81       	ld	r24, Z
    103a:	82 60       	ori	r24, 0x02	; 2
    103c:	80 83       	st	Z, r24

  //Set TOP value 0.0001s*MSECPERTICK
  OCR3A = 2000*MSECPERTICK;
    103e:	80 e2       	ldi	r24, 0x20	; 32
    1040:	9e e4       	ldi	r25, 0x4E	; 78
    1042:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
    1046:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>

  //Enable interupt A for timer 3.
  TIMSK3 |= (1<<OCIE3A);
    104a:	e1 e7       	ldi	r30, 0x71	; 113
    104c:	f0 e0       	ldi	r31, 0x00	; 0
    104e:	80 81       	ld	r24, Z
    1050:	82 60       	ori	r24, 0x02	; 2
    1052:	80 83       	st	Z, r24

  //Set timer to 0 (optional here).
  TCNT3 = 0;
    1054:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
    1058:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>

  // enable interrupt
  Enable_Interrupt();
    105c:	78 94       	sei
    105e:	08 95       	ret

00001060 <Kernel_Tick>:
=======
     d84:	f8 94       	cli
  //Clear timer config.
  TCCR3A = 0;
     d86:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
  TCCR3B = 0;
     d8a:	e1 e9       	ldi	r30, 0x91	; 145
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	10 82       	st	Z, r1
  //Set to CTC (mode 4)
  TCCR3B |= (1<<WGM32);
     d90:	80 81       	ld	r24, Z
     d92:	88 60       	ori	r24, 0x08	; 8
     d94:	80 83       	st	Z, r24

  //Set prescaller to 1/8
  TCCR3B |= (1<<CS31);
     d96:	80 81       	ld	r24, Z
     d98:	82 60       	ori	r24, 0x02	; 2
     d9a:	80 83       	st	Z, r24

  //Set TOP value 0.0001s*MSECPERTICK
  OCR3A = 2000*MSECPERTICK;
     d9c:	80 e2       	ldi	r24, 0x20	; 32
     d9e:	9e e4       	ldi	r25, 0x4E	; 78
     da0:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     da4:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>

  //Enable interupt A for timer 3.
  TIMSK3 |= (1<<OCIE3A);
     da8:	e1 e7       	ldi	r30, 0x71	; 113
     daa:	f0 e0       	ldi	r31, 0x00	; 0
     dac:	80 81       	ld	r24, Z
     dae:	82 60       	ori	r24, 0x02	; 2
     db0:	80 83       	st	Z, r24

  //Set timer to 0 (optional here).
  TCNT3 = 0;
     db2:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     db6:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>

  // enable interrupt
  Enable_Interrupt();
     dba:	78 94       	sei
     dbc:	08 95       	ret

00000dbe <Kernel_Tick>:
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
}

void Kernel_Tick()
{
<<<<<<< HEAD
    1060:	af 92       	push	r10
    1062:	bf 92       	push	r11
    1064:	cf 92       	push	r12
    1066:	df 92       	push	r13
    1068:	ef 92       	push	r14
    106a:	ff 92       	push	r15
    106c:	0f 93       	push	r16
    106e:	1f 93       	push	r17
    1070:	cf 93       	push	r28
    1072:	df 93       	push	r29
  current_tick++;
    1074:	80 91 be 04 	lds	r24, 0x04BE	; 0x8004be <current_tick>
    1078:	90 91 bf 04 	lds	r25, 0x04BF	; 0x8004bf <current_tick+0x1>
    107c:	01 96       	adiw	r24, 0x01	; 1
    107e:	90 93 bf 04 	sts	0x04BF, r25	; 0x8004bf <current_tick+0x1>
    1082:	80 93 be 04 	sts	0x04BE, r24	; 0x8004be <current_tick>
    1086:	0a e5       	ldi	r16, 0x5A	; 90
    1088:	15 e0       	ldi	r17, 0x05	; 5
    108a:	cd e5       	ldi	r28, 0x5D	; 93
    108c:	d6 e0       	ldi	r29, 0x06	; 6
    108e:	0f 2e       	mov	r0, r31
    1090:	fd e7       	ldi	r31, 0x7D	; 125
    1092:	cf 2e       	mov	r12, r31
    1094:	f8 e1       	ldi	r31, 0x18	; 24
    1096:	df 2e       	mov	r13, r31
    1098:	f0 2d       	mov	r31, r0
  int x;
  int ready_time_tasks = 0;
    109a:	a1 2c       	mov	r10, r1
    109c:	b1 2c       	mov	r11, r1
    109e:	78 01       	movw	r14, r16
  for (x = 0; x < MAXPROCESS; x++) {
    if (Process[x].py == TIME && Process[x].state != SUSPENDED){
    10a0:	f8 01       	movw	r30, r16
    10a2:	80 81       	ld	r24, Z
    10a4:	81 30       	cpi	r24, 0x01	; 1
    10a6:	71 f5       	brne	.+92     	; 0x1104 <Kernel_Tick+0xa4>
    10a8:	88 81       	ld	r24, Y
    10aa:	84 30       	cpi	r24, 0x04	; 4
    10ac:	69 f0       	breq	.+26     	; 0x10c8 <Kernel_Tick+0x68>
      Process[x].executed_ticks++;
    10ae:	8c 89       	ldd	r24, Y+20	; 0x14
    10b0:	9d 89       	ldd	r25, Y+21	; 0x15
    10b2:	01 96       	adiw	r24, 0x01	; 1
    10b4:	9d 8b       	std	Y+21, r25	; 0x15
    10b6:	8c 8b       	std	Y+20, r24	; 0x14
      if (Process[x].executed_ticks >= Process[x].wcet){
    10b8:	2e 85       	ldd	r18, Y+14	; 0x0e
    10ba:	3f 85       	ldd	r19, Y+15	; 0x0f
    10bc:	82 17       	cp	r24, r18
    10be:	93 07       	cpc	r25, r19
    10c0:	78 f1       	brcs	.+94     	; 0x1120 <Kernel_Tick+0xc0>
=======
     dbe:	af 92       	push	r10
     dc0:	bf 92       	push	r11
     dc2:	cf 92       	push	r12
     dc4:	df 92       	push	r13
     dc6:	ef 92       	push	r14
     dc8:	ff 92       	push	r15
     dca:	0f 93       	push	r16
     dcc:	1f 93       	push	r17
     dce:	cf 93       	push	r28
     dd0:	df 93       	push	r29
  current_tick++;
     dd2:	80 91 be 04 	lds	r24, 0x04BE	; 0x8004be <current_tick>
     dd6:	90 91 bf 04 	lds	r25, 0x04BF	; 0x8004bf <current_tick+0x1>
     dda:	01 96       	adiw	r24, 0x01	; 1
     ddc:	90 93 bf 04 	sts	0x04BF, r25	; 0x8004bf <current_tick+0x1>
     de0:	80 93 be 04 	sts	0x04BE, r24	; 0x8004be <current_tick>
     de4:	0a e5       	ldi	r16, 0x5A	; 90
     de6:	15 e0       	ldi	r17, 0x05	; 5
     de8:	cd e5       	ldi	r28, 0x5D	; 93
     dea:	d6 e0       	ldi	r29, 0x06	; 6
     dec:	0f 2e       	mov	r0, r31
     dee:	fd e7       	ldi	r31, 0x7D	; 125
     df0:	cf 2e       	mov	r12, r31
     df2:	f8 e1       	ldi	r31, 0x18	; 24
     df4:	df 2e       	mov	r13, r31
     df6:	f0 2d       	mov	r31, r0
  int x;
  int ready_time_tasks = 0;
     df8:	a1 2c       	mov	r10, r1
     dfa:	b1 2c       	mov	r11, r1
     dfc:	78 01       	movw	r14, r16
  for (x = 0; x < MAXPROCESS; x++) {
    if (Process[x].py == TIME && Process[x].state != SUSPENDED){
     dfe:	f8 01       	movw	r30, r16
     e00:	80 81       	ld	r24, Z
     e02:	81 30       	cpi	r24, 0x01	; 1
     e04:	71 f5       	brne	.+92     	; 0xe62 <Kernel_Tick+0xa4>
     e06:	88 81       	ld	r24, Y
     e08:	84 30       	cpi	r24, 0x04	; 4
     e0a:	69 f0       	breq	.+26     	; 0xe26 <Kernel_Tick+0x68>
      Process[x].executed_ticks++;
     e0c:	8c 89       	ldd	r24, Y+20	; 0x14
     e0e:	9d 89       	ldd	r25, Y+21	; 0x15
     e10:	01 96       	adiw	r24, 0x01	; 1
     e12:	9d 8b       	std	Y+21, r25	; 0x15
     e14:	8c 8b       	std	Y+20, r24	; 0x14
      if (Process[x].executed_ticks >= Process[x].wcet){
     e16:	2e 85       	ldd	r18, Y+14	; 0x0e
     e18:	3f 85       	ldd	r19, Y+15	; 0x0f
     e1a:	82 17       	cp	r24, r18
     e1c:	93 07       	cpc	r25, r19
     e1e:	78 f1       	brcs	.+94     	; 0xe7e <Kernel_Tick+0xc0>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57

/**
  * TODO: communicate error code
  */
void OS_Abort(unsigned int error) {
	OS_ABORT_DEBUG_PORT = error;
<<<<<<< HEAD
    10c2:	86 e0       	ldi	r24, 0x06	; 6
    10c4:	88 b9       	out	0x08, r24	; 8
    10c6:	ff cf       	rjmp	.-2      	; 0x10c6 <Kernel_Tick+0x66>
=======
     e20:	86 e0       	ldi	r24, 0x06	; 6
     e22:	88 b9       	out	0x08, r24	; 8
     e24:	ff cf       	rjmp	.-2      	; 0xe24 <Kernel_Tick+0x66>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
      Process[x].executed_ticks++;
      if (Process[x].executed_ticks >= Process[x].wcet){
        OS_Abort(ERROR_WCET_VIOLATION);
      }
    }
    if (Process[x].state == SUSPENDED && Process[x].py == TIME && Process[x].next_schedule == current_tick)
<<<<<<< HEAD
    10c8:	8a 89       	ldd	r24, Y+18	; 0x12
    10ca:	9b 89       	ldd	r25, Y+19	; 0x13
    10cc:	20 91 be 04 	lds	r18, 0x04BE	; 0x8004be <current_tick>
    10d0:	30 91 bf 04 	lds	r19, 0x04BF	; 0x8004bf <current_tick+0x1>
    10d4:	82 17       	cp	r24, r18
    10d6:	93 07       	cpc	r25, r19
    10d8:	a9 f4       	brne	.+42     	; 0x1104 <Kernel_Tick+0xa4>
    {
      Process[x].next_schedule = Process[x].next_schedule + Process[x].period;
    10da:	2c 85       	ldd	r18, Y+12	; 0x0c
    10dc:	3d 85       	ldd	r19, Y+13	; 0x0d
    10de:	82 0f       	add	r24, r18
    10e0:	93 1f       	adc	r25, r19
    10e2:	9b 8b       	std	Y+19, r25	; 0x13
    10e4:	8a 8b       	std	Y+18, r24	; 0x12
      setReady(&Process[x]);
    10e6:	ce 01       	movw	r24, r28
    10e8:	85 50       	subi	r24, 0x05	; 5
    10ea:	91 40       	sbci	r25, 0x01	; 1
    10ec:	05 db       	rcall	.-2550   	; 0x6f8 <setReady>
    }
    if (Process[x].py == TIME && (Process[x].state == RUNNING || Process[x].state == READY))
    10ee:	f7 01       	movw	r30, r14
    10f0:	80 81       	ld	r24, Z
    10f2:	81 30       	cpi	r24, 0x01	; 1
    10f4:	39 f4       	brne	.+14     	; 0x1104 <Kernel_Tick+0xa4>
    10f6:	88 81       	ld	r24, Y
    10f8:	81 50       	subi	r24, 0x01	; 1
    10fa:	82 30       	cpi	r24, 0x02	; 2
    10fc:	18 f4       	brcc	.+6      	; 0x1104 <Kernel_Tick+0xa4>
    {
      ready_time_tasks++;
    10fe:	ff ef       	ldi	r31, 0xFF	; 255
    1100:	af 1a       	sub	r10, r31
    1102:	bf 0a       	sbc	r11, r31
    1104:	0e 5d       	subi	r16, 0xDE	; 222
    1106:	1e 4f       	sbci	r17, 0xFE	; 254
    1108:	ce 5d       	subi	r28, 0xDE	; 222
    110a:	de 4f       	sbci	r29, 0xFE	; 254
=======
     e26:	8a 89       	ldd	r24, Y+18	; 0x12
     e28:	9b 89       	ldd	r25, Y+19	; 0x13
     e2a:	20 91 be 04 	lds	r18, 0x04BE	; 0x8004be <current_tick>
     e2e:	30 91 bf 04 	lds	r19, 0x04BF	; 0x8004bf <current_tick+0x1>
     e32:	82 17       	cp	r24, r18
     e34:	93 07       	cpc	r25, r19
     e36:	a9 f4       	brne	.+42     	; 0xe62 <Kernel_Tick+0xa4>
    {
      Process[x].next_schedule = Process[x].next_schedule + Process[x].period;
     e38:	2c 85       	ldd	r18, Y+12	; 0x0c
     e3a:	3d 85       	ldd	r19, Y+13	; 0x0d
     e3c:	82 0f       	add	r24, r18
     e3e:	93 1f       	adc	r25, r19
     e40:	9b 8b       	std	Y+19, r25	; 0x13
     e42:	8a 8b       	std	Y+18, r24	; 0x12
      setReady(&Process[x]);
     e44:	ce 01       	movw	r24, r28
     e46:	85 50       	subi	r24, 0x05	; 5
     e48:	91 40       	sbci	r25, 0x01	; 1
     e4a:	ee da       	rcall	.-2596   	; 0x428 <setReady>
    }
    if (Process[x].py == TIME && (Process[x].state == RUNNING || Process[x].state == READY))
     e4c:	f7 01       	movw	r30, r14
     e4e:	80 81       	ld	r24, Z
     e50:	81 30       	cpi	r24, 0x01	; 1
     e52:	39 f4       	brne	.+14     	; 0xe62 <Kernel_Tick+0xa4>
     e54:	88 81       	ld	r24, Y
     e56:	81 50       	subi	r24, 0x01	; 1
     e58:	82 30       	cpi	r24, 0x02	; 2
     e5a:	18 f4       	brcc	.+6      	; 0xe62 <Kernel_Tick+0xa4>
    {
      ready_time_tasks++;
     e5c:	ff ef       	ldi	r31, 0xFF	; 255
     e5e:	af 1a       	sub	r10, r31
     e60:	bf 0a       	sbc	r11, r31
     e62:	0e 5d       	subi	r16, 0xDE	; 222
     e64:	1e 4f       	sbci	r17, 0xFE	; 254
     e66:	ce 5d       	subi	r28, 0xDE	; 222
     e68:	de 4f       	sbci	r29, 0xFE	; 254
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
void Kernel_Tick()
{
  current_tick++;
  int x;
  int ready_time_tasks = 0;
  for (x = 0; x < MAXPROCESS; x++) {
<<<<<<< HEAD
    110c:	cc 15       	cp	r28, r12
    110e:	dd 05       	cpc	r29, r13
    1110:	31 f6       	brne	.-116    	; 0x109e <Kernel_Tick+0x3e>
=======
     e6a:	cc 15       	cp	r28, r12
     e6c:	dd 05       	cpc	r29, r13
     e6e:	31 f6       	brne	.-116    	; 0xdfc <Kernel_Tick+0x3e>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
    if (Process[x].py == TIME && (Process[x].state == RUNNING || Process[x].state == READY))
    {
      ready_time_tasks++;
    }
  }
  if (ready_time_tasks > 1)
<<<<<<< HEAD
    1112:	82 e0       	ldi	r24, 0x02	; 2
    1114:	a8 16       	cp	r10, r24
    1116:	b1 04       	cpc	r11, r1
    1118:	3c f0       	brlt	.+14     	; 0x1128 <Kernel_Tick+0xc8>
=======
     e70:	82 e0       	ldi	r24, 0x02	; 2
     e72:	a8 16       	cp	r10, r24
     e74:	b1 04       	cpc	r11, r1
     e76:	3c f0       	brlt	.+14     	; 0xe86 <Kernel_Tick+0xc8>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57

/**
  * TODO: communicate error code
  */
void OS_Abort(unsigned int error) {
	OS_ABORT_DEBUG_PORT = error;
<<<<<<< HEAD
    111a:	85 e0       	ldi	r24, 0x05	; 5
    111c:	88 b9       	out	0x08, r24	; 8
    111e:	ff cf       	rjmp	.-2      	; 0x111e <Kernel_Tick+0xbe>
=======
     e78:	85 e0       	ldi	r24, 0x05	; 5
     e7a:	88 b9       	out	0x08, r24	; 8
     e7c:	ff cf       	rjmp	.-2      	; 0xe7c <Kernel_Tick+0xbe>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
      Process[x].executed_ticks++;
      if (Process[x].executed_ticks >= Process[x].wcet){
        OS_Abort(ERROR_WCET_VIOLATION);
      }
    }
    if (Process[x].state == SUSPENDED && Process[x].py == TIME && Process[x].next_schedule == current_tick)
<<<<<<< HEAD
    1120:	88 81       	ld	r24, Y
    1122:	84 30       	cpi	r24, 0x04	; 4
    1124:	21 f7       	brne	.-56     	; 0x10ee <Kernel_Tick+0x8e>
    1126:	d0 cf       	rjmp	.-96     	; 0x10c8 <Kernel_Tick+0x68>
=======
     e7e:	88 81       	ld	r24, Y
     e80:	84 30       	cpi	r24, 0x04	; 4
     e82:	21 f7       	brne	.-56     	; 0xe4c <Kernel_Tick+0x8e>
     e84:	d0 cf       	rjmp	.-96     	; 0xe26 <Kernel_Tick+0x68>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
  //   if(Cp->executed_ticks >= Cp->wcet){
  //     OS_Abort(ERROR_WCET_VIOLATION);
  //   }
  // }

}
<<<<<<< HEAD
    1128:	df 91       	pop	r29
    112a:	cf 91       	pop	r28
    112c:	1f 91       	pop	r17
    112e:	0f 91       	pop	r16
    1130:	ff 90       	pop	r15
    1132:	ef 90       	pop	r14
    1134:	df 90       	pop	r13
    1136:	cf 90       	pop	r12
    1138:	bf 90       	pop	r11
    113a:	af 90       	pop	r10
    113c:	08 95       	ret

0000113e <__vector_32>:
=======
     e86:	df 91       	pop	r29
     e88:	cf 91       	pop	r28
     e8a:	1f 91       	pop	r17
     e8c:	0f 91       	pop	r16
     e8e:	ff 90       	pop	r15
     e90:	ef 90       	pop	r14
     e92:	df 90       	pop	r13
     e94:	cf 90       	pop	r12
     e96:	bf 90       	pop	r11
     e98:	af 90       	pop	r10
     e9a:	08 95       	ret

00000e9c <__vector_32>:
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57

// This ISR fires every MSECPERTICKms and represents our RTOS tick
ISR(TIMER3_COMPA_vect)
{
<<<<<<< HEAD
    113e:	1f 92       	push	r1
    1140:	0f 92       	push	r0
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	0f 92       	push	r0
    1146:	11 24       	eor	r1, r1
    1148:	0b b6       	in	r0, 0x3b	; 59
    114a:	0f 92       	push	r0
    114c:	2f 93       	push	r18
    114e:	3f 93       	push	r19
    1150:	4f 93       	push	r20
    1152:	5f 93       	push	r21
    1154:	6f 93       	push	r22
    1156:	7f 93       	push	r23
    1158:	8f 93       	push	r24
    115a:	9f 93       	push	r25
    115c:	af 93       	push	r26
    115e:	bf 93       	push	r27
    1160:	ef 93       	push	r30
    1162:	ff 93       	push	r31
  Kernel_Tick();
    1164:	7d df       	rcall	.-262    	; 0x1060 <Kernel_Tick>
  if (Cp->py >= RR)
    1166:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
    116a:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
    116e:	82 81       	ldd	r24, Z+2	; 0x02
    1170:	82 30       	cpi	r24, 0x02	; 2
    1172:	08 f0       	brcs	.+2      	; 0x1176 <__vector_32+0x38>
  {
    Task_Next_2();
    1174:	2b df       	rcall	.-426    	; 0xfcc <Task_Next_2>
  }
}
    1176:	ff 91       	pop	r31
    1178:	ef 91       	pop	r30
    117a:	bf 91       	pop	r27
    117c:	af 91       	pop	r26
    117e:	9f 91       	pop	r25
    1180:	8f 91       	pop	r24
    1182:	7f 91       	pop	r23
    1184:	6f 91       	pop	r22
    1186:	5f 91       	pop	r21
    1188:	4f 91       	pop	r20
    118a:	3f 91       	pop	r19
    118c:	2f 91       	pop	r18
    118e:	0f 90       	pop	r0
    1190:	0b be       	out	0x3b, r0	; 59
    1192:	0f 90       	pop	r0
    1194:	0f be       	out	0x3f, r0	; 63
    1196:	0f 90       	pop	r0
    1198:	1f 90       	pop	r1
    119a:	18 95       	reti

0000119c <Init_Debug_LEDs>:
=======
     e9c:	1f 92       	push	r1
     e9e:	0f 92       	push	r0
     ea0:	0f b6       	in	r0, 0x3f	; 63
     ea2:	0f 92       	push	r0
     ea4:	11 24       	eor	r1, r1
     ea6:	0b b6       	in	r0, 0x3b	; 59
     ea8:	0f 92       	push	r0
     eaa:	2f 93       	push	r18
     eac:	3f 93       	push	r19
     eae:	4f 93       	push	r20
     eb0:	5f 93       	push	r21
     eb2:	6f 93       	push	r22
     eb4:	7f 93       	push	r23
     eb6:	8f 93       	push	r24
     eb8:	9f 93       	push	r25
     eba:	af 93       	push	r26
     ebc:	bf 93       	push	r27
     ebe:	ef 93       	push	r30
     ec0:	ff 93       	push	r31
  Kernel_Tick();
     ec2:	7d df       	rcall	.-262    	; 0xdbe <Kernel_Tick>
  if (Cp->py >= RR)
     ec4:	e0 91 bc 04 	lds	r30, 0x04BC	; 0x8004bc <Cp>
     ec8:	f0 91 bd 04 	lds	r31, 0x04BD	; 0x8004bd <Cp+0x1>
     ecc:	82 81       	ldd	r24, Z+2	; 0x02
     ece:	82 30       	cpi	r24, 0x02	; 2
     ed0:	08 f0       	brcs	.+2      	; 0xed4 <__vector_32+0x38>
  {
    Task_Next_2();
     ed2:	d1 de       	rcall	.-606    	; 0xc76 <Task_Next_2>
  }
}
     ed4:	ff 91       	pop	r31
     ed6:	ef 91       	pop	r30
     ed8:	bf 91       	pop	r27
     eda:	af 91       	pop	r26
     edc:	9f 91       	pop	r25
     ede:	8f 91       	pop	r24
     ee0:	7f 91       	pop	r23
     ee2:	6f 91       	pop	r22
     ee4:	5f 91       	pop	r21
     ee6:	4f 91       	pop	r20
     ee8:	3f 91       	pop	r19
     eea:	2f 91       	pop	r18
     eec:	0f 90       	pop	r0
     eee:	0b be       	out	0x3b, r0	; 59
     ef0:	0f 90       	pop	r0
     ef2:	0f be       	out	0x3f, r0	; 63
     ef4:	0f 90       	pop	r0
     ef6:	1f 90       	pop	r1
     ef8:	18 95       	reti

00000efa <Init_Debug_LEDs>:
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57

void Init_Debug_LEDs()
{
  DDRL |= (1<<PL2);
<<<<<<< HEAD
    119c:	ea e0       	ldi	r30, 0x0A	; 10
    119e:	f1 e0       	ldi	r31, 0x01	; 1
    11a0:	80 81       	ld	r24, Z
    11a2:	84 60       	ori	r24, 0x04	; 4
    11a4:	80 83       	st	Z, r24
  DDRL |= (1<<PL3);
    11a6:	80 81       	ld	r24, Z
    11a8:	88 60       	ori	r24, 0x08	; 8
    11aa:	80 83       	st	Z, r24
  DDRL |= (1<<PL4);
    11ac:	80 81       	ld	r24, Z
    11ae:	80 61       	ori	r24, 0x10	; 16
    11b0:	80 83       	st	Z, r24
  DDRC = 0xFF;
    11b2:	8f ef       	ldi	r24, 0xFF	; 255
    11b4:	87 b9       	out	0x07, r24	; 7
    11b6:	08 95       	ret

000011b8 <main>:
=======
     efa:	ea e0       	ldi	r30, 0x0A	; 10
     efc:	f1 e0       	ldi	r31, 0x01	; 1
     efe:	80 81       	ld	r24, Z
     f00:	84 60       	ori	r24, 0x04	; 4
     f02:	80 83       	st	Z, r24
  DDRL |= (1<<PL3);
     f04:	80 81       	ld	r24, Z
     f06:	88 60       	ori	r24, 0x08	; 8
     f08:	80 83       	st	Z, r24
  DDRL |= (1<<PL4);
     f0a:	80 81       	ld	r24, Z
     f0c:	80 61       	ori	r24, 0x10	; 16
     f0e:	80 83       	st	Z, r24
  DDRC = 0xFF;
     f10:	8f ef       	ldi	r24, 0xFF	; 255
     f12:	87 b9       	out	0x07, r24	; 7
     f14:	08 95       	ret

00000f16 <main>:
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
/**
  * OS main function
  */
int main()
{
   OS_Init();
<<<<<<< HEAD
    11b8:	5a dd       	rcall	.-1356   	; 0xc6e <OS_Init>
   Init_Debug_LEDs();
    11ba:	f0 df       	rcall	.-32     	; 0x119c <Init_Debug_LEDs>
=======
     f16:	43 dd       	rcall	.-1402   	; 0x99e <OS_Init>
   Init_Debug_LEDs();
     f18:	f0 df       	rcall	.-32     	; 0xefa <Init_Debug_LEDs>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
   // Here we create a task for a_main which should be defined externally to create
   // all tasks needed for the application, and then terminate.
   // #TODO this should be created as a system task once we implement this functionality
   Task_Create_Idle(Idle_Task, 0);
<<<<<<< HEAD
    11bc:	60 e0       	ldi	r22, 0x00	; 0
    11be:	70 e0       	ldi	r23, 0x00	; 0
    11c0:	8e ea       	ldi	r24, 0xAE	; 174
    11c2:	92 e0       	ldi	r25, 0x02	; 2
    11c4:	c1 de       	rcall	.-638    	; 0xf48 <Task_Create_Idle>
   Task_Create_System( a_main , PL2);
    11c6:	62 e0       	ldi	r22, 0x02	; 2
    11c8:	70 e0       	ldi	r23, 0x00	; 0
    11ca:	84 e8       	ldi	r24, 0x84	; 132
    11cc:	92 e0       	ldi	r25, 0x02	; 2
    11ce:	7f de       	rcall	.-770    	; 0xece <Task_Create_System>
   Timer_Init();
    11d0:	2a df       	rcall	.-428    	; 0x1026 <Timer_Init>
   OS_Start();
    11d2:	82 dd       	rcall	.-1276   	; 0xcd8 <OS_Start>
}
    11d4:	80 e0       	ldi	r24, 0x00	; 0
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	08 95       	ret

000011da <Bluetooth_UART_Init>:
    }
}

void Bluetooth_UART_Init(){   
    // Set baud rate to 19.2k
    UBRR1 = 103;
    11da:	87 e6       	ldi	r24, 0x67	; 103
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    11e2:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    
    // Enable receiver, transmitter
    UCSR1B = (1<<RXEN1) | (1<<TXEN1);
    11e6:	88 e1       	ldi	r24, 0x18	; 24
    11e8:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>

    // 8-bit data
    UCSR1C = ((1<<UCSZ11)|(1<<UCSZ10));
    11ec:	86 e0       	ldi	r24, 0x06	; 6
    11ee:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>

    // disable 2x speed
    UCSR1A &= ~(1<<U2X1);
    11f2:	e8 ec       	ldi	r30, 0xC8	; 200
    11f4:	f0 e0       	ldi	r31, 0x00	; 0
    11f6:	80 81       	ld	r24, Z
    11f8:	8d 7f       	andi	r24, 0xFD	; 253
    11fa:	80 83       	st	Z, r24
    11fc:	08 95       	ret

000011fe <Bluetooth_Send_Byte>:
}

void Bluetooth_Send_Byte(uint8_t data_out){      
    // Wait for empty transmit buffer
    while(!( UCSR1A & (1<<UDRE1)));
    11fe:	e8 ec       	ldi	r30, 0xC8	; 200
    1200:	f0 e0       	ldi	r31, 0x00	; 0
    1202:	90 81       	ld	r25, Z
    1204:	95 ff       	sbrs	r25, 5
    1206:	fd cf       	rjmp	.-6      	; 0x1202 <Bluetooth_Send_Byte+0x4>
    // Put data into buffer
    UDR1 = data_out;
    1208:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    120c:	08 95       	ret

0000120e <__tablejump2__>:
    120e:	ee 0f       	add	r30, r30
    1210:	ff 1f       	adc	r31, r31
    1212:	88 1f       	adc	r24, r24
    1214:	8b bf       	out	0x3b, r24	; 59
    1216:	07 90       	elpm	r0, Z+
    1218:	f6 91       	elpm	r31, Z
    121a:	e0 2d       	mov	r30, r0
    121c:	19 94       	eijmp

0000121e <_exit>:
    121e:	f8 94       	cli

00001220 <__stop_program>:
    1220:	ff cf       	rjmp	.-2      	; 0x1220 <__stop_program>
=======
     f1a:	60 e0       	ldi	r22, 0x00	; 0
     f1c:	70 e0       	ldi	r23, 0x00	; 0
     f1e:	86 e4       	ldi	r24, 0x46	; 70
     f20:	91 e0       	ldi	r25, 0x01	; 1
     f22:	67 de       	rcall	.-818    	; 0xbf2 <Task_Create_Idle>
   Task_Create_System( a_main , PL2);
     f24:	62 e0       	ldi	r22, 0x02	; 2
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	80 e0       	ldi	r24, 0x00	; 0
     f2a:	99 e0       	ldi	r25, 0x09	; 9
     f2c:	25 de       	rcall	.-950    	; 0xb78 <Task_Create_System>
   Timer_Init();
     f2e:	2a df       	rcall	.-428    	; 0xd84 <Timer_Init>
   OS_Start();
     f30:	6b dd       	rcall	.-1322   	; 0xa08 <OS_Start>
}
     f32:	80 e0       	ldi	r24, 0x00	; 0
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	08 95       	ret

00000f38 <EnableTestPin>:
		Task_Next();
	}
}

void GetRoombaSensorDataTask()
{
     f38:	eb e0       	ldi	r30, 0x0B	; 11
     f3a:	f1 e0       	ldi	r31, 0x01	; 1
     f3c:	80 81       	ld	r24, Z
     f3e:	80 68       	ori	r24, 0x80	; 128
     f40:	80 83       	st	Z, r24
     f42:	2f ef       	ldi	r18, 0xFF	; 255
     f44:	83 ec       	ldi	r24, 0xC3	; 195
     f46:	99 e0       	ldi	r25, 0x09	; 9
     f48:	21 50       	subi	r18, 0x01	; 1
     f4a:	80 40       	sbci	r24, 0x00	; 0
     f4c:	90 40       	sbci	r25, 0x00	; 0
     f4e:	e1 f7       	brne	.-8      	; 0xf48 <EnableTestPin+0x10>
     f50:	00 c0       	rjmp	.+0      	; 0xf52 <EnableTestPin+0x1a>
     f52:	00 00       	nop
     f54:	08 95       	ret

00000f56 <EnableLaserPin>:
     f56:	46 9a       	sbi	0x08, 6	; 8
     f58:	08 95       	ret

00000f5a <DisableLaserPin>:
     f5a:	46 98       	cbi	0x08, 6	; 8
     f5c:	08 95       	ret

00000f5e <Servo_Init>:
     f5e:	e1 e0       	ldi	r30, 0x01	; 1
     f60:	f1 e0       	ldi	r31, 0x01	; 1
     f62:	80 81       	ld	r24, Z
     f64:	88 60       	ori	r24, 0x08	; 8
     f66:	80 83       	st	Z, r24
     f68:	e0 ea       	ldi	r30, 0xA0	; 160
     f6a:	f0 e0       	ldi	r31, 0x00	; 0
     f6c:	80 81       	ld	r24, Z
     f6e:	82 6a       	ori	r24, 0xA2	; 162
     f70:	80 83       	st	Z, r24
     f72:	e1 ea       	ldi	r30, 0xA1	; 161
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	80 81       	ld	r24, Z
     f78:	8b 61       	ori	r24, 0x1B	; 27
     f7a:	80 83       	st	Z, r24
     f7c:	87 e8       	ldi	r24, 0x87	; 135
     f7e:	93 e1       	ldi	r25, 0x13	; 19
     f80:	90 93 a7 00 	sts	0x00A7, r25	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     f84:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     f88:	8c e3       	ldi	r24, 0x3C	; 60
     f8a:	91 e0       	ldi	r25, 0x01	; 1
     f8c:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     f90:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     f94:	08 95       	ret

00000f96 <InitQueue>:
     f96:	fc 01       	movw	r30, r24
     f98:	9c 01       	movw	r18, r24
     f9a:	20 5e       	subi	r18, 0xE0	; 224
     f9c:	3f 4f       	sbci	r19, 0xFF	; 255
     f9e:	8f ef       	ldi	r24, 0xFF	; 255
     fa0:	9f ef       	ldi	r25, 0xFF	; 255
     fa2:	81 93       	st	Z+, r24
     fa4:	91 93       	st	Z+, r25
     fa6:	e2 17       	cp	r30, r18
     fa8:	f3 07       	cpc	r31, r19
     faa:	d9 f7       	brne	.-10     	; 0xfa2 <InitQueue+0xc>
     fac:	08 95       	ret

00000fae <Enqueue>:
     fae:	da 01       	movw	r26, r20
     fb0:	2d 91       	ld	r18, X+
     fb2:	3c 91       	ld	r19, X
     fb4:	11 97       	sbiw	r26, 0x01	; 1
     fb6:	2f 30       	cpi	r18, 0x0F	; 15
     fb8:	31 05       	cpc	r19, r1
     fba:	69 f0       	breq	.+26     	; 0xfd6 <Enqueue+0x28>
     fbc:	22 0f       	add	r18, r18
     fbe:	33 1f       	adc	r19, r19
     fc0:	fc 01       	movw	r30, r24
     fc2:	e2 0f       	add	r30, r18
     fc4:	f3 1f       	adc	r31, r19
     fc6:	71 83       	std	Z+1, r23	; 0x01
     fc8:	60 83       	st	Z, r22
     fca:	8d 91       	ld	r24, X+
     fcc:	9c 91       	ld	r25, X
     fce:	11 97       	sbiw	r26, 0x01	; 1
     fd0:	01 96       	adiw	r24, 0x01	; 1
     fd2:	8d 93       	st	X+, r24
     fd4:	9c 93       	st	X, r25
     fd6:	08 95       	ret

00000fd8 <BluetoothReceiveTask>:
     fd8:	c8 ec       	ldi	r28, 0xC8	; 200
     fda:	d0 e0       	ldi	r29, 0x00	; 0
     fdc:	88 81       	ld	r24, Y
     fde:	88 23       	and	r24, r24
     fe0:	0c f0       	brlt	.+2      	; 0xfe4 <BluetoothReceiveTask+0xc>
     fe2:	44 c0       	rjmp	.+136    	; 0x106c <BluetoothReceiveTask+0x94>
     fe4:	8b d1       	rcall	.+790    	; 0x12fc <Bluetooth_Receive_Byte>
     fe6:	90 91 78 17 	lds	r25, 0x1778	; 0x801778 <LASER>
     fea:	89 13       	cpse	r24, r25
     fec:	10 c0       	rjmp	.+32     	; 0x100e <BluetoothReceiveTask+0x36>
     fee:	86 d1       	rcall	.+780    	; 0x12fc <Bluetooth_Receive_Byte>
     ff0:	68 2f       	mov	r22, r24
     ff2:	70 e0       	ldi	r23, 0x00	; 0
     ff4:	49 ec       	ldi	r20, 0xC9	; 201
     ff6:	57 e1       	ldi	r21, 0x17	; 23
     ff8:	8d e7       	ldi	r24, 0x7D	; 125
     ffa:	97 e1       	ldi	r25, 0x17	; 23
     ffc:	d8 df       	rcall	.-80     	; 0xfae <Enqueue>
     ffe:	60 e0       	ldi	r22, 0x00	; 0
    1000:	70 e0       	ldi	r23, 0x00	; 0
    1002:	80 91 9d 17 	lds	r24, 0x179D	; 0x80179d <laserChan>
    1006:	90 91 9e 17 	lds	r25, 0x179E	; 0x80179e <laserChan+0x1>
    100a:	7e de       	rcall	.-772    	; 0xd08 <Send>
    100c:	2f c0       	rjmp	.+94     	; 0x106c <BluetoothReceiveTask+0x94>
    100e:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <SERVO>
    1012:	89 13       	cpse	r24, r25
    1014:	13 c0       	rjmp	.+38     	; 0x103c <BluetoothReceiveTask+0x64>
    1016:	72 d1       	rcall	.+740    	; 0x12fc <Bluetooth_Receive_Byte>
    1018:	18 2f       	mov	r17, r24
    101a:	70 d1       	rcall	.+736    	; 0x12fc <Bluetooth_Receive_Byte>
    101c:	61 2f       	mov	r22, r17
    101e:	70 e0       	ldi	r23, 0x00	; 0
    1020:	78 2b       	or	r23, r24
    1022:	43 ec       	ldi	r20, 0xC3	; 195
    1024:	57 e1       	ldi	r21, 0x17	; 23
    1026:	8f e9       	ldi	r24, 0x9F	; 159
    1028:	97 e1       	ldi	r25, 0x17	; 23
    102a:	c1 df       	rcall	.-126    	; 0xfae <Enqueue>
    102c:	60 e0       	ldi	r22, 0x00	; 0
    102e:	70 e0       	ldi	r23, 0x00	; 0
    1030:	80 91 c1 17 	lds	r24, 0x17C1	; 0x8017c1 <servoChan>
    1034:	90 91 c2 17 	lds	r25, 0x17C2	; 0x8017c2 <servoChan+0x1>
    1038:	67 de       	rcall	.-818    	; 0xd08 <Send>
    103a:	18 c0       	rjmp	.+48     	; 0x106c <BluetoothReceiveTask+0x94>
    103c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <ROOMBA>
    1040:	89 13       	cpse	r24, r25
    1042:	10 c0       	rjmp	.+32     	; 0x1064 <BluetoothReceiveTask+0x8c>
    1044:	5b d1       	rcall	.+694    	; 0x12fc <Bluetooth_Receive_Byte>
    1046:	68 2f       	mov	r22, r24
    1048:	70 e0       	ldi	r23, 0x00	; 0
    104a:	44 ef       	ldi	r20, 0xF4	; 244
    104c:	57 e1       	ldi	r21, 0x17	; 23
    104e:	8d ec       	ldi	r24, 0xCD	; 205
    1050:	97 e1       	ldi	r25, 0x17	; 23
    1052:	ad df       	rcall	.-166    	; 0xfae <Enqueue>
    1054:	60 e0       	ldi	r22, 0x00	; 0
    1056:	70 e0       	ldi	r23, 0x00	; 0
    1058:	80 91 ef 17 	lds	r24, 0x17EF	; 0x8017ef <roombaChan>
    105c:	90 91 f0 17 	lds	r25, 0x17F0	; 0x8017f0 <roombaChan+0x1>
    1060:	53 de       	rcall	.-858    	; 0xd08 <Send>
    1062:	04 c0       	rjmp	.+8      	; 0x106c <BluetoothReceiveTask+0x94>
    1064:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <LCD>
    1068:	89 13       	cpse	r24, r25
    106a:	b8 cf       	rjmp	.-144    	; 0xfdc <BluetoothReceiveTask+0x4>
    106c:	18 de       	rcall	.-976    	; 0xc9e <Task_Next>
    106e:	b6 cf       	rjmp	.-148    	; 0xfdc <BluetoothReceiveTask+0x4>

00001070 <Dequeue>:
    1070:	dc 01       	movw	r26, r24
    1072:	5c 91       	ld	r21, X
    1074:	11 96       	adiw	r26, 0x01	; 1
    1076:	4c 91       	ld	r20, X
    1078:	11 97       	sbiw	r26, 0x01	; 1
    107a:	8f ef       	ldi	r24, 0xFF	; 255
    107c:	9f ef       	ldi	r25, 0xFF	; 255
    107e:	11 96       	adiw	r26, 0x01	; 1
    1080:	9c 93       	st	X, r25
    1082:	8e 93       	st	-X, r24
    1084:	12 96       	adiw	r26, 0x02	; 2
    1086:	2d 91       	ld	r18, X+
    1088:	3c 91       	ld	r19, X
    108a:	13 97       	sbiw	r26, 0x03	; 3
    108c:	2f 3f       	cpi	r18, 0xFF	; 255
    108e:	8f ef       	ldi	r24, 0xFF	; 255
    1090:	38 07       	cpc	r19, r24
    1092:	79 f0       	breq	.+30     	; 0x10b2 <Dequeue+0x42>
    1094:	fd 01       	movw	r30, r26
    1096:	cd 01       	movw	r24, r26
    1098:	4c 96       	adiw	r24, 0x1c	; 28
    109a:	03 c0       	rjmp	.+6      	; 0x10a2 <Dequeue+0x32>
    109c:	e8 17       	cp	r30, r24
    109e:	f9 07       	cpc	r31, r25
    10a0:	89 f0       	breq	.+34     	; 0x10c4 <Dequeue+0x54>
    10a2:	21 93       	st	Z+, r18
    10a4:	31 93       	st	Z+, r19
    10a6:	22 81       	ldd	r18, Z+2	; 0x02
    10a8:	33 81       	ldd	r19, Z+3	; 0x03
    10aa:	2f 3f       	cpi	r18, 0xFF	; 255
    10ac:	af ef       	ldi	r26, 0xFF	; 255
    10ae:	3a 07       	cpc	r19, r26
    10b0:	a9 f7       	brne	.-22     	; 0x109c <Dequeue+0x2c>
    10b2:	fb 01       	movw	r30, r22
    10b4:	80 81       	ld	r24, Z
    10b6:	91 81       	ldd	r25, Z+1	; 0x01
    10b8:	01 97       	sbiw	r24, 0x01	; 1
    10ba:	91 83       	std	Z+1, r25	; 0x01
    10bc:	80 83       	st	Z, r24
    10be:	85 2f       	mov	r24, r21
    10c0:	94 2f       	mov	r25, r20
    10c2:	08 95       	ret
    10c4:	8f ef       	ldi	r24, 0xFF	; 255
    10c6:	9f ef       	ldi	r25, 0xFF	; 255
    10c8:	08 95       	ret

000010ca <LaserTask>:
    10ca:	cd e7       	ldi	r28, 0x7D	; 125
    10cc:	d7 e1       	ldi	r29, 0x17	; 23
    10ce:	80 91 9d 17 	lds	r24, 0x179D	; 0x80179d <laserChan>
    10d2:	90 91 9e 17 	lds	r25, 0x179E	; 0x80179e <laserChan+0x1>
    10d6:	33 de       	rcall	.-922    	; 0xd3e <Recv>
    10d8:	28 81       	ld	r18, Y
    10da:	39 81       	ldd	r19, Y+1	; 0x01
    10dc:	2f 3f       	cpi	r18, 0xFF	; 255
    10de:	3f 4f       	sbci	r19, 0xFF	; 255
    10e0:	b9 f0       	breq	.+46     	; 0x1110 <LaserTask+0x46>
    10e2:	69 ec       	ldi	r22, 0xC9	; 201
    10e4:	77 e1       	ldi	r23, 0x17	; 23
    10e6:	ce 01       	movw	r24, r28
    10e8:	c3 df       	rcall	.-122    	; 0x1070 <Dequeue>
    10ea:	90 93 c8 17 	sts	0x17C8, r25	; 0x8017c8 <laserState+0x1>
    10ee:	80 93 c7 17 	sts	0x17C7, r24	; 0x8017c7 <laserState>
    10f2:	80 91 c7 17 	lds	r24, 0x17C7	; 0x8017c7 <laserState>
    10f6:	90 91 c8 17 	lds	r25, 0x17C8	; 0x8017c8 <laserState+0x1>
    10fa:	01 97       	sbiw	r24, 0x01	; 1
    10fc:	11 f4       	brne	.+4      	; 0x1102 <LaserTask+0x38>
    10fe:	2b df       	rcall	.-426    	; 0xf56 <EnableLaserPin>
    1100:	07 c0       	rjmp	.+14     	; 0x1110 <LaserTask+0x46>
    1102:	80 91 c7 17 	lds	r24, 0x17C7	; 0x8017c7 <laserState>
    1106:	90 91 c8 17 	lds	r25, 0x17C8	; 0x8017c8 <laserState+0x1>
    110a:	89 2b       	or	r24, r25
    110c:	01 f7       	brne	.-64     	; 0x10ce <LaserTask+0x4>
    110e:	25 df       	rcall	.-438    	; 0xf5a <DisableLaserPin>
    1110:	c6 dd       	rcall	.-1140   	; 0xc9e <Task_Next>
    1112:	dd cf       	rjmp	.-70     	; 0x10ce <LaserTask+0x4>

00001114 <ServoTask>:
    1114:	cf e9       	ldi	r28, 0x9F	; 159
    1116:	d7 e1       	ldi	r29, 0x17	; 23
    1118:	08 ea       	ldi	r16, 0xA8	; 168
    111a:	10 e0       	ldi	r17, 0x00	; 0
    111c:	80 91 c1 17 	lds	r24, 0x17C1	; 0x8017c1 <servoChan>
    1120:	90 91 c2 17 	lds	r25, 0x17C2	; 0x8017c2 <servoChan+0x1>
    1124:	0c de       	rcall	.-1000   	; 0xd3e <Recv>
    1126:	28 81       	ld	r18, Y
    1128:	39 81       	ldd	r19, Y+1	; 0x01
    112a:	2f 3f       	cpi	r18, 0xFF	; 255
    112c:	3f 4f       	sbci	r19, 0xFF	; 255
    112e:	09 f4       	brne	.+2      	; 0x1132 <ServoTask+0x1e>
    1130:	65 c0       	rjmp	.+202    	; 0x11fc <ServoTask+0xe8>
    1132:	02 df       	rcall	.-508    	; 0xf38 <EnableTestPin>
    1134:	63 ec       	ldi	r22, 0xC3	; 195
    1136:	77 e1       	ldi	r23, 0x17	; 23
    1138:	ce 01       	movw	r24, r28
    113a:	9a df       	rcall	.-204    	; 0x1070 <Dequeue>
    113c:	90 93 ee 17 	sts	0x17EE, r25	; 0x8017ee <servoState+0x1>
    1140:	80 93 ed 17 	sts	0x17ED, r24	; 0x8017ed <servoState>
    1144:	80 91 ed 17 	lds	r24, 0x17ED	; 0x8017ed <servoState>
    1148:	90 91 ee 17 	lds	r25, 0x17EE	; 0x8017ee <servoState+0x1>
    114c:	8f 3f       	cpi	r24, 0xFF	; 255
    114e:	91 40       	sbci	r25, 0x01	; 1
    1150:	44 f1       	brlt	.+80     	; 0x11a2 <ServoTask+0x8e>
    1152:	80 91 cb 17 	lds	r24, 0x17CB	; 0x8017cb <prevServoState>
    1156:	90 91 cc 17 	lds	r25, 0x17CC	; 0x8017cc <prevServoState+0x1>
    115a:	83 39       	cpi	r24, 0x93	; 147
    115c:	91 05       	cpc	r25, r1
    115e:	0c f1       	brlt	.+66     	; 0x11a2 <ServoTask+0x8e>
    1160:	80 91 ed 17 	lds	r24, 0x17ED	; 0x8017ed <servoState>
    1164:	90 91 ee 17 	lds	r25, 0x17EE	; 0x8017ee <servoState+0x1>
    1168:	89 3e       	cpi	r24, 0xE9	; 233
    116a:	93 40       	sbci	r25, 0x03	; 3
    116c:	4c f0       	brlt	.+18     	; 0x1180 <ServoTask+0x6c>
    116e:	80 91 cb 17 	lds	r24, 0x17CB	; 0x8017cb <prevServoState>
    1172:	90 91 cc 17 	lds	r25, 0x17CC	; 0x8017cc <prevServoState+0x1>
    1176:	05 97       	sbiw	r24, 0x05	; 5
    1178:	90 93 cc 17 	sts	0x17CC, r25	; 0x8017cc <prevServoState+0x1>
    117c:	80 93 cb 17 	sts	0x17CB, r24	; 0x8017cb <prevServoState>
    1180:	80 91 cb 17 	lds	r24, 0x17CB	; 0x8017cb <prevServoState>
    1184:	90 91 cc 17 	lds	r25, 0x17CC	; 0x8017cc <prevServoState+0x1>
    1188:	01 97       	sbiw	r24, 0x01	; 1
    118a:	90 93 cc 17 	sts	0x17CC, r25	; 0x8017cc <prevServoState+0x1>
    118e:	80 93 cb 17 	sts	0x17CB, r24	; 0x8017cb <prevServoState>
    1192:	80 91 cb 17 	lds	r24, 0x17CB	; 0x8017cb <prevServoState>
    1196:	90 91 cc 17 	lds	r25, 0x17CC	; 0x8017cc <prevServoState+0x1>
    119a:	f8 01       	movw	r30, r16
    119c:	91 83       	std	Z+1, r25	; 0x01
    119e:	80 83       	st	Z, r24
    11a0:	2d c0       	rjmp	.+90     	; 0x11fc <ServoTask+0xe8>
    11a2:	80 91 ed 17 	lds	r24, 0x17ED	; 0x8017ed <servoState>
    11a6:	90 91 ee 17 	lds	r25, 0x17EE	; 0x8017ee <servoState+0x1>
    11aa:	8a 3e       	cpi	r24, 0xEA	; 234
    11ac:	91 40       	sbci	r25, 0x01	; 1
    11ae:	34 f5       	brge	.+76     	; 0x11fc <ServoTask+0xe8>
    11b0:	80 91 cb 17 	lds	r24, 0x17CB	; 0x8017cb <prevServoState>
    11b4:	90 91 cc 17 	lds	r25, 0x17CC	; 0x8017cc <prevServoState+0x1>
    11b8:	86 3e       	cpi	r24, 0xE6	; 230
    11ba:	91 40       	sbci	r25, 0x01	; 1
    11bc:	fc f4       	brge	.+62     	; 0x11fc <ServoTask+0xe8>
    11be:	80 91 ed 17 	lds	r24, 0x17ED	; 0x8017ed <servoState>
    11c2:	90 91 ee 17 	lds	r25, 0x17EE	; 0x8017ee <servoState+0x1>
    11c6:	44 97       	sbiw	r24, 0x14	; 20
    11c8:	4c f4       	brge	.+18     	; 0x11dc <ServoTask+0xc8>
    11ca:	80 91 cb 17 	lds	r24, 0x17CB	; 0x8017cb <prevServoState>
    11ce:	90 91 cc 17 	lds	r25, 0x17CC	; 0x8017cc <prevServoState+0x1>
    11d2:	05 96       	adiw	r24, 0x05	; 5
    11d4:	90 93 cc 17 	sts	0x17CC, r25	; 0x8017cc <prevServoState+0x1>
    11d8:	80 93 cb 17 	sts	0x17CB, r24	; 0x8017cb <prevServoState>
    11dc:	80 91 cb 17 	lds	r24, 0x17CB	; 0x8017cb <prevServoState>
    11e0:	90 91 cc 17 	lds	r25, 0x17CC	; 0x8017cc <prevServoState+0x1>
    11e4:	01 96       	adiw	r24, 0x01	; 1
    11e6:	90 93 cc 17 	sts	0x17CC, r25	; 0x8017cc <prevServoState+0x1>
    11ea:	80 93 cb 17 	sts	0x17CB, r24	; 0x8017cb <prevServoState>
    11ee:	80 91 cb 17 	lds	r24, 0x17CB	; 0x8017cb <prevServoState>
    11f2:	90 91 cc 17 	lds	r25, 0x17CC	; 0x8017cc <prevServoState+0x1>
    11f6:	f8 01       	movw	r30, r16
    11f8:	91 83       	std	Z+1, r25	; 0x01
    11fa:	80 83       	st	Z, r24
    11fc:	50 dd       	rcall	.-1376   	; 0xc9e <Task_Next>
    11fe:	8e cf       	rjmp	.-228    	; 0x111c <ServoTask+0x8>

00001200 <a_main>:


void a_main()
{
	//Initialize ports
	DDRL |= _BV(LASERPIN);
    1200:	ea e0       	ldi	r30, 0x0A	; 10
    1202:	f1 e0       	ldi	r31, 0x01	; 1
    1204:	80 81       	ld	r24, Z
    1206:	80 64       	ori	r24, 0x40	; 64
    1208:	80 83       	st	Z, r24
	PORTL &= ~_BV(LASERPIN);
    120a:	eb e0       	ldi	r30, 0x0B	; 11
    120c:	f1 e0       	ldi	r31, 0x01	; 1
    120e:	80 81       	ld	r24, Z
    1210:	8f 7b       	andi	r24, 0xBF	; 191
    1212:	80 83       	st	Z, r24

	//Test pin 42
	PORTL &= ~_BV(PL7);
    1214:	80 81       	ld	r24, Z
    1216:	8f 77       	andi	r24, 0x7F	; 127
    1218:	80 83       	st	Z, r24

	Bluetooth_UART_Init();
    121a:	5e d0       	rcall	.+188    	; 0x12d8 <Bluetooth_UART_Init>
	Roomba_UART_Init();
    121c:	4b d0       	rcall	.+150    	; 0x12b4 <Roomba_UART_Init>
	Servo_Init();
    121e:	9f de       	rcall	.-706    	; 0xf5e <Servo_Init>

	servoState = SERVO_DEFAULT_POS;
    1220:	8c e3       	ldi	r24, 0x3C	; 60
    1222:	91 e0       	ldi	r25, 0x01	; 1
    1224:	90 93 ee 17 	sts	0x17EE, r25	; 0x8017ee <servoState+0x1>
    1228:	80 93 ed 17 	sts	0x17ED, r24	; 0x8017ed <servoState>
	prevServoState = SERVO_DEFAULT_POS;
    122c:	90 93 cc 17 	sts	0x17CC, r25	; 0x8017cc <prevServoState+0x1>
    1230:	80 93 cb 17 	sts	0x17CB, r24	; 0x8017cb <prevServoState>

	laserTail = 0;
    1234:	10 92 ca 17 	sts	0x17CA, r1	; 0x8017ca <laserTail+0x1>
    1238:	10 92 c9 17 	sts	0x17C9, r1	; 0x8017c9 <laserTail>
	roombaTail = 0;
    123c:	10 92 f5 17 	sts	0x17F5, r1	; 0x8017f5 <roombaTail+0x1>
    1240:	10 92 f4 17 	sts	0x17F4, r1	; 0x8017f4 <roombaTail>
	servoTail = 0;
    1244:	10 92 c4 17 	sts	0x17C4, r1	; 0x8017c4 <servoTail+0x1>
    1248:	10 92 c3 17 	sts	0x17C3, r1	; 0x8017c3 <servoTail>

	laserChan = Chan_Init();
    124c:	41 dd       	rcall	.-1406   	; 0xcd0 <Chan_Init>
    124e:	90 93 9e 17 	sts	0x179E, r25	; 0x80179e <laserChan+0x1>
    1252:	80 93 9d 17 	sts	0x179D, r24	; 0x80179d <laserChan>
	roombaChan = Chan_Init();
    1256:	3c dd       	rcall	.-1416   	; 0xcd0 <Chan_Init>
    1258:	90 93 f0 17 	sts	0x17F0, r25	; 0x8017f0 <roombaChan+0x1>
    125c:	80 93 ef 17 	sts	0x17EF, r24	; 0x8017ef <roombaChan>
	servoChan = Chan_Init();
    1260:	37 dd       	rcall	.-1426   	; 0xcd0 <Chan_Init>
    1262:	90 93 c2 17 	sts	0x17C2, r25	; 0x8017c2 <servoChan+0x1>
    1266:	80 93 c1 17 	sts	0x17C1, r24	; 0x8017c1 <servoChan>

	InitQueue(laserQueue);
    126a:	8d e7       	ldi	r24, 0x7D	; 125
    126c:	97 e1       	ldi	r25, 0x17	; 23
    126e:	93 de       	rcall	.-730    	; 0xf96 <InitQueue>
	InitQueue(roombaQueue);
    1270:	8d ec       	ldi	r24, 0xCD	; 205
    1272:	97 e1       	ldi	r25, 0x17	; 23
    1274:	90 de       	rcall	.-736    	; 0xf96 <InitQueue>
	InitQueue(servoQueue);
    1276:	8f e9       	ldi	r24, 0x9F	; 159
    1278:	97 e1       	ldi	r25, 0x17	; 23
    127a:	8d de       	rcall	.-742    	; 0xf96 <InitQueue>

	

	//Create Tasks
	BluetoothReceivePID = Task_Create_System(BluetoothReceiveTask,1);
    127c:	61 e0       	ldi	r22, 0x01	; 1
    127e:	70 e0       	ldi	r23, 0x00	; 0
    1280:	8c ee       	ldi	r24, 0xEC	; 236
    1282:	97 e0       	ldi	r25, 0x07	; 7
    1284:	79 dc       	rcall	.-1806   	; 0xb78 <Task_Create_System>
    1286:	90 93 f2 17 	sts	0x17F2, r25	; 0x8017f2 <BluetoothReceivePID+0x1>
    128a:	80 93 f1 17 	sts	0x17F1, r24	; 0x8017f1 <BluetoothReceivePID>
	LaserTaskPID = Task_Create_System(LaserTask, 1);
    128e:	61 e0       	ldi	r22, 0x01	; 1
    1290:	70 e0       	ldi	r23, 0x00	; 0
    1292:	85 e6       	ldi	r24, 0x65	; 101
    1294:	98 e0       	ldi	r25, 0x08	; 8
    1296:	70 dc       	rcall	.-1824   	; 0xb78 <Task_Create_System>
    1298:	90 93 c0 17 	sts	0x17C0, r25	; 0x8017c0 <LaserTaskPID+0x1>
    129c:	80 93 bf 17 	sts	0x17BF, r24	; 0x8017bf <LaserTaskPID>
	ServoTaskPID = Task_Create_System(ServoTask,1);
    12a0:	61 e0       	ldi	r22, 0x01	; 1
    12a2:	70 e0       	ldi	r23, 0x00	; 0
    12a4:	8a e8       	ldi	r24, 0x8A	; 138
    12a6:	98 e0       	ldi	r25, 0x08	; 8
    12a8:	67 dc       	rcall	.-1842   	; 0xb78 <Task_Create_System>
    12aa:	90 93 c6 17 	sts	0x17C6, r25	; 0x8017c6 <ServoTaskPID+0x1>
    12ae:	80 93 c5 17 	sts	0x17C5, r24	; 0x8017c5 <ServoTaskPID>
    12b2:	08 95       	ret

000012b4 <Roomba_UART_Init>:

void Bluetooth_Send_Byte(uint8_t data_out){      
    // Wait for empty transmit buffer
    while(!( UCSR1A & (1<<UDRE1)));
    // Put data into buffer
    UDR1 = data_out;
    12b4:	83 e3       	ldi	r24, 0x33	; 51
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__TEXT_REGION_LENGTH__+0x700135>
    12bc:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__TEXT_REGION_LENGTH__+0x700134>
    12c0:	88 e1       	ldi	r24, 0x18	; 24
    12c2:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__TEXT_REGION_LENGTH__+0x700131>
    12c6:	86 e0       	ldi	r24, 0x06	; 6
    12c8:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__TEXT_REGION_LENGTH__+0x700132>
    12cc:	e0 e3       	ldi	r30, 0x30	; 48
    12ce:	f1 e0       	ldi	r31, 0x01	; 1
    12d0:	80 81       	ld	r24, Z
    12d2:	8d 7f       	andi	r24, 0xFD	; 253
    12d4:	80 83       	st	Z, r24
    12d6:	08 95       	ret

000012d8 <Bluetooth_UART_Init>:
    12d8:	87 e6       	ldi	r24, 0x67	; 103
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    12e0:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    12e4:	88 e1       	ldi	r24, 0x18	; 24
    12e6:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
    12ea:	86 e0       	ldi	r24, 0x06	; 6
    12ec:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
    12f0:	e8 ec       	ldi	r30, 0xC8	; 200
    12f2:	f0 e0       	ldi	r31, 0x00	; 0
    12f4:	80 81       	ld	r24, Z
    12f6:	8d 7f       	andi	r24, 0xFD	; 253
    12f8:	80 83       	st	Z, r24
    12fa:	08 95       	ret

000012fc <Bluetooth_Receive_Byte>:
}

unsigned char Bluetooth_Receive_Byte(){      
    // Wait for data to be received
    while(!( UCSR1A & (1<<RXC1)));
    12fc:	e8 ec       	ldi	r30, 0xC8	; 200
    12fe:	f0 e0       	ldi	r31, 0x00	; 0
    1300:	80 81       	ld	r24, Z
    1302:	88 23       	and	r24, r24
    1304:	ec f7       	brge	.-6      	; 0x1300 <Bluetooth_Receive_Byte+0x4>
    // Get and return data from buffer
    return UDR1;
    1306:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
}
    130a:	08 95       	ret

0000130c <__tablejump2__>:
    130c:	ee 0f       	add	r30, r30
    130e:	ff 1f       	adc	r31, r31
    1310:	88 1f       	adc	r24, r24
    1312:	8b bf       	out	0x3b, r24	; 59
    1314:	07 90       	elpm	r0, Z+
    1316:	f6 91       	elpm	r31, Z
    1318:	e0 2d       	mov	r30, r0
    131a:	19 94       	eijmp

0000131c <_exit>:
    131c:	f8 94       	cli

0000131e <__stop_program>:
    131e:	ff cf       	rjmp	.-2      	; 0x131e <__stop_program>
>>>>>>> f4d884054a274c72a6a23cdc789ffb85596d4a57
